2021-04-03 02:43:44,492:INFO:PyCaret Supervised Module
2021-04-03 02:43:44,492:INFO:ML Usecase: regression
2021-04-03 02:43:44,493:INFO:version 2.3.0
2021-04-03 02:43:44,493:INFO:Initializing setup()
2021-04-03 02:43:44,493:INFO:setup(target=Median income, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 02:43:44,493:INFO:Checking environment
2021-04-03 02:43:44,494:INFO:python_version: 3.9.1
2021-04-03 02:43:44,494:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 02:43:44,494:INFO:machine: AMD64
2021-04-03 02:43:44,494:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 02:43:44,496:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 02:43:44,497:INFO:Checking libraries
2021-04-03 02:43:44,497:INFO:pd==1.2.2
2021-04-03 02:43:44,497:INFO:numpy==1.19.5
2021-04-03 02:43:44,497:INFO:sklearn==0.23.2
2021-04-03 02:43:44,497:INFO:lightgbm==3.1.1
2021-04-03 02:43:44,498:WARNING:catboost not found
2021-04-03 02:43:44,523:INFO:xgboost==1.3.3
2021-04-03 02:43:44,908:INFO:mlflow==1.14.1
2021-04-03 02:43:44,908:INFO:Checking Exceptions
2021-04-03 02:43:44,909:INFO:Declaring global variables
2021-04-03 02:43:44,909:INFO:USI: 5eb0
2021-04-03 02:43:44,909:INFO:pycaret_globals: {'imputation_regressor', 'seed', 'X', 'fold_shuffle_param', 'stratify_param', 'target_param', 'fix_imbalance_method_param', '_all_models', 'display_container', 'experiment__', 'fold_param', 'master_model_container', 'iterative_imputation_iters_param', 'gpu_param', '_available_plots', '_ml_usecase', 'exp_name_log', 'y', 'data_before_preprocess', 'fold_groups_param', 'imputation_classifier', 'html_param', 'fix_imbalance_param', 'transform_target_param', 'USI', 'X_train', '_all_metrics', '_all_models_internal', 'pycaret_globals', 'create_model_container', 'n_jobs_param', 'logging_param', 'X_test', '_internal_pipeline', '_gpu_n_jobs_param', 'y_train', 'fold_generator', 'log_plots_param', 'y_test', 'prep_pipe', 'transform_target_method_param'}
2021-04-03 02:43:44,909:INFO:Preparing display monitor
2021-04-03 02:43:44,909:INFO:Preparing display monitor
2021-04-03 02:43:44,927:INFO:Importing libraries
2021-04-03 02:43:44,927:INFO:Copying data for preprocessing
2021-04-03 02:43:44,942:INFO:Declaring preprocessing parameters
2021-04-03 02:43:44,946:INFO:Creating preprocessing pipeline
2021-04-03 02:43:44,960:INFO:Preprocessing pipeline created successfully
2021-04-03 02:43:44,961:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 02:43:44,961:INFO:Creating global containers
2021-04-03 02:43:44,965:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 02:43:48,457:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 02:43:48,596:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 02:43:48,597:INFO:Creating grid variables
2021-04-03 02:43:48,620:INFO:Logging experiment in MLFlow
2021-04-03 02:43:49,012:INFO:SubProcess save_model() called ==================================
2021-04-03 02:43:49,034:INFO:Initializing save_model()
2021-04-03 02:43:49,036:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 02:43:49,037:INFO:Adding model into prep_pipe
2021-04-03 02:43:49,041:WARNING:Only Model saved as it was a pipeline.
2021-04-03 02:43:49,067:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 02:43:49,076:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 02:43:49,077:INFO:save_model() succesfully completed......................................
2021-04-03 02:43:49,185:INFO:SubProcess save_model() end ==================================
2021-04-03 02:43:49,325:INFO:create_model_container: 0
2021-04-03 02:43:49,328:INFO:master_model_container: 0
2021-04-03 02:43:49,330:INFO:display_container: 1
2021-04-03 02:43:49,343:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 02:43:49,344:INFO:setup() succesfully completed......................................
2021-04-03 02:43:53,824:INFO:PyCaret Supervised Module
2021-04-03 02:43:53,827:INFO:ML Usecase: regression
2021-04-03 02:43:53,828:INFO:version 2.3.0
2021-04-03 02:43:53,829:INFO:Initializing setup()
2021-04-03 02:43:53,831:INFO:setup(target=Median income, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 02:43:53,832:INFO:Checking environment
2021-04-03 02:43:53,833:INFO:python_version: 3.9.1
2021-04-03 02:43:53,834:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 02:43:53,836:INFO:machine: AMD64
2021-04-03 02:43:53,838:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 02:43:53,841:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 02:43:53,842:INFO:Checking libraries
2021-04-03 02:43:53,844:INFO:pd==1.2.2
2021-04-03 02:43:53,845:INFO:numpy==1.19.5
2021-04-03 02:43:53,846:INFO:sklearn==0.23.2
2021-04-03 02:43:53,847:INFO:lightgbm==3.1.1
2021-04-03 02:43:53,849:WARNING:catboost not found
2021-04-03 02:43:53,850:INFO:xgboost==1.3.3
2021-04-03 02:43:53,851:INFO:mlflow==1.14.1
2021-04-03 02:43:53,851:INFO:Checking Exceptions
2021-04-03 02:43:53,852:INFO:Declaring global variables
2021-04-03 02:43:53,853:INFO:USI: c0c3
2021-04-03 02:43:53,855:INFO:pycaret_globals: {'imputation_regressor', 'seed', 'X', 'fold_shuffle_param', 'stratify_param', 'target_param', 'fix_imbalance_method_param', '_all_models', 'display_container', 'experiment__', 'fold_param', 'master_model_container', 'iterative_imputation_iters_param', 'gpu_param', '_available_plots', '_ml_usecase', 'exp_name_log', 'y', 'data_before_preprocess', 'fold_groups_param', 'imputation_classifier', 'html_param', 'fix_imbalance_param', 'transform_target_param', 'USI', 'X_train', '_all_metrics', '_all_models_internal', 'pycaret_globals', 'create_model_container', 'n_jobs_param', 'logging_param', 'X_test', '_internal_pipeline', '_gpu_n_jobs_param', 'y_train', 'fold_generator', 'log_plots_param', 'y_test', 'prep_pipe', 'transform_target_method_param'}
2021-04-03 02:43:53,857:INFO:Preparing display monitor
2021-04-03 02:43:53,859:INFO:Preparing display monitor
2021-04-03 02:43:53,878:INFO:Importing libraries
2021-04-03 02:43:53,879:INFO:Copying data for preprocessing
2021-04-03 02:43:53,893:INFO:Declaring preprocessing parameters
2021-04-03 02:43:53,896:INFO:Creating preprocessing pipeline
2021-04-03 02:43:53,907:INFO:Preprocessing pipeline created successfully
2021-04-03 02:43:53,908:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 02:43:53,909:INFO:Creating global containers
2021-04-03 02:43:53,910:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 02:44:21,880:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 02:44:22,018:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 02:44:22,020:INFO:Creating grid variables
2021-04-03 02:44:22,044:INFO:Logging experiment in MLFlow
2021-04-03 02:44:22,048:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-03 02:44:22,059:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-03 02:44:22,214:INFO:SubProcess save_model() called ==================================
2021-04-03 02:44:22,241:INFO:Initializing save_model()
2021-04-03 02:44:22,243:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 02:44:22,246:INFO:Adding model into prep_pipe
2021-04-03 02:44:22,252:WARNING:Only Model saved as it was a pipeline.
2021-04-03 02:44:22,286:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 02:44:22,302:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 02:44:22,303:INFO:save_model() succesfully completed......................................
2021-04-03 02:44:22,433:INFO:SubProcess save_model() end ==================================
2021-04-03 02:44:22,501:INFO:create_model_container: 0
2021-04-03 02:44:22,502:INFO:master_model_container: 0
2021-04-03 02:44:22,503:INFO:display_container: 1
2021-04-03 02:44:22,512:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 02:44:22,513:INFO:setup() succesfully completed......................................
2021-04-03 02:44:37,071:INFO:Initializing compare_models()
2021-04-03 02:44:37,073:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-03 02:44:37,075:INFO:Checking exceptions
2021-04-03 02:44:37,076:INFO:Preparing display monitor
2021-04-03 02:44:37,079:INFO:Preparing display monitor
2021-04-03 02:44:37,116:INFO:Initializing Linear Regression
2021-04-03 02:44:37,117:INFO:Total runtime is 1.5596548716227215e-05 minutes
2021-04-03 02:44:37,133:INFO:SubProcess create_model() called ==================================
2021-04-03 02:44:37,134:INFO:Initializing create_model()
2021-04-03 02:44:37,135:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:44:37,137:INFO:Checking exceptions
2021-04-03 02:44:37,138:INFO:Importing libraries
2021-04-03 02:44:37,139:INFO:Copying training dataset
2021-04-03 02:44:37,142:INFO:Defining folds
2021-04-03 02:44:37,143:INFO:Declaring metric variables
2021-04-03 02:44:37,155:INFO:Importing untrained model
2021-04-03 02:44:37,169:INFO:Linear Regression Imported succesfully
2021-04-03 02:44:37,196:INFO:Starting cross validation
2021-04-03 02:44:37,203:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:44:44,145:INFO:Calculating mean and std
2021-04-03 02:44:44,147:INFO:Creating metrics dataframe
2021-04-03 02:44:44,161:INFO:Uploading results into container
2021-04-03 02:44:44,164:INFO:Uploading model into container now
2021-04-03 02:44:44,166:INFO:create_model_container: 1
2021-04-03 02:44:44,169:INFO:master_model_container: 1
2021-04-03 02:44:44,171:INFO:display_container: 2
2021-04-03 02:44:44,176:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 02:44:44,177:INFO:create_model() succesfully completed......................................
2021-04-03 02:44:44,371:INFO:SubProcess create_model() end ==================================
2021-04-03 02:44:44,372:INFO:Creating metrics dataframe
2021-04-03 02:44:44,395:INFO:Initializing Lasso Regression
2021-04-03 02:44:44,397:INFO:Total runtime is 0.12135327657063802 minutes
2021-04-03 02:44:44,415:INFO:SubProcess create_model() called ==================================
2021-04-03 02:44:44,417:INFO:Initializing create_model()
2021-04-03 02:44:44,419:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:44:44,420:INFO:Checking exceptions
2021-04-03 02:44:44,422:INFO:Importing libraries
2021-04-03 02:44:44,424:INFO:Copying training dataset
2021-04-03 02:44:44,433:INFO:Defining folds
2021-04-03 02:44:44,437:INFO:Declaring metric variables
2021-04-03 02:44:44,462:INFO:Importing untrained model
2021-04-03 02:44:44,481:INFO:Lasso Regression Imported succesfully
2021-04-03 02:44:44,513:INFO:Starting cross validation
2021-04-03 02:44:44,514:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:44:44,647:INFO:Calculating mean and std
2021-04-03 02:44:44,652:INFO:Creating metrics dataframe
2021-04-03 02:44:44,677:INFO:Uploading results into container
2021-04-03 02:44:44,683:INFO:Uploading model into container now
2021-04-03 02:44:44,687:INFO:create_model_container: 2
2021-04-03 02:44:44,689:INFO:master_model_container: 2
2021-04-03 02:44:44,690:INFO:display_container: 2
2021-04-03 02:44:44,696:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 02:44:44,698:INFO:create_model() succesfully completed......................................
2021-04-03 02:44:44,815:INFO:SubProcess create_model() end ==================================
2021-04-03 02:44:44,816:INFO:Creating metrics dataframe
2021-04-03 02:44:44,851:INFO:Initializing Ridge Regression
2021-04-03 02:44:44,852:INFO:Total runtime is 0.12892432610193888 minutes
2021-04-03 02:44:44,867:INFO:SubProcess create_model() called ==================================
2021-04-03 02:44:44,868:INFO:Initializing create_model()
2021-04-03 02:44:44,869:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:44:44,870:INFO:Checking exceptions
2021-04-03 02:44:44,872:INFO:Importing libraries
2021-04-03 02:44:44,875:INFO:Copying training dataset
2021-04-03 02:44:44,877:INFO:Defining folds
2021-04-03 02:44:44,878:INFO:Declaring metric variables
2021-04-03 02:44:44,893:INFO:Importing untrained model
2021-04-03 02:44:44,911:INFO:Ridge Regression Imported succesfully
2021-04-03 02:44:44,969:INFO:Starting cross validation
2021-04-03 02:44:44,972:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:44:45,188:INFO:Calculating mean and std
2021-04-03 02:44:45,192:INFO:Creating metrics dataframe
2021-04-03 02:44:45,204:INFO:Uploading results into container
2021-04-03 02:44:45,206:INFO:Uploading model into container now
2021-04-03 02:44:45,208:INFO:create_model_container: 3
2021-04-03 02:44:45,209:INFO:master_model_container: 3
2021-04-03 02:44:45,211:INFO:display_container: 2
2021-04-03 02:44:45,214:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 02:44:45,216:INFO:create_model() succesfully completed......................................
2021-04-03 02:44:45,386:INFO:SubProcess create_model() end ==================================
2021-04-03 02:44:45,387:INFO:Creating metrics dataframe
2021-04-03 02:44:45,422:INFO:Initializing Elastic Net
2021-04-03 02:44:45,425:INFO:Total runtime is 0.13848552306493123 minutes
2021-04-03 02:44:45,443:INFO:SubProcess create_model() called ==================================
2021-04-03 02:44:45,444:INFO:Initializing create_model()
2021-04-03 02:44:45,446:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:44:45,446:INFO:Checking exceptions
2021-04-03 02:44:45,448:INFO:Importing libraries
2021-04-03 02:44:45,448:INFO:Copying training dataset
2021-04-03 02:44:45,451:INFO:Defining folds
2021-04-03 02:44:45,451:INFO:Declaring metric variables
2021-04-03 02:44:45,470:INFO:Importing untrained model
2021-04-03 02:44:45,487:INFO:Elastic Net Imported succesfully
2021-04-03 02:44:45,519:INFO:Starting cross validation
2021-04-03 02:44:45,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:44:45,660:INFO:Calculating mean and std
2021-04-03 02:44:45,663:INFO:Creating metrics dataframe
2021-04-03 02:44:45,677:INFO:Uploading results into container
2021-04-03 02:44:45,678:INFO:Uploading model into container now
2021-04-03 02:44:45,680:INFO:create_model_container: 4
2021-04-03 02:44:45,684:INFO:master_model_container: 4
2021-04-03 02:44:45,686:INFO:display_container: 2
2021-04-03 02:44:45,691:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 02:44:45,693:INFO:create_model() succesfully completed......................................
2021-04-03 02:44:45,822:INFO:SubProcess create_model() end ==================================
2021-04-03 02:44:45,828:INFO:Creating metrics dataframe
2021-04-03 02:44:45,857:INFO:Initializing Least Angle Regression
2021-04-03 02:44:45,859:INFO:Total runtime is 0.14571491877237955 minutes
2021-04-03 02:44:45,874:INFO:SubProcess create_model() called ==================================
2021-04-03 02:44:45,878:INFO:Initializing create_model()
2021-04-03 02:44:45,879:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:44:45,880:INFO:Checking exceptions
2021-04-03 02:44:45,881:INFO:Importing libraries
2021-04-03 02:44:45,882:INFO:Copying training dataset
2021-04-03 02:44:45,884:INFO:Defining folds
2021-04-03 02:44:45,885:INFO:Declaring metric variables
2021-04-03 02:44:45,918:INFO:Importing untrained model
2021-04-03 02:44:45,938:INFO:Least Angle Regression Imported succesfully
2021-04-03 02:44:45,967:INFO:Starting cross validation
2021-04-03 02:44:45,969:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:44:47,157:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-03 02:44:47,163:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 02:44:47,166:INFO:Initializing create_model()
2021-04-03 02:44:47,167:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:44:47,169:INFO:Checking exceptions
2021-04-03 02:44:47,170:INFO:Importing libraries
2021-04-03 02:44:47,172:INFO:Copying training dataset
2021-04-03 02:44:47,177:INFO:Defining folds
2021-04-03 02:44:47,179:INFO:Declaring metric variables
2021-04-03 02:44:47,202:INFO:Importing untrained model
2021-04-03 02:44:47,218:INFO:Least Angle Regression Imported succesfully
2021-04-03 02:44:47,247:INFO:Starting cross validation
2021-04-03 02:44:47,248:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:44:54,044:ERROR:create_model() for lar raised an exception:
2021-04-03 02:44:54,046:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 02:44:54,047:INFO:Initializing Lasso Least Angle Regression
2021-04-03 02:44:54,048:INFO:Total runtime is 0.28220728238423665 minutes
2021-04-03 02:44:54,063:INFO:SubProcess create_model() called ==================================
2021-04-03 02:44:54,065:INFO:Initializing create_model()
2021-04-03 02:44:54,066:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:44:54,067:INFO:Checking exceptions
2021-04-03 02:44:54,069:INFO:Importing libraries
2021-04-03 02:44:54,070:INFO:Copying training dataset
2021-04-03 02:44:54,072:INFO:Defining folds
2021-04-03 02:44:54,074:INFO:Declaring metric variables
2021-04-03 02:44:54,090:INFO:Importing untrained model
2021-04-03 02:44:54,109:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-03 02:44:54,140:INFO:Starting cross validation
2021-04-03 02:44:54,142:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:45:00,151:INFO:Calculating mean and std
2021-04-03 02:45:00,156:INFO:Creating metrics dataframe
2021-04-03 02:45:00,168:INFO:Uploading results into container
2021-04-03 02:45:00,170:INFO:Uploading model into container now
2021-04-03 02:45:00,172:INFO:create_model_container: 5
2021-04-03 02:45:00,173:INFO:master_model_container: 5
2021-04-03 02:45:00,175:INFO:display_container: 2
2021-04-03 02:45:00,178:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-03 02:45:00,180:INFO:create_model() succesfully completed......................................
2021-04-03 02:45:00,332:INFO:SubProcess create_model() end ==================================
2021-04-03 02:45:00,332:INFO:Creating metrics dataframe
2021-04-03 02:45:00,359:INFO:Initializing Orthogonal Matching Pursuit
2021-04-03 02:45:00,360:INFO:Total runtime is 0.3874041477839152 minutes
2021-04-03 02:45:00,375:INFO:SubProcess create_model() called ==================================
2021-04-03 02:45:00,376:INFO:Initializing create_model()
2021-04-03 02:45:00,377:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:45:00,378:INFO:Checking exceptions
2021-04-03 02:45:00,379:INFO:Importing libraries
2021-04-03 02:45:00,381:INFO:Copying training dataset
2021-04-03 02:45:00,383:INFO:Defining folds
2021-04-03 02:45:00,385:INFO:Declaring metric variables
2021-04-03 02:45:00,398:INFO:Importing untrained model
2021-04-03 02:45:00,410:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-03 02:45:00,439:INFO:Starting cross validation
2021-04-03 02:45:00,444:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:45:00,531:INFO:Calculating mean and std
2021-04-03 02:45:00,536:INFO:Creating metrics dataframe
2021-04-03 02:45:00,546:INFO:Uploading results into container
2021-04-03 02:45:00,547:INFO:Uploading model into container now
2021-04-03 02:45:00,548:INFO:create_model_container: 6
2021-04-03 02:45:00,549:INFO:master_model_container: 6
2021-04-03 02:45:00,551:INFO:display_container: 2
2021-04-03 02:45:00,553:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-03 02:45:00,555:INFO:create_model() succesfully completed......................................
2021-04-03 02:45:00,671:INFO:SubProcess create_model() end ==================================
2021-04-03 02:45:00,673:INFO:Creating metrics dataframe
2021-04-03 02:45:00,709:INFO:Initializing Bayesian Ridge
2021-04-03 02:45:00,710:INFO:Total runtime is 0.393231197198232 minutes
2021-04-03 02:45:00,721:INFO:SubProcess create_model() called ==================================
2021-04-03 02:45:00,723:INFO:Initializing create_model()
2021-04-03 02:45:00,724:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:45:00,726:INFO:Checking exceptions
2021-04-03 02:45:00,728:INFO:Importing libraries
2021-04-03 02:45:00,729:INFO:Copying training dataset
2021-04-03 02:45:00,733:INFO:Defining folds
2021-04-03 02:45:00,735:INFO:Declaring metric variables
2021-04-03 02:45:00,749:INFO:Importing untrained model
2021-04-03 02:45:00,768:INFO:Bayesian Ridge Imported succesfully
2021-04-03 02:45:00,792:INFO:Starting cross validation
2021-04-03 02:45:00,794:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:45:00,900:INFO:Calculating mean and std
2021-04-03 02:45:00,903:INFO:Creating metrics dataframe
2021-04-03 02:45:00,912:INFO:Uploading results into container
2021-04-03 02:45:00,913:INFO:Uploading model into container now
2021-04-03 02:45:00,914:INFO:create_model_container: 7
2021-04-03 02:45:00,914:INFO:master_model_container: 7
2021-04-03 02:45:00,916:INFO:display_container: 2
2021-04-03 02:45:00,919:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 02:45:00,920:INFO:create_model() succesfully completed......................................
2021-04-03 02:45:01,024:INFO:SubProcess create_model() end ==================================
2021-04-03 02:45:01,026:INFO:Creating metrics dataframe
2021-04-03 02:45:01,054:INFO:Initializing Passive Aggressive Regressor
2021-04-03 02:45:01,056:INFO:Total runtime is 0.3990051666895549 minutes
2021-04-03 02:45:01,083:INFO:SubProcess create_model() called ==================================
2021-04-03 02:45:01,084:INFO:Initializing create_model()
2021-04-03 02:45:01,085:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:45:01,086:INFO:Checking exceptions
2021-04-03 02:45:01,087:INFO:Importing libraries
2021-04-03 02:45:01,090:INFO:Copying training dataset
2021-04-03 02:45:01,093:INFO:Defining folds
2021-04-03 02:45:01,095:INFO:Declaring metric variables
2021-04-03 02:45:01,106:INFO:Importing untrained model
2021-04-03 02:45:01,117:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-03 02:45:01,150:INFO:Starting cross validation
2021-04-03 02:45:01,157:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:45:01,330:INFO:Calculating mean and std
2021-04-03 02:45:01,334:INFO:Creating metrics dataframe
2021-04-03 02:45:01,346:INFO:Uploading results into container
2021-04-03 02:45:01,348:INFO:Uploading model into container now
2021-04-03 02:45:01,350:INFO:create_model_container: 8
2021-04-03 02:45:01,352:INFO:master_model_container: 8
2021-04-03 02:45:01,353:INFO:display_container: 2
2021-04-03 02:45:01,359:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:45:01,362:INFO:create_model() succesfully completed......................................
2021-04-03 02:45:01,516:INFO:SubProcess create_model() end ==================================
2021-04-03 02:45:01,518:INFO:Creating metrics dataframe
2021-04-03 02:45:01,550:INFO:Initializing Huber Regressor
2021-04-03 02:45:01,551:INFO:Total runtime is 0.4072561502456665 minutes
2021-04-03 02:45:01,566:INFO:SubProcess create_model() called ==================================
2021-04-03 02:45:01,568:INFO:Initializing create_model()
2021-04-03 02:45:01,569:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:45:01,569:INFO:Checking exceptions
2021-04-03 02:45:01,570:INFO:Importing libraries
2021-04-03 02:45:01,571:INFO:Copying training dataset
2021-04-03 02:45:01,573:INFO:Defining folds
2021-04-03 02:45:01,575:INFO:Declaring metric variables
2021-04-03 02:45:01,602:INFO:Importing untrained model
2021-04-03 02:45:01,615:INFO:Huber Regressor Imported succesfully
2021-04-03 02:45:01,638:INFO:Starting cross validation
2021-04-03 02:45:01,639:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:45:01,847:INFO:Calculating mean and std
2021-04-03 02:45:01,849:INFO:Creating metrics dataframe
2021-04-03 02:45:01,854:INFO:Uploading results into container
2021-04-03 02:45:01,855:INFO:Uploading model into container now
2021-04-03 02:45:01,856:INFO:create_model_container: 9
2021-04-03 02:45:01,859:INFO:master_model_container: 9
2021-04-03 02:45:01,861:INFO:display_container: 2
2021-04-03 02:45:01,864:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 02:45:01,865:INFO:create_model() succesfully completed......................................
2021-04-03 02:45:01,987:INFO:SubProcess create_model() end ==================================
2021-04-03 02:45:01,988:INFO:Creating metrics dataframe
2021-04-03 02:45:02,030:INFO:Initializing K Neighbors Regressor
2021-04-03 02:45:02,031:INFO:Total runtime is 0.41525039672851566 minutes
2021-04-03 02:45:02,043:INFO:SubProcess create_model() called ==================================
2021-04-03 02:45:02,045:INFO:Initializing create_model()
2021-04-03 02:45:02,046:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:45:02,046:INFO:Checking exceptions
2021-04-03 02:45:02,047:INFO:Importing libraries
2021-04-03 02:45:02,048:INFO:Copying training dataset
2021-04-03 02:45:02,050:INFO:Defining folds
2021-04-03 02:45:02,051:INFO:Declaring metric variables
2021-04-03 02:45:02,068:INFO:Importing untrained model
2021-04-03 02:45:02,081:INFO:K Neighbors Regressor Imported succesfully
2021-04-03 02:45:02,117:INFO:Starting cross validation
2021-04-03 02:45:02,118:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:45:02,246:INFO:Calculating mean and std
2021-04-03 02:45:02,248:INFO:Creating metrics dataframe
2021-04-03 02:45:02,253:INFO:Uploading results into container
2021-04-03 02:45:02,256:INFO:Uploading model into container now
2021-04-03 02:45:02,262:INFO:create_model_container: 10
2021-04-03 02:45:02,266:INFO:master_model_container: 10
2021-04-03 02:45:02,271:INFO:display_container: 2
2021-04-03 02:45:02,276:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-03 02:45:02,282:INFO:create_model() succesfully completed......................................
2021-04-03 02:45:02,388:INFO:SubProcess create_model() end ==================================
2021-04-03 02:45:02,394:INFO:Creating metrics dataframe
2021-04-03 02:45:02,428:INFO:Initializing Decision Tree Regressor
2021-04-03 02:45:02,429:INFO:Total runtime is 0.4218833168347677 minutes
2021-04-03 02:45:02,441:INFO:SubProcess create_model() called ==================================
2021-04-03 02:45:02,443:INFO:Initializing create_model()
2021-04-03 02:45:02,445:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:45:02,447:INFO:Checking exceptions
2021-04-03 02:45:02,447:INFO:Importing libraries
2021-04-03 02:45:02,449:INFO:Copying training dataset
2021-04-03 02:45:02,452:INFO:Defining folds
2021-04-03 02:45:02,452:INFO:Declaring metric variables
2021-04-03 02:45:02,468:INFO:Importing untrained model
2021-04-03 02:45:02,481:INFO:Decision Tree Regressor Imported succesfully
2021-04-03 02:45:02,518:INFO:Starting cross validation
2021-04-03 02:45:02,519:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:45:02,754:INFO:Calculating mean and std
2021-04-03 02:45:02,757:INFO:Creating metrics dataframe
2021-04-03 02:45:02,769:INFO:Uploading results into container
2021-04-03 02:45:02,771:INFO:Uploading model into container now
2021-04-03 02:45:02,773:INFO:create_model_container: 11
2021-04-03 02:45:02,776:INFO:master_model_container: 11
2021-04-03 02:45:02,781:INFO:display_container: 2
2021-04-03 02:45:02,785:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-03 02:45:02,786:INFO:create_model() succesfully completed......................................
2021-04-03 02:45:02,914:INFO:SubProcess create_model() end ==================================
2021-04-03 02:45:02,915:INFO:Creating metrics dataframe
2021-04-03 02:45:02,951:INFO:Initializing Random Forest Regressor
2021-04-03 02:45:02,953:INFO:Total runtime is 0.4306214213371277 minutes
2021-04-03 02:45:02,974:INFO:SubProcess create_model() called ==================================
2021-04-03 02:45:02,975:INFO:Initializing create_model()
2021-04-03 02:45:02,976:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:45:02,978:INFO:Checking exceptions
2021-04-03 02:45:02,978:INFO:Importing libraries
2021-04-03 02:45:02,981:INFO:Copying training dataset
2021-04-03 02:45:02,983:INFO:Defining folds
2021-04-03 02:45:02,984:INFO:Declaring metric variables
2021-04-03 02:45:03,001:INFO:Importing untrained model
2021-04-03 02:45:03,017:INFO:Random Forest Regressor Imported succesfully
2021-04-03 02:45:03,056:INFO:Starting cross validation
2021-04-03 02:45:03,056:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:45:04,086:INFO:Calculating mean and std
2021-04-03 02:45:04,098:INFO:Creating metrics dataframe
2021-04-03 02:45:04,109:INFO:Uploading results into container
2021-04-03 02:45:04,112:INFO:Uploading model into container now
2021-04-03 02:45:04,113:INFO:create_model_container: 12
2021-04-03 02:45:04,115:INFO:master_model_container: 12
2021-04-03 02:45:04,117:INFO:display_container: 2
2021-04-03 02:45:04,123:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 02:45:04,126:INFO:create_model() succesfully completed......................................
2021-04-03 02:45:04,272:INFO:SubProcess create_model() end ==================================
2021-04-03 02:45:04,273:INFO:Creating metrics dataframe
2021-04-03 02:45:04,314:INFO:Initializing Extra Trees Regressor
2021-04-03 02:45:04,315:INFO:Total runtime is 0.45332231918970745 minutes
2021-04-03 02:45:04,332:INFO:SubProcess create_model() called ==================================
2021-04-03 02:45:04,335:INFO:Initializing create_model()
2021-04-03 02:45:04,336:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:45:04,336:INFO:Checking exceptions
2021-04-03 02:45:04,338:INFO:Importing libraries
2021-04-03 02:45:04,338:INFO:Copying training dataset
2021-04-03 02:45:04,341:INFO:Defining folds
2021-04-03 02:45:04,342:INFO:Declaring metric variables
2021-04-03 02:45:04,353:INFO:Importing untrained model
2021-04-03 02:45:04,376:INFO:Extra Trees Regressor Imported succesfully
2021-04-03 02:45:04,411:INFO:Starting cross validation
2021-04-03 02:45:04,413:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:45:05,255:INFO:Calculating mean and std
2021-04-03 02:45:05,259:INFO:Creating metrics dataframe
2021-04-03 02:45:05,272:INFO:Uploading results into container
2021-04-03 02:45:05,276:INFO:Uploading model into container now
2021-04-03 02:45:05,276:INFO:create_model_container: 13
2021-04-03 02:45:05,277:INFO:master_model_container: 13
2021-04-03 02:45:05,279:INFO:display_container: 2
2021-04-03 02:45:05,284:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 02:45:05,286:INFO:create_model() succesfully completed......................................
2021-04-03 02:45:05,402:INFO:SubProcess create_model() end ==================================
2021-04-03 02:45:05,403:INFO:Creating metrics dataframe
2021-04-03 02:45:05,435:INFO:Initializing AdaBoost Regressor
2021-04-03 02:45:05,436:INFO:Total runtime is 0.4720045844713847 minutes
2021-04-03 02:45:05,451:INFO:SubProcess create_model() called ==================================
2021-04-03 02:45:05,453:INFO:Initializing create_model()
2021-04-03 02:45:05,454:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:45:05,456:INFO:Checking exceptions
2021-04-03 02:45:05,458:INFO:Importing libraries
2021-04-03 02:45:05,460:INFO:Copying training dataset
2021-04-03 02:45:05,463:INFO:Defining folds
2021-04-03 02:45:05,464:INFO:Declaring metric variables
2021-04-03 02:45:05,476:INFO:Importing untrained model
2021-04-03 02:45:05,489:INFO:AdaBoost Regressor Imported succesfully
2021-04-03 02:45:05,522:INFO:Starting cross validation
2021-04-03 02:45:05,529:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:45:05,964:INFO:Calculating mean and std
2021-04-03 02:45:05,965:INFO:Creating metrics dataframe
2021-04-03 02:45:05,970:INFO:Uploading results into container
2021-04-03 02:45:05,971:INFO:Uploading model into container now
2021-04-03 02:45:05,972:INFO:create_model_container: 14
2021-04-03 02:45:05,972:INFO:master_model_container: 14
2021-04-03 02:45:05,974:INFO:display_container: 2
2021-04-03 02:45:05,976:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-03 02:45:05,977:INFO:create_model() succesfully completed......................................
2021-04-03 02:45:06,064:INFO:SubProcess create_model() end ==================================
2021-04-03 02:45:06,065:INFO:Creating metrics dataframe
2021-04-03 02:45:06,090:INFO:Initializing Gradient Boosting Regressor
2021-04-03 02:45:06,094:INFO:Total runtime is 0.482967217763265 minutes
2021-04-03 02:45:06,110:INFO:SubProcess create_model() called ==================================
2021-04-03 02:45:06,111:INFO:Initializing create_model()
2021-04-03 02:45:06,112:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:45:06,114:INFO:Checking exceptions
2021-04-03 02:45:06,115:INFO:Importing libraries
2021-04-03 02:45:06,116:INFO:Copying training dataset
2021-04-03 02:45:06,117:INFO:Defining folds
2021-04-03 02:45:06,119:INFO:Declaring metric variables
2021-04-03 02:45:06,134:INFO:Importing untrained model
2021-04-03 02:45:06,149:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 02:45:06,182:INFO:Starting cross validation
2021-04-03 02:45:06,185:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:45:06,580:INFO:Calculating mean and std
2021-04-03 02:45:06,582:INFO:Creating metrics dataframe
2021-04-03 02:45:06,590:INFO:Uploading results into container
2021-04-03 02:45:06,596:INFO:Uploading model into container now
2021-04-03 02:45:06,597:INFO:create_model_container: 15
2021-04-03 02:45:06,598:INFO:master_model_container: 15
2021-04-03 02:45:06,600:INFO:display_container: 2
2021-04-03 02:45:06,606:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:45:06,610:INFO:create_model() succesfully completed......................................
2021-04-03 02:45:06,702:INFO:SubProcess create_model() end ==================================
2021-04-03 02:45:06,702:INFO:Creating metrics dataframe
2021-04-03 02:45:06,733:INFO:Initializing Extreme Gradient Boosting
2021-04-03 02:45:06,735:INFO:Total runtime is 0.4936431169509888 minutes
2021-04-03 02:45:06,749:INFO:SubProcess create_model() called ==================================
2021-04-03 02:45:06,750:INFO:Initializing create_model()
2021-04-03 02:45:06,751:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:45:06,752:INFO:Checking exceptions
2021-04-03 02:45:06,753:INFO:Importing libraries
2021-04-03 02:45:06,754:INFO:Copying training dataset
2021-04-03 02:45:06,756:INFO:Defining folds
2021-04-03 02:45:06,758:INFO:Declaring metric variables
2021-04-03 02:45:06,773:INFO:Importing untrained model
2021-04-03 02:45:06,788:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 02:45:06,823:INFO:Starting cross validation
2021-04-03 02:45:06,829:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:45:09,043:INFO:Calculating mean and std
2021-04-03 02:45:09,046:INFO:Creating metrics dataframe
2021-04-03 02:45:09,055:INFO:Uploading results into container
2021-04-03 02:45:09,056:INFO:Uploading model into container now
2021-04-03 02:45:09,061:INFO:create_model_container: 16
2021-04-03 02:45:09,064:INFO:master_model_container: 16
2021-04-03 02:45:09,065:INFO:display_container: 2
2021-04-03 02:45:09,073:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 02:45:09,076:INFO:create_model() succesfully completed......................................
2021-04-03 02:45:09,187:INFO:SubProcess create_model() end ==================================
2021-04-03 02:45:09,188:INFO:Creating metrics dataframe
2021-04-03 02:45:09,215:INFO:Initializing Light Gradient Boosting Machine
2021-04-03 02:45:09,216:INFO:Total runtime is 0.5350070556004842 minutes
2021-04-03 02:45:09,231:INFO:SubProcess create_model() called ==================================
2021-04-03 02:45:09,233:INFO:Initializing create_model()
2021-04-03 02:45:09,236:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D7F4DCEB0>, kwargs={})
2021-04-03 02:45:09,236:INFO:Checking exceptions
2021-04-03 02:45:09,237:INFO:Importing libraries
2021-04-03 02:45:09,238:INFO:Copying training dataset
2021-04-03 02:45:09,241:INFO:Defining folds
2021-04-03 02:45:09,241:INFO:Declaring metric variables
2021-04-03 02:45:09,254:INFO:Importing untrained model
2021-04-03 02:45:09,269:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-03 02:45:09,305:INFO:Starting cross validation
2021-04-03 02:45:09,311:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:45:10,214:INFO:Calculating mean and std
2021-04-03 02:45:10,217:INFO:Creating metrics dataframe
2021-04-03 02:45:10,228:INFO:Uploading results into container
2021-04-03 02:45:10,230:INFO:Uploading model into container now
2021-04-03 02:45:10,231:INFO:create_model_container: 17
2021-04-03 02:45:10,233:INFO:master_model_container: 17
2021-04-03 02:45:10,234:INFO:display_container: 2
2021-04-03 02:45:10,239:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-03 02:45:10,241:INFO:create_model() succesfully completed......................................
2021-04-03 02:45:10,355:INFO:SubProcess create_model() end ==================================
2021-04-03 02:45:10,356:INFO:Creating metrics dataframe
2021-04-03 02:45:10,408:INFO:Initializing create_model()
2021-04-03 02:45:10,409:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 02:45:10,410:INFO:Checking exceptions
2021-04-03 02:45:10,411:INFO:Importing libraries
2021-04-03 02:45:10,413:INFO:Copying training dataset
2021-04-03 02:45:10,414:INFO:Defining folds
2021-04-03 02:45:10,414:INFO:Declaring metric variables
2021-04-03 02:45:10,415:INFO:Importing untrained model
2021-04-03 02:45:10,416:INFO:Declaring custom model
2021-04-03 02:45:10,420:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 02:45:10,421:INFO:Cross validation set to False
2021-04-03 02:45:10,422:INFO:Fitting Model
2021-04-03 02:45:10,523:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:45:10,525:INFO:create_models() succesfully completed......................................
2021-04-03 02:45:10,634:INFO:Creating MLFlow logs
2021-04-03 02:45:10,648:INFO:Model: Gradient Boosting Regressor
2021-04-03 02:45:10,699:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 02:45:10,844:INFO:Initializing predict_model()
2021-04-03 02:45:10,846:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 02:45:10,846:INFO:Checking exceptions
2021-04-03 02:45:10,848:INFO:Preloading libraries
2021-04-03 02:45:11,110:INFO:Creating MLFlow logs
2021-04-03 02:45:11,128:INFO:Model: Extreme Gradient Boosting
2021-04-03 02:45:11,167:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-03 02:45:11,437:INFO:Creating MLFlow logs
2021-04-03 02:45:11,453:INFO:Model: Random Forest Regressor
2021-04-03 02:45:11,506:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 02:45:11,784:INFO:Creating MLFlow logs
2021-04-03 02:45:11,801:INFO:Model: Decision Tree Regressor
2021-04-03 02:45:11,868:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-03 02:45:12,213:INFO:Creating MLFlow logs
2021-04-03 02:45:12,228:INFO:Model: Extra Trees Regressor
2021-04-03 02:45:12,290:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 02:45:12,581:INFO:Creating MLFlow logs
2021-04-03 02:45:12,598:INFO:Model: Light Gradient Boosting Machine
2021-04-03 02:45:12,654:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-03 02:45:12,930:INFO:Creating MLFlow logs
2021-04-03 02:45:12,944:INFO:Model: AdaBoost Regressor
2021-04-03 02:45:13,007:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-03 02:45:13,242:INFO:Creating MLFlow logs
2021-04-03 02:45:13,254:INFO:Model: Huber Regressor
2021-04-03 02:45:13,306:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 02:45:13,577:INFO:Creating MLFlow logs
2021-04-03 02:45:13,596:INFO:Model: K Neighbors Regressor
2021-04-03 02:45:13,651:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-03 02:45:13,931:INFO:Creating MLFlow logs
2021-04-03 02:45:13,950:INFO:Model: Ridge Regression
2021-04-03 02:45:14,009:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 02:45:14,385:INFO:Creating MLFlow logs
2021-04-03 02:45:14,403:INFO:Model: Linear Regression
2021-04-03 02:45:14,452:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 02:45:14,881:INFO:Creating MLFlow logs
2021-04-03 02:45:14,902:INFO:Model: Bayesian Ridge
2021-04-03 02:45:14,968:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 02:45:15,227:INFO:Creating MLFlow logs
2021-04-03 02:45:15,241:INFO:Model: Orthogonal Matching Pursuit
2021-04-03 02:45:15,282:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-03 02:45:15,611:INFO:Creating MLFlow logs
2021-04-03 02:45:15,631:INFO:Model: Lasso Regression
2021-04-03 02:45:15,693:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 02:45:15,988:INFO:Creating MLFlow logs
2021-04-03 02:45:16,003:INFO:Model: Elastic Net
2021-04-03 02:45:16,053:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 02:45:16,417:INFO:Creating MLFlow logs
2021-04-03 02:45:16,433:INFO:Model: Least Angle Regression
2021-04-03 02:45:16,492:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-03 02:45:16,849:INFO:Creating MLFlow logs
2021-04-03 02:45:16,867:INFO:Model: Passive Aggressive Regressor
2021-04-03 02:45:16,940:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 02:45:17,314:INFO:create_model_container: 17
2021-04-03 02:45:17,315:INFO:master_model_container: 17
2021-04-03 02:45:17,317:INFO:display_container: 2
2021-04-03 02:45:17,320:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:45:17,322:INFO:compare_models() succesfully completed......................................
2021-04-03 02:45:28,072:INFO:Initializing create_model()
2021-04-03 02:45:28,075:INFO:create_model(estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-03 02:45:28,076:INFO:Checking exceptions
2021-04-03 02:45:28,077:INFO:Preparing display monitor
2021-04-03 02:45:28,104:INFO:Importing libraries
2021-04-03 02:45:28,106:INFO:Copying training dataset
2021-04-03 02:45:28,108:INFO:Defining folds
2021-04-03 02:45:28,109:INFO:Declaring metric variables
2021-04-03 02:45:28,123:INFO:Importing untrained model
2021-04-03 02:45:28,138:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 02:45:28,172:INFO:Starting cross validation
2021-04-03 02:45:28,175:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:45:30,052:INFO:Calculating mean and std
2021-04-03 02:45:30,055:INFO:Creating metrics dataframe
2021-04-03 02:45:30,080:INFO:Finalizing model
2021-04-03 02:45:31,257:INFO:Creating MLFlow logs
2021-04-03 02:45:31,272:INFO:Model: Extreme Gradient Boosting
2021-04-03 02:45:31,312:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'gpu_id': -1, 'importance_type': 'gain', 'interaction_constraints': '', 'learning_rate': 0.300000012, 'max_delta_step': 0, 'max_depth': 6, 'min_child_weight': 1, 'missing': nan, 'monotone_constraints': '()', 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': 1, 'random_state': 786, 'reg_alpha': 0, 'reg_lambda': 1, 'scale_pos_weight': 1, 'subsample': 1, 'tree_method': 'auto', 'validate_parameters': 1, 'verbosity': 0}
2021-04-03 02:45:31,472:INFO:Initializing predict_model()
2021-04-03 02:45:31,473:INFO:predict_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 02:45:31,475:INFO:Checking exceptions
2021-04-03 02:45:31,476:INFO:Preloading libraries
2021-04-03 02:45:31,841:INFO:Uploading results into container
2021-04-03 02:45:31,843:INFO:Uploading model into container now
2021-04-03 02:45:31,863:INFO:create_model_container: 18
2021-04-03 02:45:31,865:INFO:master_model_container: 18
2021-04-03 02:45:31,866:INFO:display_container: 3
2021-04-03 02:45:31,871:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 02:45:31,874:INFO:create_model() succesfully completed......................................
2021-04-03 02:45:38,780:INFO:Initializing tune_model()
2021-04-03 02:45:38,782:INFO:tune_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-03 02:45:38,783:INFO:Checking exceptions
2021-04-03 02:45:38,784:INFO:Preparing display monitor
2021-04-03 02:45:38,813:INFO:Copying training dataset
2021-04-03 02:45:38,816:INFO:Checking base model
2021-04-03 02:45:38,817:INFO:Base model : Extreme Gradient Boosting
2021-04-03 02:45:38,835:INFO:Declaring metric variables
2021-04-03 02:45:38,850:INFO:Defining Hyperparameters
2021-04-03 02:45:38,971:INFO:Tuning with n_jobs=-1
2021-04-03 02:45:38,972:INFO:Initializing RandomizedSearchCV
2021-04-03 02:45:51,802:INFO:best_params: {'actual_estimator__subsample': 0.9, 'actual_estimator__scale_pos_weight': 5.2, 'actual_estimator__reg_lambda': 0.15, 'actual_estimator__reg_alpha': 0.0005, 'actual_estimator__n_estimators': 270, 'actual_estimator__min_child_weight': 4, 'actual_estimator__max_depth': 8, 'actual_estimator__learning_rate': 0.4, 'actual_estimator__colsample_bytree': 1}
2021-04-03 02:45:51,804:INFO:Hyperparameter search completed
2021-04-03 02:45:51,805:INFO:SubProcess create_model() called ==================================
2021-04-03 02:45:51,813:INFO:Initializing create_model()
2021-04-03 02:45:51,815:INFO:create_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D334DE6A0>, kwargs={'subsample': 0.9, 'scale_pos_weight': 5.2, 'reg_lambda': 0.15, 'reg_alpha': 0.0005, 'n_estimators': 270, 'min_child_weight': 4, 'max_depth': 8, 'learning_rate': 0.4, 'colsample_bytree': 1})
2021-04-03 02:45:51,817:INFO:Checking exceptions
2021-04-03 02:45:51,821:INFO:Importing libraries
2021-04-03 02:45:51,837:INFO:Copying training dataset
2021-04-03 02:45:51,843:INFO:Defining folds
2021-04-03 02:45:51,846:INFO:Declaring metric variables
2021-04-03 02:45:51,889:INFO:Importing untrained model
2021-04-03 02:45:51,891:INFO:Declaring custom model
2021-04-03 02:45:51,931:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 02:45:51,987:INFO:Starting cross validation
2021-04-03 02:45:51,990:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:45:53,944:INFO:Calculating mean and std
2021-04-03 02:45:53,947:INFO:Creating metrics dataframe
2021-04-03 02:45:53,977:INFO:Finalizing model
2021-04-03 02:45:54,371:INFO:Uploading results into container
2021-04-03 02:45:54,372:INFO:Uploading model into container now
2021-04-03 02:45:54,373:INFO:create_model_container: 19
2021-04-03 02:45:54,375:INFO:master_model_container: 19
2021-04-03 02:45:54,376:INFO:display_container: 4
2021-04-03 02:45:54,381:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 02:45:54,382:INFO:create_model() succesfully completed......................................
2021-04-03 02:45:54,468:INFO:SubProcess create_model() end ==================================
2021-04-03 02:45:54,469:INFO:Creating MLFlow logs
2021-04-03 02:45:54,482:INFO:Model: Extreme Gradient Boosting
2021-04-03 02:45:54,525:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'gpu_id': -1, 'importance_type': 'gain', 'interaction_constraints': '', 'learning_rate': 0.4, 'max_delta_step': 0, 'max_depth': 8, 'min_child_weight': 4, 'missing': nan, 'monotone_constraints': '()', 'n_estimators': 270, 'n_jobs': -1, 'num_parallel_tree': 1, 'random_state': 786, 'reg_alpha': 0.0005, 'reg_lambda': 0.15, 'scale_pos_weight': 5.2, 'subsample': 0.9, 'tree_method': 'auto', 'validate_parameters': 1, 'verbosity': 0}
2021-04-03 02:45:54,720:INFO:Initializing predict_model()
2021-04-03 02:45:54,721:INFO:predict_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 02:45:54,723:INFO:Checking exceptions
2021-04-03 02:45:54,724:INFO:Preloading libraries
2021-04-03 02:45:55,089:INFO:create_model_container: 19
2021-04-03 02:45:55,090:INFO:master_model_container: 19
2021-04-03 02:45:55,091:INFO:display_container: 4
2021-04-03 02:45:55,098:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 02:45:55,099:INFO:tune_model() succesfully completed......................................
2021-04-03 02:46:00,325:INFO:Initializing plot_model()
2021-04-03 02:46:00,328:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 02:46:00,329:INFO:Checking exceptions
2021-04-03 02:46:00,331:INFO:Preparing display monitor
2021-04-03 02:46:00,341:INFO:Preloading libraries
2021-04-03 02:46:00,391:INFO:Copying training dataset
2021-04-03 02:46:00,392:INFO:Copying test dataset
2021-04-03 02:46:00,396:INFO:Plot type: residuals
2021-04-03 02:46:00,557:INFO:Fitting Model
2021-04-03 02:46:00,628:INFO:Scoring test/hold-out set
2021-04-03 02:46:01,524:INFO:Visual Rendered Successfully
2021-04-03 02:46:01,624:INFO:plot_model() succesfully completed......................................
2021-04-03 02:46:10,080:INFO:Initializing plot_model()
2021-04-03 02:46:10,082:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 02:46:10,083:INFO:Checking exceptions
2021-04-03 02:46:10,084:INFO:Preparing display monitor
2021-04-03 02:46:10,096:INFO:Preloading libraries
2021-04-03 02:46:10,152:INFO:Copying training dataset
2021-04-03 02:46:10,154:INFO:Copying test dataset
2021-04-03 02:46:10,155:INFO:Plot type: error
2021-04-03 02:46:10,159:INFO:Fitting Model
2021-04-03 02:46:10,162:INFO:Scoring test/hold-out set
2021-04-03 02:46:10,566:INFO:Visual Rendered Successfully
2021-04-03 02:46:10,648:INFO:plot_model() succesfully completed......................................
2021-04-03 02:46:17,837:INFO:Initializing plot_model()
2021-04-03 02:46:17,839:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 02:46:17,840:INFO:Checking exceptions
2021-04-03 02:46:17,841:INFO:Preparing display monitor
2021-04-03 02:46:17,851:INFO:Preloading libraries
2021-04-03 02:46:17,900:INFO:Copying training dataset
2021-04-03 02:46:17,902:INFO:Copying test dataset
2021-04-03 02:46:17,903:INFO:Plot type: feature
2021-04-03 02:46:17,906:WARNING:No coef_ found. Trying feature_importances_
2021-04-03 02:46:18,156:INFO:Visual Rendered Successfully
2021-04-03 02:46:18,256:INFO:plot_model() succesfully completed......................................
2021-04-03 02:46:23,098:INFO:Initializing evaluate_model()
2021-04-03 02:46:23,100:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-03 02:46:23,133:INFO:Initializing plot_model()
2021-04-03 02:46:23,135:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 02:46:23,136:INFO:Checking exceptions
2021-04-03 02:46:23,137:INFO:Preparing display monitor
2021-04-03 02:46:23,145:INFO:Preloading libraries
2021-04-03 02:46:23,196:INFO:Copying training dataset
2021-04-03 02:46:23,198:INFO:Copying test dataset
2021-04-03 02:46:23,200:INFO:Plot type: parameter
2021-04-03 02:46:23,216:INFO:Visual Rendered Successfully
2021-04-03 02:46:23,345:INFO:plot_model() succesfully completed......................................
2021-04-03 02:46:32,975:INFO:Initializing interpret_model()
2021-04-03 02:46:32,977:INFO:interpret_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), use_train_data=False, feature=None, kwargs={}, observation=None, plot=summary, save=False)
2021-04-03 02:46:32,978:INFO:Checking exceptions
2021-04-03 02:46:33,146:INFO:plot type: summary
2021-04-03 02:46:33,147:INFO:Creating TreeExplainer
2021-04-03 02:46:33,248:INFO:Compiling shap values
2021-04-03 02:46:33,833:INFO:Visual Rendered Successfully
2021-04-03 02:46:33,834:INFO:interpret_model() succesfully completed......................................
2021-04-03 02:46:39,176:INFO:Initializing automl()
2021-04-03 02:46:39,177:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-03 02:46:39,179:INFO:Model Selection Basis : CV Results on Training set
2021-04-03 02:46:39,187:INFO:Initializing create_model()
2021-04-03 02:46:39,189:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 02:46:39,190:INFO:Checking exceptions
2021-04-03 02:46:39,192:INFO:Importing libraries
2021-04-03 02:46:39,193:INFO:Copying training dataset
2021-04-03 02:46:39,196:INFO:Defining folds
2021-04-03 02:46:39,198:INFO:Declaring metric variables
2021-04-03 02:46:39,199:INFO:Importing untrained model
2021-04-03 02:46:39,200:INFO:Declaring custom model
2021-04-03 02:46:39,204:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 02:46:39,206:INFO:Cross validation set to False
2021-04-03 02:46:39,207:INFO:Fitting Model
2021-04-03 02:46:39,291:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:46:39,292:INFO:create_models() succesfully completed......................................
2021-04-03 02:46:39,400:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:46:39,401:INFO:automl() succesfully completed......................................
2021-04-03 02:46:52,626:INFO:Initializing predict_model()
2021-04-03 02:46:52,628:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 02:46:52,630:INFO:Checking exceptions
2021-04-03 02:46:52,632:INFO:Preloading libraries
2021-04-03 02:46:52,634:INFO:Preparing display monitor
2021-04-03 02:46:58,660:INFO:Initializing finalize_model()
2021-04-03 02:46:58,662:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-03 02:46:58,668:INFO:Finalizing PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:46:58,671:INFO:Initializing create_model()
2021-04-03 02:46:58,672:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 02:46:58,674:INFO:Checking exceptions
2021-04-03 02:46:58,675:INFO:Importing libraries
2021-04-03 02:46:58,677:INFO:Copying training dataset
2021-04-03 02:46:58,679:INFO:Defining folds
2021-04-03 02:46:58,680:INFO:Declaring metric variables
2021-04-03 02:46:58,682:INFO:Importing untrained model
2021-04-03 02:46:58,683:INFO:Declaring custom model
2021-04-03 02:46:58,685:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 02:46:58,687:INFO:Starting cross validation
2021-04-03 02:46:58,689:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:46:59,247:INFO:Calculating mean and std
2021-04-03 02:46:59,249:INFO:Creating metrics dataframe
2021-04-03 02:46:59,256:INFO:Finalizing model
2021-04-03 02:46:59,370:INFO:Uploading results into container
2021-04-03 02:46:59,371:INFO:Uploading model into container now
2021-04-03 02:46:59,372:INFO:create_model_container: 20
2021-04-03 02:46:59,373:INFO:master_model_container: 20
2021-04-03 02:46:59,374:INFO:display_container: 6
2021-04-03 02:46:59,377:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:46:59,378:INFO:create_model() succesfully completed......................................
2021-04-03 02:46:59,537:INFO:Creating MLFlow logs
2021-04-03 02:46:59,541:INFO:Model: Gradient Boosting Regressor
2021-04-03 02:46:59,577:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 02:46:59,740:INFO:Initializing predict_model()
2021-04-03 02:46:59,741:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 02:46:59,742:INFO:Checking exceptions
2021-04-03 02:46:59,743:INFO:Preloading libraries
2021-04-03 02:47:00,200:INFO:create_model_container: 20
2021-04-03 02:47:00,203:INFO:master_model_container: 20
2021-04-03 02:47:00,205:INFO:display_container: 5
2021-04-03 02:47:00,217:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:47:00,224:INFO:finalize_model() succesfully completed......................................
2021-04-03 02:47:07,830:INFO:Initializing predict_model()
2021-04-03 02:47:07,833:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 02:47:07,834:INFO:Checking exceptions
2021-04-03 02:47:07,835:INFO:Preloading libraries
2021-04-03 02:47:07,837:INFO:Preparing display monitor
2021-04-03 02:47:22,073:INFO:Initializing predict_model()
2021-04-03 02:47:22,074:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 02:47:22,076:INFO:Checking exceptions
2021-04-03 02:47:22,077:INFO:Preloading libraries
2021-04-03 02:47:22,078:INFO:Preparing display monitor
2021-04-03 02:49:06,301:INFO:Initializing save_model()
2021-04-03 02:49:06,303:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), model_name=saved_models/best_2nd_model_to_predict_median_income_xgboost, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2021-04-03 02:49:06,304:INFO:Adding model into prep_pipe
2021-04-03 02:49:06,337:INFO:saved_models/best_2nd_model_to_predict_median_income_xgboost.pkl saved in current working directory
2021-04-03 02:49:06,350:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                                                                                     min_impurity_decrease=0.0,
                                                                                     min_impurity_split=None,
                                                                                     min_samples_leaf=1,
                                                                                     min_samples_split=2,
                                                                                     min_weight_fraction_leaf=0.0,
                                                                                     n_estimators=100,
                                                                                     n_iter_no_change=None,
                                                                                     presort='deprecated',
                                                                                     random_state=786,
                                                                                     subsample=1.0,
                                                                                     tol=0.0001,
                                                                                     validation_fraction=0.1,
                                                                                     verbose=0,
                                                                                     warm_start=False),
                                                 subsample=1.0, tol=0.0001,
                                                 validation_fraction=0.1,
                                                 verbose=0,
                                                 warm_start=False)]],
         verbose=False)
2021-04-03 02:49:06,351:INFO:save_model() succesfully completed......................................
2021-04-03 02:49:42,348:INFO:PyCaret Supervised Module
2021-04-03 02:49:42,350:INFO:ML Usecase: regression
2021-04-03 02:49:42,351:INFO:version 2.3.0
2021-04-03 02:49:42,352:INFO:Initializing setup()
2021-04-03 02:49:42,354:INFO:setup(target=Median income, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 02:49:42,356:INFO:Checking environment
2021-04-03 02:49:42,359:INFO:python_version: 3.9.1
2021-04-03 02:49:42,360:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 02:49:42,360:INFO:machine: AMD64
2021-04-03 02:49:42,361:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 02:49:42,364:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 02:49:42,366:INFO:Checking libraries
2021-04-03 02:49:42,366:INFO:pd==1.2.2
2021-04-03 02:49:42,368:INFO:numpy==1.19.5
2021-04-03 02:49:42,368:INFO:sklearn==0.23.2
2021-04-03 02:49:42,369:INFO:lightgbm==3.1.1
2021-04-03 02:49:42,372:WARNING:catboost not found
2021-04-03 02:49:42,373:INFO:xgboost==1.3.3
2021-04-03 02:49:42,374:INFO:mlflow==1.14.1
2021-04-03 02:49:42,375:INFO:Checking Exceptions
2021-04-03 02:49:42,376:INFO:Declaring global variables
2021-04-03 02:49:42,377:INFO:USI: cff2
2021-04-03 02:49:42,378:INFO:pycaret_globals: {'imputation_regressor', 'seed', 'X', 'fold_shuffle_param', 'stratify_param', 'target_param', 'fix_imbalance_method_param', '_all_models', 'display_container', 'experiment__', 'fold_param', 'master_model_container', 'iterative_imputation_iters_param', 'gpu_param', '_available_plots', '_ml_usecase', 'exp_name_log', 'y', 'data_before_preprocess', 'fold_groups_param', 'imputation_classifier', 'html_param', 'fix_imbalance_param', 'transform_target_param', 'USI', 'X_train', '_all_metrics', '_all_models_internal', 'pycaret_globals', 'create_model_container', 'n_jobs_param', 'logging_param', 'X_test', '_internal_pipeline', '_gpu_n_jobs_param', 'y_train', 'fold_generator', 'log_plots_param', 'y_test', 'prep_pipe', 'transform_target_method_param'}
2021-04-03 02:49:42,379:INFO:Preparing display monitor
2021-04-03 02:49:42,380:INFO:Preparing display monitor
2021-04-03 02:49:42,398:INFO:Importing libraries
2021-04-03 02:49:42,399:INFO:Copying data for preprocessing
2021-04-03 02:49:42,411:INFO:Declaring preprocessing parameters
2021-04-03 02:49:42,413:INFO:Creating preprocessing pipeline
2021-04-03 02:49:42,424:INFO:Preprocessing pipeline created successfully
2021-04-03 02:49:42,425:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 02:49:42,426:INFO:Creating global containers
2021-04-03 02:49:42,428:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 02:49:49,829:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 02:49:49,967:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 02:49:49,968:INFO:Creating grid variables
2021-04-03 02:49:49,986:INFO:Logging experiment in MLFlow
2021-04-03 02:49:49,993:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-03 02:49:49,995:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-03 02:49:50,157:INFO:SubProcess save_model() called ==================================
2021-04-03 02:49:50,181:INFO:Initializing save_model()
2021-04-03 02:49:50,181:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 02:49:50,182:INFO:Adding model into prep_pipe
2021-04-03 02:49:50,187:WARNING:Only Model saved as it was a pipeline.
2021-04-03 02:49:50,215:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 02:49:50,226:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 02:49:50,227:INFO:save_model() succesfully completed......................................
2021-04-03 02:49:50,322:INFO:SubProcess save_model() end ==================================
2021-04-03 02:49:50,415:INFO:create_model_container: 0
2021-04-03 02:49:50,416:INFO:master_model_container: 0
2021-04-03 02:49:50,417:INFO:display_container: 1
2021-04-03 02:49:50,426:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 02:49:50,428:INFO:setup() succesfully completed......................................
2021-04-03 02:50:06,912:INFO:Initializing compare_models()
2021-04-03 02:50:06,914:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-03 02:50:06,915:INFO:Checking exceptions
2021-04-03 02:50:06,917:INFO:Preparing display monitor
2021-04-03 02:50:06,919:INFO:Preparing display monitor
2021-04-03 02:50:06,973:INFO:Initializing Linear Regression
2021-04-03 02:50:06,975:INFO:Total runtime is 2.684195836385091e-05 minutes
2021-04-03 02:50:06,993:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:06,996:INFO:Initializing create_model()
2021-04-03 02:50:06,998:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:06,999:INFO:Checking exceptions
2021-04-03 02:50:07,000:INFO:Importing libraries
2021-04-03 02:50:07,002:INFO:Copying training dataset
2021-04-03 02:50:07,003:INFO:Defining folds
2021-04-03 02:50:07,004:INFO:Declaring metric variables
2021-04-03 02:50:07,018:INFO:Importing untrained model
2021-04-03 02:50:07,033:INFO:Linear Regression Imported succesfully
2021-04-03 02:50:07,055:INFO:Starting cross validation
2021-04-03 02:50:07,058:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:07,326:INFO:Calculating mean and std
2021-04-03 02:50:07,334:INFO:Creating metrics dataframe
2021-04-03 02:50:07,346:INFO:Uploading results into container
2021-04-03 02:50:07,348:INFO:Uploading model into container now
2021-04-03 02:50:07,350:INFO:create_model_container: 1
2021-04-03 02:50:07,352:INFO:master_model_container: 1
2021-04-03 02:50:07,353:INFO:display_container: 2
2021-04-03 02:50:07,357:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 02:50:07,360:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:07,480:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:07,481:INFO:Creating metrics dataframe
2021-04-03 02:50:07,503:INFO:Initializing Lasso Regression
2021-04-03 02:50:07,504:INFO:Total runtime is 0.00885088841120402 minutes
2021-04-03 02:50:07,523:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:07,525:INFO:Initializing create_model()
2021-04-03 02:50:07,526:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:07,527:INFO:Checking exceptions
2021-04-03 02:50:07,528:INFO:Importing libraries
2021-04-03 02:50:07,532:INFO:Copying training dataset
2021-04-03 02:50:07,536:INFO:Defining folds
2021-04-03 02:50:07,538:INFO:Declaring metric variables
2021-04-03 02:50:07,556:INFO:Importing untrained model
2021-04-03 02:50:07,573:INFO:Lasso Regression Imported succesfully
2021-04-03 02:50:07,596:INFO:Starting cross validation
2021-04-03 02:50:07,598:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:07,713:INFO:Calculating mean and std
2021-04-03 02:50:07,715:INFO:Creating metrics dataframe
2021-04-03 02:50:07,722:INFO:Uploading results into container
2021-04-03 02:50:07,724:INFO:Uploading model into container now
2021-04-03 02:50:07,726:INFO:create_model_container: 2
2021-04-03 02:50:07,727:INFO:master_model_container: 2
2021-04-03 02:50:07,728:INFO:display_container: 2
2021-04-03 02:50:07,730:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 02:50:07,732:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:07,862:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:07,865:INFO:Creating metrics dataframe
2021-04-03 02:50:07,897:INFO:Initializing Ridge Regression
2021-04-03 02:50:07,898:INFO:Total runtime is 0.01542275349299113 minutes
2021-04-03 02:50:07,909:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:07,910:INFO:Initializing create_model()
2021-04-03 02:50:07,911:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:07,912:INFO:Checking exceptions
2021-04-03 02:50:07,913:INFO:Importing libraries
2021-04-03 02:50:07,916:INFO:Copying training dataset
2021-04-03 02:50:07,920:INFO:Defining folds
2021-04-03 02:50:07,923:INFO:Declaring metric variables
2021-04-03 02:50:07,944:INFO:Importing untrained model
2021-04-03 02:50:07,968:INFO:Ridge Regression Imported succesfully
2021-04-03 02:50:08,012:INFO:Starting cross validation
2021-04-03 02:50:08,015:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:08,145:INFO:Calculating mean and std
2021-04-03 02:50:08,153:INFO:Creating metrics dataframe
2021-04-03 02:50:08,165:INFO:Uploading results into container
2021-04-03 02:50:08,166:INFO:Uploading model into container now
2021-04-03 02:50:08,167:INFO:create_model_container: 3
2021-04-03 02:50:08,169:INFO:master_model_container: 3
2021-04-03 02:50:08,170:INFO:display_container: 2
2021-04-03 02:50:08,174:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 02:50:08,176:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:08,314:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:08,315:INFO:Creating metrics dataframe
2021-04-03 02:50:08,345:INFO:Initializing Elastic Net
2021-04-03 02:50:08,346:INFO:Total runtime is 0.022890770435333253 minutes
2021-04-03 02:50:08,366:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:08,368:INFO:Initializing create_model()
2021-04-03 02:50:08,369:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:08,370:INFO:Checking exceptions
2021-04-03 02:50:08,372:INFO:Importing libraries
2021-04-03 02:50:08,373:INFO:Copying training dataset
2021-04-03 02:50:08,375:INFO:Defining folds
2021-04-03 02:50:08,376:INFO:Declaring metric variables
2021-04-03 02:50:08,393:INFO:Importing untrained model
2021-04-03 02:50:08,403:INFO:Elastic Net Imported succesfully
2021-04-03 02:50:08,431:INFO:Starting cross validation
2021-04-03 02:50:08,432:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:08,727:INFO:Calculating mean and std
2021-04-03 02:50:08,729:INFO:Creating metrics dataframe
2021-04-03 02:50:08,738:INFO:Uploading results into container
2021-04-03 02:50:08,739:INFO:Uploading model into container now
2021-04-03 02:50:08,741:INFO:create_model_container: 4
2021-04-03 02:50:08,742:INFO:master_model_container: 4
2021-04-03 02:50:08,743:INFO:display_container: 2
2021-04-03 02:50:08,745:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 02:50:08,747:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:08,880:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:08,881:INFO:Creating metrics dataframe
2021-04-03 02:50:08,917:INFO:Initializing Least Angle Regression
2021-04-03 02:50:08,918:INFO:Total runtime is 0.03240937789281209 minutes
2021-04-03 02:50:08,939:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:08,942:INFO:Initializing create_model()
2021-04-03 02:50:08,944:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:08,946:INFO:Checking exceptions
2021-04-03 02:50:08,947:INFO:Importing libraries
2021-04-03 02:50:08,954:INFO:Copying training dataset
2021-04-03 02:50:08,964:INFO:Defining folds
2021-04-03 02:50:08,971:INFO:Declaring metric variables
2021-04-03 02:50:08,988:INFO:Importing untrained model
2021-04-03 02:50:09,003:INFO:Least Angle Regression Imported succesfully
2021-04-03 02:50:09,035:INFO:Starting cross validation
2021-04-03 02:50:09,038:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:11,361:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-03 02:50:11,363:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 02:50:11,365:INFO:Initializing create_model()
2021-04-03 02:50:11,366:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:11,367:INFO:Checking exceptions
2021-04-03 02:50:11,369:INFO:Importing libraries
2021-04-03 02:50:11,371:INFO:Copying training dataset
2021-04-03 02:50:11,373:INFO:Defining folds
2021-04-03 02:50:11,375:INFO:Declaring metric variables
2021-04-03 02:50:11,391:INFO:Importing untrained model
2021-04-03 02:50:11,410:INFO:Least Angle Regression Imported succesfully
2021-04-03 02:50:11,445:INFO:Starting cross validation
2021-04-03 02:50:11,447:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:19,236:ERROR:create_model() for lar raised an exception:
2021-04-03 02:50:19,239:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 02:50:19,240:INFO:Initializing Lasso Least Angle Regression
2021-04-03 02:50:19,241:INFO:Total runtime is 0.20446873505910237 minutes
2021-04-03 02:50:19,255:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:19,258:INFO:Initializing create_model()
2021-04-03 02:50:19,259:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:19,261:INFO:Checking exceptions
2021-04-03 02:50:19,262:INFO:Importing libraries
2021-04-03 02:50:19,263:INFO:Copying training dataset
2021-04-03 02:50:19,265:INFO:Defining folds
2021-04-03 02:50:19,266:INFO:Declaring metric variables
2021-04-03 02:50:19,279:INFO:Importing untrained model
2021-04-03 02:50:19,297:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-03 02:50:19,338:INFO:Starting cross validation
2021-04-03 02:50:19,339:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:27,154:INFO:Calculating mean and std
2021-04-03 02:50:27,161:INFO:Creating metrics dataframe
2021-04-03 02:50:27,176:INFO:Uploading results into container
2021-04-03 02:50:27,178:INFO:Uploading model into container now
2021-04-03 02:50:27,181:INFO:create_model_container: 5
2021-04-03 02:50:27,182:INFO:master_model_container: 5
2021-04-03 02:50:27,184:INFO:display_container: 2
2021-04-03 02:50:27,190:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-03 02:50:27,192:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:27,313:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:27,315:INFO:Creating metrics dataframe
2021-04-03 02:50:27,340:INFO:Initializing Orthogonal Matching Pursuit
2021-04-03 02:50:27,342:INFO:Total runtime is 0.33948604663213094 minutes
2021-04-03 02:50:27,357:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:27,358:INFO:Initializing create_model()
2021-04-03 02:50:27,359:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:27,362:INFO:Checking exceptions
2021-04-03 02:50:27,363:INFO:Importing libraries
2021-04-03 02:50:27,365:INFO:Copying training dataset
2021-04-03 02:50:27,367:INFO:Defining folds
2021-04-03 02:50:27,368:INFO:Declaring metric variables
2021-04-03 02:50:27,382:INFO:Importing untrained model
2021-04-03 02:50:27,406:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-03 02:50:27,447:INFO:Starting cross validation
2021-04-03 02:50:27,449:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:27,547:INFO:Calculating mean and std
2021-04-03 02:50:27,549:INFO:Creating metrics dataframe
2021-04-03 02:50:27,554:INFO:Uploading results into container
2021-04-03 02:50:27,556:INFO:Uploading model into container now
2021-04-03 02:50:27,558:INFO:create_model_container: 6
2021-04-03 02:50:27,559:INFO:master_model_container: 6
2021-04-03 02:50:27,560:INFO:display_container: 2
2021-04-03 02:50:27,562:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-03 02:50:27,562:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:27,679:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:27,681:INFO:Creating metrics dataframe
2021-04-03 02:50:27,712:INFO:Initializing Bayesian Ridge
2021-04-03 02:50:27,713:INFO:Total runtime is 0.34567261934280397 minutes
2021-04-03 02:50:27,732:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:27,733:INFO:Initializing create_model()
2021-04-03 02:50:27,734:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:27,735:INFO:Checking exceptions
2021-04-03 02:50:27,735:INFO:Importing libraries
2021-04-03 02:50:27,736:INFO:Copying training dataset
2021-04-03 02:50:27,739:INFO:Defining folds
2021-04-03 02:50:27,740:INFO:Declaring metric variables
2021-04-03 02:50:27,753:INFO:Importing untrained model
2021-04-03 02:50:27,773:INFO:Bayesian Ridge Imported succesfully
2021-04-03 02:50:27,808:INFO:Starting cross validation
2021-04-03 02:50:27,810:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:27,942:INFO:Calculating mean and std
2021-04-03 02:50:27,945:INFO:Creating metrics dataframe
2021-04-03 02:50:27,956:INFO:Uploading results into container
2021-04-03 02:50:27,960:INFO:Uploading model into container now
2021-04-03 02:50:27,962:INFO:create_model_container: 7
2021-04-03 02:50:27,964:INFO:master_model_container: 7
2021-04-03 02:50:27,966:INFO:display_container: 2
2021-04-03 02:50:27,970:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 02:50:27,972:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:28,119:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:28,121:INFO:Creating metrics dataframe
2021-04-03 02:50:28,151:INFO:Initializing Passive Aggressive Regressor
2021-04-03 02:50:28,152:INFO:Total runtime is 0.3529907862345378 minutes
2021-04-03 02:50:28,180:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:28,183:INFO:Initializing create_model()
2021-04-03 02:50:28,185:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:28,187:INFO:Checking exceptions
2021-04-03 02:50:28,193:INFO:Importing libraries
2021-04-03 02:50:28,195:INFO:Copying training dataset
2021-04-03 02:50:28,199:INFO:Defining folds
2021-04-03 02:50:28,200:INFO:Declaring metric variables
2021-04-03 02:50:28,236:INFO:Importing untrained model
2021-04-03 02:50:28,269:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-03 02:50:28,338:INFO:Starting cross validation
2021-04-03 02:50:28,342:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:28,578:INFO:Calculating mean and std
2021-04-03 02:50:28,584:INFO:Creating metrics dataframe
2021-04-03 02:50:28,597:INFO:Uploading results into container
2021-04-03 02:50:28,599:INFO:Uploading model into container now
2021-04-03 02:50:28,601:INFO:create_model_container: 8
2021-04-03 02:50:28,603:INFO:master_model_container: 8
2021-04-03 02:50:28,607:INFO:display_container: 2
2021-04-03 02:50:28,611:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:50:28,613:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:28,860:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:28,862:INFO:Creating metrics dataframe
2021-04-03 02:50:28,899:INFO:Initializing Huber Regressor
2021-04-03 02:50:28,901:INFO:Total runtime is 0.3654662887255351 minutes
2021-04-03 02:50:28,918:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:28,919:INFO:Initializing create_model()
2021-04-03 02:50:28,920:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:28,920:INFO:Checking exceptions
2021-04-03 02:50:28,922:INFO:Importing libraries
2021-04-03 02:50:28,924:INFO:Copying training dataset
2021-04-03 02:50:28,928:INFO:Defining folds
2021-04-03 02:50:28,929:INFO:Declaring metric variables
2021-04-03 02:50:28,956:INFO:Importing untrained model
2021-04-03 02:50:28,983:INFO:Huber Regressor Imported succesfully
2021-04-03 02:50:29,030:INFO:Starting cross validation
2021-04-03 02:50:29,033:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:29,380:INFO:Calculating mean and std
2021-04-03 02:50:29,385:INFO:Creating metrics dataframe
2021-04-03 02:50:29,401:INFO:Uploading results into container
2021-04-03 02:50:29,402:INFO:Uploading model into container now
2021-04-03 02:50:29,404:INFO:create_model_container: 9
2021-04-03 02:50:29,409:INFO:master_model_container: 9
2021-04-03 02:50:29,410:INFO:display_container: 2
2021-04-03 02:50:29,412:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 02:50:29,414:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:29,567:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:29,568:INFO:Creating metrics dataframe
2021-04-03 02:50:29,603:INFO:Initializing K Neighbors Regressor
2021-04-03 02:50:29,605:INFO:Total runtime is 0.3771939714749654 minutes
2021-04-03 02:50:29,621:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:29,623:INFO:Initializing create_model()
2021-04-03 02:50:29,626:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:29,630:INFO:Checking exceptions
2021-04-03 02:50:29,633:INFO:Importing libraries
2021-04-03 02:50:29,635:INFO:Copying training dataset
2021-04-03 02:50:29,641:INFO:Defining folds
2021-04-03 02:50:29,642:INFO:Declaring metric variables
2021-04-03 02:50:29,662:INFO:Importing untrained model
2021-04-03 02:50:29,673:INFO:K Neighbors Regressor Imported succesfully
2021-04-03 02:50:29,701:INFO:Starting cross validation
2021-04-03 02:50:29,703:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:29,976:INFO:Calculating mean and std
2021-04-03 02:50:29,979:INFO:Creating metrics dataframe
2021-04-03 02:50:29,988:INFO:Uploading results into container
2021-04-03 02:50:29,990:INFO:Uploading model into container now
2021-04-03 02:50:29,992:INFO:create_model_container: 10
2021-04-03 02:50:29,993:INFO:master_model_container: 10
2021-04-03 02:50:29,995:INFO:display_container: 2
2021-04-03 02:50:29,999:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-03 02:50:30,001:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:30,134:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:30,136:INFO:Creating metrics dataframe
2021-04-03 02:50:30,196:INFO:Initializing Decision Tree Regressor
2021-04-03 02:50:30,197:INFO:Total runtime is 0.38705853223800657 minutes
2021-04-03 02:50:30,211:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:30,213:INFO:Initializing create_model()
2021-04-03 02:50:30,214:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:30,214:INFO:Checking exceptions
2021-04-03 02:50:30,216:INFO:Importing libraries
2021-04-03 02:50:30,216:INFO:Copying training dataset
2021-04-03 02:50:30,218:INFO:Defining folds
2021-04-03 02:50:30,219:INFO:Declaring metric variables
2021-04-03 02:50:30,243:INFO:Importing untrained model
2021-04-03 02:50:30,261:INFO:Decision Tree Regressor Imported succesfully
2021-04-03 02:50:30,294:INFO:Starting cross validation
2021-04-03 02:50:30,296:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:30,415:INFO:Calculating mean and std
2021-04-03 02:50:30,417:INFO:Creating metrics dataframe
2021-04-03 02:50:30,426:INFO:Uploading results into container
2021-04-03 02:50:30,427:INFO:Uploading model into container now
2021-04-03 02:50:30,429:INFO:create_model_container: 11
2021-04-03 02:50:30,429:INFO:master_model_container: 11
2021-04-03 02:50:30,430:INFO:display_container: 2
2021-04-03 02:50:30,432:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-03 02:50:30,433:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:30,548:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:30,549:INFO:Creating metrics dataframe
2021-04-03 02:50:30,580:INFO:Initializing Random Forest Regressor
2021-04-03 02:50:30,580:INFO:Total runtime is 0.3934555888175964 minutes
2021-04-03 02:50:30,607:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:30,613:INFO:Initializing create_model()
2021-04-03 02:50:30,615:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:30,616:INFO:Checking exceptions
2021-04-03 02:50:30,617:INFO:Importing libraries
2021-04-03 02:50:30,619:INFO:Copying training dataset
2021-04-03 02:50:30,622:INFO:Defining folds
2021-04-03 02:50:30,625:INFO:Declaring metric variables
2021-04-03 02:50:30,639:INFO:Importing untrained model
2021-04-03 02:50:30,650:INFO:Random Forest Regressor Imported succesfully
2021-04-03 02:50:30,681:INFO:Starting cross validation
2021-04-03 02:50:30,683:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:31,944:INFO:Calculating mean and std
2021-04-03 02:50:31,946:INFO:Creating metrics dataframe
2021-04-03 02:50:31,955:INFO:Uploading results into container
2021-04-03 02:50:31,958:INFO:Uploading model into container now
2021-04-03 02:50:31,960:INFO:create_model_container: 12
2021-04-03 02:50:31,961:INFO:master_model_container: 12
2021-04-03 02:50:31,963:INFO:display_container: 2
2021-04-03 02:50:31,966:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 02:50:31,967:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:32,148:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:32,149:INFO:Creating metrics dataframe
2021-04-03 02:50:32,204:INFO:Initializing Extra Trees Regressor
2021-04-03 02:50:32,209:INFO:Total runtime is 0.42059371868769324 minutes
2021-04-03 02:50:32,229:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:32,231:INFO:Initializing create_model()
2021-04-03 02:50:32,234:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:32,236:INFO:Checking exceptions
2021-04-03 02:50:32,239:INFO:Importing libraries
2021-04-03 02:50:32,240:INFO:Copying training dataset
2021-04-03 02:50:32,243:INFO:Defining folds
2021-04-03 02:50:32,247:INFO:Declaring metric variables
2021-04-03 02:50:32,268:INFO:Importing untrained model
2021-04-03 02:50:32,284:INFO:Extra Trees Regressor Imported succesfully
2021-04-03 02:50:32,324:INFO:Starting cross validation
2021-04-03 02:50:32,327:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:33,473:INFO:Calculating mean and std
2021-04-03 02:50:33,475:INFO:Creating metrics dataframe
2021-04-03 02:50:33,486:INFO:Uploading results into container
2021-04-03 02:50:33,490:INFO:Uploading model into container now
2021-04-03 02:50:33,495:INFO:create_model_container: 13
2021-04-03 02:50:33,496:INFO:master_model_container: 13
2021-04-03 02:50:33,498:INFO:display_container: 2
2021-04-03 02:50:33,502:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 02:50:33,503:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:33,614:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:33,615:INFO:Creating metrics dataframe
2021-04-03 02:50:33,652:INFO:Initializing AdaBoost Regressor
2021-04-03 02:50:33,654:INFO:Total runtime is 0.4446860829989115 minutes
2021-04-03 02:50:33,680:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:33,682:INFO:Initializing create_model()
2021-04-03 02:50:33,688:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:33,692:INFO:Checking exceptions
2021-04-03 02:50:33,694:INFO:Importing libraries
2021-04-03 02:50:33,695:INFO:Copying training dataset
2021-04-03 02:50:33,697:INFO:Defining folds
2021-04-03 02:50:33,699:INFO:Declaring metric variables
2021-04-03 02:50:33,716:INFO:Importing untrained model
2021-04-03 02:50:33,734:INFO:AdaBoost Regressor Imported succesfully
2021-04-03 02:50:33,770:INFO:Starting cross validation
2021-04-03 02:50:33,773:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:34,298:INFO:Calculating mean and std
2021-04-03 02:50:34,301:INFO:Creating metrics dataframe
2021-04-03 02:50:34,311:INFO:Uploading results into container
2021-04-03 02:50:34,312:INFO:Uploading model into container now
2021-04-03 02:50:34,317:INFO:create_model_container: 14
2021-04-03 02:50:34,321:INFO:master_model_container: 14
2021-04-03 02:50:34,323:INFO:display_container: 2
2021-04-03 02:50:34,327:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-03 02:50:34,330:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:34,464:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:34,466:INFO:Creating metrics dataframe
2021-04-03 02:50:34,509:INFO:Initializing Gradient Boosting Regressor
2021-04-03 02:50:34,511:INFO:Total runtime is 0.45896977186203 minutes
2021-04-03 02:50:34,526:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:34,527:INFO:Initializing create_model()
2021-04-03 02:50:34,528:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:34,530:INFO:Checking exceptions
2021-04-03 02:50:34,530:INFO:Importing libraries
2021-04-03 02:50:34,531:INFO:Copying training dataset
2021-04-03 02:50:34,533:INFO:Defining folds
2021-04-03 02:50:34,534:INFO:Declaring metric variables
2021-04-03 02:50:34,548:INFO:Importing untrained model
2021-04-03 02:50:34,566:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 02:50:34,600:INFO:Starting cross validation
2021-04-03 02:50:34,601:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:35,009:INFO:Calculating mean and std
2021-04-03 02:50:35,011:INFO:Creating metrics dataframe
2021-04-03 02:50:35,019:INFO:Uploading results into container
2021-04-03 02:50:35,020:INFO:Uploading model into container now
2021-04-03 02:50:35,022:INFO:create_model_container: 15
2021-04-03 02:50:35,024:INFO:master_model_container: 15
2021-04-03 02:50:35,026:INFO:display_container: 2
2021-04-03 02:50:35,032:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:50:35,033:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:35,152:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:35,155:INFO:Creating metrics dataframe
2021-04-03 02:50:35,193:INFO:Initializing Extreme Gradient Boosting
2021-04-03 02:50:35,195:INFO:Total runtime is 0.4703734278678893 minutes
2021-04-03 02:50:35,210:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:35,212:INFO:Initializing create_model()
2021-04-03 02:50:35,214:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:35,215:INFO:Checking exceptions
2021-04-03 02:50:35,216:INFO:Importing libraries
2021-04-03 02:50:35,218:INFO:Copying training dataset
2021-04-03 02:50:35,220:INFO:Defining folds
2021-04-03 02:50:35,222:INFO:Declaring metric variables
2021-04-03 02:50:35,242:INFO:Importing untrained model
2021-04-03 02:50:35,256:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 02:50:35,286:INFO:Starting cross validation
2021-04-03 02:50:35,287:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:37,558:INFO:Calculating mean and std
2021-04-03 02:50:37,561:INFO:Creating metrics dataframe
2021-04-03 02:50:37,571:INFO:Uploading results into container
2021-04-03 02:50:37,572:INFO:Uploading model into container now
2021-04-03 02:50:37,575:INFO:create_model_container: 16
2021-04-03 02:50:37,576:INFO:master_model_container: 16
2021-04-03 02:50:37,577:INFO:display_container: 2
2021-04-03 02:50:37,583:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 02:50:37,587:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:37,705:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:37,706:INFO:Creating metrics dataframe
2021-04-03 02:50:37,737:INFO:Initializing Light Gradient Boosting Machine
2021-04-03 02:50:37,739:INFO:Total runtime is 0.5127709706624348 minutes
2021-04-03 02:50:37,758:INFO:SubProcess create_model() called ==================================
2021-04-03 02:50:37,760:INFO:Initializing create_model()
2021-04-03 02:50:37,761:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3613B790>, kwargs={})
2021-04-03 02:50:37,763:INFO:Checking exceptions
2021-04-03 02:50:37,764:INFO:Importing libraries
2021-04-03 02:50:37,765:INFO:Copying training dataset
2021-04-03 02:50:37,767:INFO:Defining folds
2021-04-03 02:50:37,768:INFO:Declaring metric variables
2021-04-03 02:50:37,781:INFO:Importing untrained model
2021-04-03 02:50:37,798:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-03 02:50:37,841:INFO:Starting cross validation
2021-04-03 02:50:37,842:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:38,887:INFO:Calculating mean and std
2021-04-03 02:50:38,891:INFO:Creating metrics dataframe
2021-04-03 02:50:38,901:INFO:Uploading results into container
2021-04-03 02:50:38,902:INFO:Uploading model into container now
2021-04-03 02:50:38,903:INFO:create_model_container: 17
2021-04-03 02:50:38,904:INFO:master_model_container: 17
2021-04-03 02:50:38,907:INFO:display_container: 2
2021-04-03 02:50:38,913:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-03 02:50:38,914:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:39,045:INFO:SubProcess create_model() end ==================================
2021-04-03 02:50:39,046:INFO:Creating metrics dataframe
2021-04-03 02:50:39,107:INFO:Initializing create_model()
2021-04-03 02:50:39,109:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 02:50:39,110:INFO:Checking exceptions
2021-04-03 02:50:39,111:INFO:Importing libraries
2021-04-03 02:50:39,112:INFO:Copying training dataset
2021-04-03 02:50:39,113:INFO:Defining folds
2021-04-03 02:50:39,115:INFO:Declaring metric variables
2021-04-03 02:50:39,115:INFO:Importing untrained model
2021-04-03 02:50:39,116:INFO:Declaring custom model
2021-04-03 02:50:39,119:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 02:50:39,121:INFO:Cross validation set to False
2021-04-03 02:50:39,122:INFO:Fitting Model
2021-04-03 02:50:39,226:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:50:39,228:INFO:create_models() succesfully completed......................................
2021-04-03 02:50:39,349:INFO:Creating MLFlow logs
2021-04-03 02:50:39,365:INFO:Model: Gradient Boosting Regressor
2021-04-03 02:50:39,419:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 02:50:39,549:INFO:Initializing predict_model()
2021-04-03 02:50:39,549:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 02:50:39,551:INFO:Checking exceptions
2021-04-03 02:50:39,553:INFO:Preloading libraries
2021-04-03 02:50:39,830:INFO:Creating MLFlow logs
2021-04-03 02:50:39,846:INFO:Model: Extreme Gradient Boosting
2021-04-03 02:50:39,899:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-03 02:50:40,246:INFO:Creating MLFlow logs
2021-04-03 02:50:40,263:INFO:Model: Random Forest Regressor
2021-04-03 02:50:40,321:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 02:50:40,644:INFO:Creating MLFlow logs
2021-04-03 02:50:40,658:INFO:Model: Decision Tree Regressor
2021-04-03 02:50:40,721:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-03 02:50:41,057:INFO:Creating MLFlow logs
2021-04-03 02:50:41,074:INFO:Model: Extra Trees Regressor
2021-04-03 02:50:41,125:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 02:50:41,397:INFO:Creating MLFlow logs
2021-04-03 02:50:41,411:INFO:Model: Light Gradient Boosting Machine
2021-04-03 02:50:41,451:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-03 02:50:41,722:INFO:Creating MLFlow logs
2021-04-03 02:50:41,738:INFO:Model: AdaBoost Regressor
2021-04-03 02:50:41,785:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-03 02:50:42,087:INFO:Creating MLFlow logs
2021-04-03 02:50:42,108:INFO:Model: Huber Regressor
2021-04-03 02:50:42,154:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 02:50:42,440:INFO:Creating MLFlow logs
2021-04-03 02:50:42,454:INFO:Model: K Neighbors Regressor
2021-04-03 02:50:42,508:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-03 02:50:42,835:INFO:Creating MLFlow logs
2021-04-03 02:50:42,848:INFO:Model: Ridge Regression
2021-04-03 02:50:42,918:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 02:50:43,171:INFO:Creating MLFlow logs
2021-04-03 02:50:43,184:INFO:Model: Linear Regression
2021-04-03 02:50:43,232:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 02:50:43,491:INFO:Creating MLFlow logs
2021-04-03 02:50:43,519:INFO:Model: Bayesian Ridge
2021-04-03 02:50:43,587:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 02:50:43,880:INFO:Creating MLFlow logs
2021-04-03 02:50:43,894:INFO:Model: Orthogonal Matching Pursuit
2021-04-03 02:50:43,936:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-03 02:50:44,239:INFO:Creating MLFlow logs
2021-04-03 02:50:44,256:INFO:Model: Lasso Regression
2021-04-03 02:50:44,301:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 02:50:44,622:INFO:Creating MLFlow logs
2021-04-03 02:50:44,639:INFO:Model: Elastic Net
2021-04-03 02:50:44,683:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 02:50:44,964:INFO:Creating MLFlow logs
2021-04-03 02:50:44,980:INFO:Model: Least Angle Regression
2021-04-03 02:50:45,041:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-03 02:50:45,316:INFO:Creating MLFlow logs
2021-04-03 02:50:45,334:INFO:Model: Passive Aggressive Regressor
2021-04-03 02:50:45,384:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 02:50:45,739:INFO:create_model_container: 17
2021-04-03 02:50:45,740:INFO:master_model_container: 17
2021-04-03 02:50:45,741:INFO:display_container: 2
2021-04-03 02:50:45,745:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:50:45,746:INFO:compare_models() succesfully completed......................................
2021-04-03 02:50:49,660:INFO:Initializing create_model()
2021-04-03 02:50:49,662:INFO:create_model(estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-03 02:50:49,664:INFO:Checking exceptions
2021-04-03 02:50:49,666:INFO:Preparing display monitor
2021-04-03 02:50:49,696:INFO:Importing libraries
2021-04-03 02:50:49,698:INFO:Copying training dataset
2021-04-03 02:50:49,700:INFO:Defining folds
2021-04-03 02:50:49,701:INFO:Declaring metric variables
2021-04-03 02:50:49,715:INFO:Importing untrained model
2021-04-03 02:50:49,728:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 02:50:49,751:INFO:Starting cross validation
2021-04-03 02:50:49,753:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:50:51,617:INFO:Calculating mean and std
2021-04-03 02:50:51,621:INFO:Creating metrics dataframe
2021-04-03 02:50:51,645:INFO:Finalizing model
2021-04-03 02:50:51,942:INFO:Creating MLFlow logs
2021-04-03 02:50:51,958:INFO:Model: Extreme Gradient Boosting
2021-04-03 02:50:51,990:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'gpu_id': -1, 'importance_type': 'gain', 'interaction_constraints': '', 'learning_rate': 0.300000012, 'max_delta_step': 0, 'max_depth': 6, 'min_child_weight': 1, 'missing': nan, 'monotone_constraints': '()', 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': 1, 'random_state': 786, 'reg_alpha': 0, 'reg_lambda': 1, 'scale_pos_weight': 1, 'subsample': 1, 'tree_method': 'auto', 'validate_parameters': 1, 'verbosity': 0}
2021-04-03 02:50:52,174:INFO:Initializing predict_model()
2021-04-03 02:50:52,176:INFO:predict_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 02:50:52,177:INFO:Checking exceptions
2021-04-03 02:50:52,179:INFO:Preloading libraries
2021-04-03 02:50:52,977:INFO:Uploading results into container
2021-04-03 02:50:52,980:INFO:Uploading model into container now
2021-04-03 02:50:53,077:INFO:create_model_container: 18
2021-04-03 02:50:53,080:INFO:master_model_container: 18
2021-04-03 02:50:53,081:INFO:display_container: 3
2021-04-03 02:50:53,093:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 02:50:53,102:INFO:create_model() succesfully completed......................................
2021-04-03 02:50:58,241:INFO:Initializing tune_model()
2021-04-03 02:50:58,243:INFO:tune_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-03 02:50:58,244:INFO:Checking exceptions
2021-04-03 02:50:58,246:INFO:Preparing display monitor
2021-04-03 02:50:58,272:INFO:Copying training dataset
2021-04-03 02:50:58,275:INFO:Checking base model
2021-04-03 02:50:58,277:INFO:Base model : Extreme Gradient Boosting
2021-04-03 02:50:58,292:INFO:Declaring metric variables
2021-04-03 02:50:58,305:INFO:Defining Hyperparameters
2021-04-03 02:50:58,425:INFO:Tuning with n_jobs=-1
2021-04-03 02:50:58,427:INFO:Initializing RandomizedSearchCV
2021-04-03 02:51:10,666:INFO:best_params: {'actual_estimator__subsample': 0.9, 'actual_estimator__scale_pos_weight': 5.2, 'actual_estimator__reg_lambda': 0.15, 'actual_estimator__reg_alpha': 0.0005, 'actual_estimator__n_estimators': 270, 'actual_estimator__min_child_weight': 4, 'actual_estimator__max_depth': 8, 'actual_estimator__learning_rate': 0.4, 'actual_estimator__colsample_bytree': 1}
2021-04-03 02:51:10,670:INFO:Hyperparameter search completed
2021-04-03 02:51:10,672:INFO:SubProcess create_model() called ==================================
2021-04-03 02:51:10,681:INFO:Initializing create_model()
2021-04-03 02:51:10,683:INFO:create_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000017D3D2CFB80>, kwargs={'subsample': 0.9, 'scale_pos_weight': 5.2, 'reg_lambda': 0.15, 'reg_alpha': 0.0005, 'n_estimators': 270, 'min_child_weight': 4, 'max_depth': 8, 'learning_rate': 0.4, 'colsample_bytree': 1})
2021-04-03 02:51:10,685:INFO:Checking exceptions
2021-04-03 02:51:10,687:INFO:Importing libraries
2021-04-03 02:51:10,688:INFO:Copying training dataset
2021-04-03 02:51:10,693:INFO:Defining folds
2021-04-03 02:51:10,694:INFO:Declaring metric variables
2021-04-03 02:51:10,720:INFO:Importing untrained model
2021-04-03 02:51:10,721:INFO:Declaring custom model
2021-04-03 02:51:10,785:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 02:51:10,833:INFO:Starting cross validation
2021-04-03 02:51:10,835:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:51:13,309:INFO:Calculating mean and std
2021-04-03 02:51:13,312:INFO:Creating metrics dataframe
2021-04-03 02:51:13,341:INFO:Finalizing model
2021-04-03 02:51:13,789:INFO:Uploading results into container
2021-04-03 02:51:13,790:INFO:Uploading model into container now
2021-04-03 02:51:13,792:INFO:create_model_container: 19
2021-04-03 02:51:13,793:INFO:master_model_container: 19
2021-04-03 02:51:13,794:INFO:display_container: 4
2021-04-03 02:51:13,799:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 02:51:13,800:INFO:create_model() succesfully completed......................................
2021-04-03 02:51:13,893:INFO:SubProcess create_model() end ==================================
2021-04-03 02:51:13,896:INFO:Creating MLFlow logs
2021-04-03 02:51:13,912:INFO:Model: Extreme Gradient Boosting
2021-04-03 02:51:13,982:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'gpu_id': -1, 'importance_type': 'gain', 'interaction_constraints': '', 'learning_rate': 0.4, 'max_delta_step': 0, 'max_depth': 8, 'min_child_weight': 4, 'missing': nan, 'monotone_constraints': '()', 'n_estimators': 270, 'n_jobs': -1, 'num_parallel_tree': 1, 'random_state': 786, 'reg_alpha': 0.0005, 'reg_lambda': 0.15, 'scale_pos_weight': 5.2, 'subsample': 0.9, 'tree_method': 'auto', 'validate_parameters': 1, 'verbosity': 0}
2021-04-03 02:51:14,192:INFO:Initializing predict_model()
2021-04-03 02:51:14,193:INFO:predict_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 02:51:14,196:INFO:Checking exceptions
2021-04-03 02:51:14,196:INFO:Preloading libraries
2021-04-03 02:51:14,558:INFO:create_model_container: 19
2021-04-03 02:51:14,560:INFO:master_model_container: 19
2021-04-03 02:51:14,561:INFO:display_container: 4
2021-04-03 02:51:14,567:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 02:51:14,568:INFO:tune_model() succesfully completed......................................
2021-04-03 02:51:35,632:INFO:Initializing plot_model()
2021-04-03 02:51:35,634:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 02:51:35,636:INFO:Checking exceptions
2021-04-03 02:51:35,637:INFO:Preparing display monitor
2021-04-03 02:51:35,646:INFO:Preloading libraries
2021-04-03 02:51:35,700:INFO:Copying training dataset
2021-04-03 02:51:35,701:INFO:Copying test dataset
2021-04-03 02:51:35,703:INFO:Plot type: residuals
2021-04-03 02:51:35,738:INFO:Fitting Model
2021-04-03 02:51:35,828:INFO:Scoring test/hold-out set
2021-04-03 02:51:36,443:INFO:Visual Rendered Successfully
2021-04-03 02:51:36,546:INFO:plot_model() succesfully completed......................................
2021-04-03 02:51:40,149:INFO:Initializing plot_model()
2021-04-03 02:51:40,150:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 02:51:40,152:INFO:Checking exceptions
2021-04-03 02:51:40,154:INFO:Preparing display monitor
2021-04-03 02:51:40,167:INFO:Preloading libraries
2021-04-03 02:51:40,216:INFO:Copying training dataset
2021-04-03 02:51:40,218:INFO:Copying test dataset
2021-04-03 02:51:40,219:INFO:Plot type: error
2021-04-03 02:51:40,223:INFO:Fitting Model
2021-04-03 02:51:40,227:INFO:Scoring test/hold-out set
2021-04-03 02:51:40,630:INFO:Visual Rendered Successfully
2021-04-03 02:51:40,732:INFO:plot_model() succesfully completed......................................
2021-04-03 02:51:43,780:INFO:Initializing plot_model()
2021-04-03 02:51:43,782:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 02:51:43,783:INFO:Checking exceptions
2021-04-03 02:51:43,784:INFO:Preparing display monitor
2021-04-03 02:51:43,798:INFO:Preloading libraries
2021-04-03 02:51:43,852:INFO:Copying training dataset
2021-04-03 02:51:43,854:INFO:Copying test dataset
2021-04-03 02:51:43,855:INFO:Plot type: feature
2021-04-03 02:51:43,858:WARNING:No coef_ found. Trying feature_importances_
2021-04-03 02:51:44,112:INFO:Visual Rendered Successfully
2021-04-03 02:51:44,215:INFO:plot_model() succesfully completed......................................
2021-04-03 02:51:48,185:INFO:Initializing evaluate_model()
2021-04-03 02:51:48,187:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-03 02:51:48,223:INFO:Initializing plot_model()
2021-04-03 02:51:48,225:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 02:51:48,227:INFO:Checking exceptions
2021-04-03 02:51:48,229:INFO:Preparing display monitor
2021-04-03 02:51:48,247:INFO:Preloading libraries
2021-04-03 02:51:48,316:INFO:Copying training dataset
2021-04-03 02:51:48,318:INFO:Copying test dataset
2021-04-03 02:51:48,319:INFO:Plot type: parameter
2021-04-03 02:51:48,339:INFO:Visual Rendered Successfully
2021-04-03 02:51:48,491:INFO:plot_model() succesfully completed......................................
2021-04-03 02:51:58,161:INFO:Initializing interpret_model()
2021-04-03 02:51:58,163:INFO:interpret_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), use_train_data=False, feature=None, kwargs={}, observation=None, plot=summary, save=False)
2021-04-03 02:51:58,165:INFO:Checking exceptions
2021-04-03 02:51:58,167:INFO:plot type: summary
2021-04-03 02:51:58,168:INFO:Creating TreeExplainer
2021-04-03 02:51:58,300:INFO:Compiling shap values
2021-04-03 02:51:58,915:INFO:Visual Rendered Successfully
2021-04-03 02:51:58,918:INFO:interpret_model() succesfully completed......................................
2021-04-03 02:52:05,708:INFO:Initializing automl()
2021-04-03 02:52:05,710:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-03 02:52:05,711:INFO:Model Selection Basis : CV Results on Training set
2021-04-03 02:52:05,719:INFO:Initializing create_model()
2021-04-03 02:52:05,720:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 02:52:05,721:INFO:Checking exceptions
2021-04-03 02:52:05,723:INFO:Importing libraries
2021-04-03 02:52:05,724:INFO:Copying training dataset
2021-04-03 02:52:05,725:INFO:Defining folds
2021-04-03 02:52:05,728:INFO:Declaring metric variables
2021-04-03 02:52:05,729:INFO:Importing untrained model
2021-04-03 02:52:05,731:INFO:Declaring custom model
2021-04-03 02:52:05,733:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 02:52:05,735:INFO:Cross validation set to False
2021-04-03 02:52:05,736:INFO:Fitting Model
2021-04-03 02:52:05,807:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:52:05,808:INFO:create_models() succesfully completed......................................
2021-04-03 02:52:06,001:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:52:06,002:INFO:automl() succesfully completed......................................
2021-04-03 02:52:14,633:INFO:Initializing predict_model()
2021-04-03 02:52:14,635:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 02:52:14,637:INFO:Checking exceptions
2021-04-03 02:52:14,639:INFO:Preloading libraries
2021-04-03 02:52:14,640:INFO:Preparing display monitor
2021-04-03 02:52:22,688:INFO:Initializing finalize_model()
2021-04-03 02:52:22,690:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-03 02:52:22,696:INFO:Finalizing PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:52:22,701:INFO:Initializing create_model()
2021-04-03 02:52:22,702:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 02:52:22,703:INFO:Checking exceptions
2021-04-03 02:52:22,706:INFO:Importing libraries
2021-04-03 02:52:22,707:INFO:Copying training dataset
2021-04-03 02:52:22,709:INFO:Defining folds
2021-04-03 02:52:22,710:INFO:Declaring metric variables
2021-04-03 02:52:22,711:INFO:Importing untrained model
2021-04-03 02:52:22,712:INFO:Declaring custom model
2021-04-03 02:52:22,715:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 02:52:22,716:INFO:Starting cross validation
2021-04-03 02:52:22,718:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 02:52:23,284:INFO:Calculating mean and std
2021-04-03 02:52:23,285:INFO:Creating metrics dataframe
2021-04-03 02:52:23,291:INFO:Finalizing model
2021-04-03 02:52:23,422:INFO:Uploading results into container
2021-04-03 02:52:23,423:INFO:Uploading model into container now
2021-04-03 02:52:23,424:INFO:create_model_container: 20
2021-04-03 02:52:23,424:INFO:master_model_container: 20
2021-04-03 02:52:23,425:INFO:display_container: 6
2021-04-03 02:52:23,431:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:52:23,433:INFO:create_model() succesfully completed......................................
2021-04-03 02:52:23,559:INFO:Creating MLFlow logs
2021-04-03 02:52:23,565:INFO:Model: Gradient Boosting Regressor
2021-04-03 02:52:23,607:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 02:52:23,815:INFO:Initializing predict_model()
2021-04-03 02:52:23,817:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 02:52:23,819:INFO:Checking exceptions
2021-04-03 02:52:23,821:INFO:Preloading libraries
2021-04-03 02:52:24,318:INFO:create_model_container: 20
2021-04-03 02:52:24,319:INFO:master_model_container: 20
2021-04-03 02:52:24,320:INFO:display_container: 5
2021-04-03 02:52:24,323:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 02:52:24,324:INFO:finalize_model() succesfully completed......................................
2021-04-03 02:52:32,451:INFO:Initializing predict_model()
2021-04-03 02:52:32,452:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 02:52:32,453:INFO:Checking exceptions
2021-04-03 02:52:32,454:INFO:Preloading libraries
2021-04-03 02:52:32,456:INFO:Preparing display monitor
2021-04-03 02:52:47,580:INFO:Initializing predict_model()
2021-04-03 02:52:47,582:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 02:52:47,584:INFO:Checking exceptions
2021-04-03 02:52:47,585:INFO:Preloading libraries
2021-04-03 02:52:47,587:INFO:Preparing display monitor
2021-04-03 02:53:02,824:INFO:Initializing save_model()
2021-04-03 02:53:02,827:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), model_name=saved_models/best_2nd_model_to_predict_median_income_xgboost, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2021-04-03 02:53:02,828:INFO:Adding model into prep_pipe
2021-04-03 02:53:02,869:INFO:saved_models/best_2nd_model_to_predict_median_income_xgboost.pkl saved in current working directory
2021-04-03 02:53:02,884:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                                                                                     min_impurity_decrease=0.0,
                                                                                     min_impurity_split=None,
                                                                                     min_samples_leaf=1,
                                                                                     min_samples_split=2,
                                                                                     min_weight_fraction_leaf=0.0,
                                                                                     n_estimators=100,
                                                                                     n_iter_no_change=None,
                                                                                     presort='deprecated',
                                                                                     random_state=786,
                                                                                     subsample=1.0,
                                                                                     tol=0.0001,
                                                                                     validation_fraction=0.1,
                                                                                     verbose=0,
                                                                                     warm_start=False),
                                                 subsample=1.0, tol=0.0001,
                                                 validation_fraction=0.1,
                                                 verbose=0,
                                                 warm_start=False)]],
         verbose=False)
2021-04-03 02:53:02,885:INFO:save_model() succesfully completed......................................
2021-04-03 03:17:36,185:INFO:PyCaret Supervised Module
2021-04-03 03:17:36,186:INFO:ML Usecase: regression
2021-04-03 03:17:36,186:INFO:version 2.3.0
2021-04-03 03:17:36,186:INFO:Initializing setup()
2021-04-03 03:17:36,186:INFO:setup(target=Median income, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 03:17:36,186:INFO:Checking environment
2021-04-03 03:17:36,186:INFO:python_version: 3.9.1
2021-04-03 03:17:36,187:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 03:17:36,187:INFO:machine: AMD64
2021-04-03 03:17:36,188:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 03:17:36,189:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 03:17:36,189:INFO:Checking libraries
2021-04-03 03:17:36,189:INFO:pd==1.2.2
2021-04-03 03:17:36,189:INFO:numpy==1.19.5
2021-04-03 03:17:36,189:INFO:sklearn==0.23.2
2021-04-03 03:17:36,189:INFO:lightgbm==3.1.1
2021-04-03 03:17:36,190:WARNING:catboost not found
2021-04-03 03:17:36,222:INFO:xgboost==1.3.3
2021-04-03 03:17:36,548:INFO:mlflow==1.14.1
2021-04-03 03:17:36,548:INFO:Checking Exceptions
2021-04-03 03:17:36,548:INFO:Declaring global variables
2021-04-03 03:17:36,548:INFO:USI: 1002
2021-04-03 03:17:36,549:INFO:pycaret_globals: {'fold_shuffle_param', 'transform_target_method_param', 'gpu_param', 'master_model_container', 'transform_target_param', '_all_metrics', '_ml_usecase', 'exp_name_log', 'fix_imbalance_param', 'fold_param', 'imputation_classifier', '_all_models', 'X', '_all_models_internal', 'stratify_param', 'imputation_regressor', 'fix_imbalance_method_param', 'display_container', 'X_train', 'fold_generator', 'X_test', 'fold_groups_param', 'pycaret_globals', 'seed', '_available_plots', 'logging_param', 'experiment__', 'y_train', 'n_jobs_param', 'USI', 'y_test', 'y', 'html_param', 'log_plots_param', 'data_before_preprocess', 'create_model_container', 'iterative_imputation_iters_param', '_gpu_n_jobs_param', '_internal_pipeline', 'target_param', 'prep_pipe'}
2021-04-03 03:17:36,549:INFO:Preparing display monitor
2021-04-03 03:17:36,549:INFO:Preparing display monitor
2021-04-03 03:17:36,565:INFO:Importing libraries
2021-04-03 03:17:36,565:INFO:Copying data for preprocessing
2021-04-03 03:17:36,577:INFO:Declaring preprocessing parameters
2021-04-03 03:17:36,579:INFO:Creating preprocessing pipeline
2021-04-03 03:17:36,588:INFO:Preprocessing pipeline created successfully
2021-04-03 03:17:36,588:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 03:17:36,588:INFO:Creating global containers
2021-04-03 03:17:36,592:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 03:19:40,817:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 03:19:40,946:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 03:19:40,947:INFO:Creating grid variables
2021-04-03 03:19:40,968:INFO:Logging experiment in MLFlow
2021-04-03 03:19:40,972:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-03 03:19:40,975:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-03 03:19:41,373:INFO:SubProcess save_model() called ==================================
2021-04-03 03:19:41,387:INFO:Initializing save_model()
2021-04-03 03:19:41,387:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 03:19:41,387:INFO:Adding model into prep_pipe
2021-04-03 03:19:41,388:WARNING:Only Model saved as it was a pipeline.
2021-04-03 03:19:41,406:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 03:19:41,411:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 03:19:41,412:INFO:save_model() succesfully completed......................................
2021-04-03 03:19:41,492:INFO:SubProcess save_model() end ==================================
2021-04-03 03:19:41,577:INFO:create_model_container: 0
2021-04-03 03:19:41,577:INFO:master_model_container: 0
2021-04-03 03:19:41,578:INFO:display_container: 1
2021-04-03 03:19:41,588:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 03:19:41,588:INFO:setup() succesfully completed......................................
2021-04-03 03:19:41,681:INFO:Initializing compare_models()
2021-04-03 03:19:41,681:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-03 03:19:41,681:INFO:Checking exceptions
2021-04-03 03:19:41,682:INFO:Preparing display monitor
2021-04-03 03:19:41,683:INFO:Preparing display monitor
2021-04-03 03:19:41,726:INFO:Initializing Linear Regression
2021-04-03 03:19:41,727:INFO:Total runtime is 1.6446908315022787e-05 minutes
2021-04-03 03:19:41,743:INFO:SubProcess create_model() called ==================================
2021-04-03 03:19:41,744:INFO:Initializing create_model()
2021-04-03 03:19:41,744:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:19:41,744:INFO:Checking exceptions
2021-04-03 03:19:41,744:INFO:Importing libraries
2021-04-03 03:19:41,744:INFO:Copying training dataset
2021-04-03 03:19:41,745:INFO:Defining folds
2021-04-03 03:19:41,745:INFO:Declaring metric variables
2021-04-03 03:19:41,763:INFO:Importing untrained model
2021-04-03 03:19:41,777:INFO:Linear Regression Imported succesfully
2021-04-03 03:19:41,813:INFO:Starting cross validation
2021-04-03 03:19:41,826:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:19:48,700:INFO:Calculating mean and std
2021-04-03 03:19:48,703:INFO:Creating metrics dataframe
2021-04-03 03:19:48,715:INFO:Uploading results into container
2021-04-03 03:19:48,716:INFO:Uploading model into container now
2021-04-03 03:19:48,717:INFO:create_model_container: 1
2021-04-03 03:19:48,717:INFO:master_model_container: 1
2021-04-03 03:19:48,717:INFO:display_container: 2
2021-04-03 03:19:48,719:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 03:19:48,720:INFO:create_model() succesfully completed......................................
2021-04-03 03:19:48,914:INFO:SubProcess create_model() end ==================================
2021-04-03 03:19:48,915:INFO:Creating metrics dataframe
2021-04-03 03:19:48,961:INFO:Initializing Lasso Regression
2021-04-03 03:19:48,961:INFO:Total runtime is 0.1205685297648112 minutes
2021-04-03 03:19:48,976:INFO:SubProcess create_model() called ==================================
2021-04-03 03:19:48,976:INFO:Initializing create_model()
2021-04-03 03:19:48,977:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:19:48,977:INFO:Checking exceptions
2021-04-03 03:19:48,977:INFO:Importing libraries
2021-04-03 03:19:48,977:INFO:Copying training dataset
2021-04-03 03:19:48,978:INFO:Defining folds
2021-04-03 03:19:48,978:INFO:Declaring metric variables
2021-04-03 03:19:48,999:INFO:Importing untrained model
2021-04-03 03:19:49,022:INFO:Lasso Regression Imported succesfully
2021-04-03 03:19:49,050:INFO:Starting cross validation
2021-04-03 03:19:49,052:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:19:49,185:INFO:Calculating mean and std
2021-04-03 03:19:49,188:INFO:Creating metrics dataframe
2021-04-03 03:19:49,197:INFO:Uploading results into container
2021-04-03 03:19:49,197:INFO:Uploading model into container now
2021-04-03 03:19:49,198:INFO:create_model_container: 2
2021-04-03 03:19:49,198:INFO:master_model_container: 2
2021-04-03 03:19:49,199:INFO:display_container: 2
2021-04-03 03:19:49,202:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 03:19:49,202:INFO:create_model() succesfully completed......................................
2021-04-03 03:19:49,390:INFO:SubProcess create_model() end ==================================
2021-04-03 03:19:49,391:INFO:Creating metrics dataframe
2021-04-03 03:19:49,434:INFO:Initializing Ridge Regression
2021-04-03 03:19:49,435:INFO:Total runtime is 0.12848318417867025 minutes
2021-04-03 03:19:49,459:INFO:SubProcess create_model() called ==================================
2021-04-03 03:19:49,459:INFO:Initializing create_model()
2021-04-03 03:19:49,460:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:19:49,460:INFO:Checking exceptions
2021-04-03 03:19:49,461:INFO:Importing libraries
2021-04-03 03:19:49,461:INFO:Copying training dataset
2021-04-03 03:19:49,463:INFO:Defining folds
2021-04-03 03:19:49,463:INFO:Declaring metric variables
2021-04-03 03:19:49,478:INFO:Importing untrained model
2021-04-03 03:19:49,496:INFO:Ridge Regression Imported succesfully
2021-04-03 03:19:49,537:INFO:Starting cross validation
2021-04-03 03:19:49,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:19:49,660:INFO:Calculating mean and std
2021-04-03 03:19:49,665:INFO:Creating metrics dataframe
2021-04-03 03:19:49,674:INFO:Uploading results into container
2021-04-03 03:19:49,675:INFO:Uploading model into container now
2021-04-03 03:19:49,676:INFO:create_model_container: 3
2021-04-03 03:19:49,676:INFO:master_model_container: 3
2021-04-03 03:19:49,676:INFO:display_container: 2
2021-04-03 03:19:49,678:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:19:49,678:INFO:create_model() succesfully completed......................................
2021-04-03 03:19:49,903:INFO:SubProcess create_model() end ==================================
2021-04-03 03:19:49,903:INFO:Creating metrics dataframe
2021-04-03 03:19:49,938:INFO:Initializing Elastic Net
2021-04-03 03:19:49,938:INFO:Total runtime is 0.13685392141342162 minutes
2021-04-03 03:19:49,958:INFO:SubProcess create_model() called ==================================
2021-04-03 03:19:49,958:INFO:Initializing create_model()
2021-04-03 03:19:49,959:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:19:49,959:INFO:Checking exceptions
2021-04-03 03:19:49,959:INFO:Importing libraries
2021-04-03 03:19:49,959:INFO:Copying training dataset
2021-04-03 03:19:49,961:INFO:Defining folds
2021-04-03 03:19:49,961:INFO:Declaring metric variables
2021-04-03 03:19:49,973:INFO:Importing untrained model
2021-04-03 03:19:49,990:INFO:Elastic Net Imported succesfully
2021-04-03 03:19:50,025:INFO:Starting cross validation
2021-04-03 03:19:50,027:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:19:50,158:INFO:Calculating mean and std
2021-04-03 03:19:50,160:INFO:Creating metrics dataframe
2021-04-03 03:19:50,170:INFO:Uploading results into container
2021-04-03 03:19:50,170:INFO:Uploading model into container now
2021-04-03 03:19:50,170:INFO:create_model_container: 4
2021-04-03 03:19:50,170:INFO:master_model_container: 4
2021-04-03 03:19:50,170:INFO:display_container: 2
2021-04-03 03:19:50,172:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 03:19:50,172:INFO:create_model() succesfully completed......................................
2021-04-03 03:19:50,308:INFO:SubProcess create_model() end ==================================
2021-04-03 03:19:50,308:INFO:Creating metrics dataframe
2021-04-03 03:19:50,341:INFO:Initializing Least Angle Regression
2021-04-03 03:19:50,342:INFO:Total runtime is 0.14358518918355304 minutes
2021-04-03 03:19:50,362:INFO:SubProcess create_model() called ==================================
2021-04-03 03:19:50,362:INFO:Initializing create_model()
2021-04-03 03:19:50,366:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:19:50,366:INFO:Checking exceptions
2021-04-03 03:19:50,366:INFO:Importing libraries
2021-04-03 03:19:50,367:INFO:Copying training dataset
2021-04-03 03:19:50,368:INFO:Defining folds
2021-04-03 03:19:50,368:INFO:Declaring metric variables
2021-04-03 03:19:50,385:INFO:Importing untrained model
2021-04-03 03:19:50,397:INFO:Least Angle Regression Imported succesfully
2021-04-03 03:19:50,427:INFO:Starting cross validation
2021-04-03 03:19:50,428:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:19:51,417:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-03 03:19:51,421:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 03:19:51,421:INFO:Initializing create_model()
2021-04-03 03:19:51,421:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:19:51,421:INFO:Checking exceptions
2021-04-03 03:19:51,421:INFO:Importing libraries
2021-04-03 03:19:51,421:INFO:Copying training dataset
2021-04-03 03:19:51,422:INFO:Defining folds
2021-04-03 03:19:51,423:INFO:Declaring metric variables
2021-04-03 03:19:51,433:INFO:Importing untrained model
2021-04-03 03:19:51,455:INFO:Least Angle Regression Imported succesfully
2021-04-03 03:19:51,484:INFO:Starting cross validation
2021-04-03 03:19:51,486:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:19:58,334:ERROR:create_model() for lar raised an exception:
2021-04-03 03:19:58,335:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 03:19:58,336:INFO:Initializing Lasso Least Angle Regression
2021-04-03 03:19:58,336:INFO:Total runtime is 0.27681945959726967 minutes
2021-04-03 03:19:58,346:INFO:SubProcess create_model() called ==================================
2021-04-03 03:19:58,346:INFO:Initializing create_model()
2021-04-03 03:19:58,346:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:19:58,346:INFO:Checking exceptions
2021-04-03 03:19:58,346:INFO:Importing libraries
2021-04-03 03:19:58,346:INFO:Copying training dataset
2021-04-03 03:19:58,347:INFO:Defining folds
2021-04-03 03:19:58,348:INFO:Declaring metric variables
2021-04-03 03:19:58,362:INFO:Importing untrained model
2021-04-03 03:19:58,375:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-03 03:19:58,403:INFO:Starting cross validation
2021-04-03 03:19:58,404:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:04,449:INFO:Calculating mean and std
2021-04-03 03:20:04,453:INFO:Creating metrics dataframe
2021-04-03 03:20:04,459:INFO:Uploading results into container
2021-04-03 03:20:04,459:INFO:Uploading model into container now
2021-04-03 03:20:04,459:INFO:create_model_container: 5
2021-04-03 03:20:04,459:INFO:master_model_container: 5
2021-04-03 03:20:04,459:INFO:display_container: 2
2021-04-03 03:20:04,461:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-03 03:20:04,461:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:04,571:INFO:SubProcess create_model() end ==================================
2021-04-03 03:20:04,571:INFO:Creating metrics dataframe
2021-04-03 03:20:04,591:INFO:Initializing Orthogonal Matching Pursuit
2021-04-03 03:20:04,591:INFO:Total runtime is 0.38107101917266845 minutes
2021-04-03 03:20:04,602:INFO:SubProcess create_model() called ==================================
2021-04-03 03:20:04,603:INFO:Initializing create_model()
2021-04-03 03:20:04,603:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:20:04,604:INFO:Checking exceptions
2021-04-03 03:20:04,604:INFO:Importing libraries
2021-04-03 03:20:04,604:INFO:Copying training dataset
2021-04-03 03:20:04,606:INFO:Defining folds
2021-04-03 03:20:04,607:INFO:Declaring metric variables
2021-04-03 03:20:04,622:INFO:Importing untrained model
2021-04-03 03:20:04,641:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-03 03:20:04,672:INFO:Starting cross validation
2021-04-03 03:20:04,672:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:04,767:INFO:Calculating mean and std
2021-04-03 03:20:04,768:INFO:Creating metrics dataframe
2021-04-03 03:20:04,775:INFO:Uploading results into container
2021-04-03 03:20:04,775:INFO:Uploading model into container now
2021-04-03 03:20:04,776:INFO:create_model_container: 6
2021-04-03 03:20:04,776:INFO:master_model_container: 6
2021-04-03 03:20:04,776:INFO:display_container: 2
2021-04-03 03:20:04,777:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-03 03:20:04,777:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:04,870:INFO:SubProcess create_model() end ==================================
2021-04-03 03:20:04,870:INFO:Creating metrics dataframe
2021-04-03 03:20:04,893:INFO:Initializing Bayesian Ridge
2021-04-03 03:20:04,893:INFO:Total runtime is 0.3861140449841817 minutes
2021-04-03 03:20:04,905:INFO:SubProcess create_model() called ==================================
2021-04-03 03:20:04,906:INFO:Initializing create_model()
2021-04-03 03:20:04,906:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:20:04,906:INFO:Checking exceptions
2021-04-03 03:20:04,906:INFO:Importing libraries
2021-04-03 03:20:04,906:INFO:Copying training dataset
2021-04-03 03:20:04,907:INFO:Defining folds
2021-04-03 03:20:04,908:INFO:Declaring metric variables
2021-04-03 03:20:04,925:INFO:Importing untrained model
2021-04-03 03:20:04,937:INFO:Bayesian Ridge Imported succesfully
2021-04-03 03:20:04,969:INFO:Starting cross validation
2021-04-03 03:20:04,970:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:05,068:INFO:Calculating mean and std
2021-04-03 03:20:05,069:INFO:Creating metrics dataframe
2021-04-03 03:20:05,076:INFO:Uploading results into container
2021-04-03 03:20:05,076:INFO:Uploading model into container now
2021-04-03 03:20:05,077:INFO:create_model_container: 7
2021-04-03 03:20:05,077:INFO:master_model_container: 7
2021-04-03 03:20:05,077:INFO:display_container: 2
2021-04-03 03:20:05,078:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:20:05,078:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:05,173:INFO:SubProcess create_model() end ==================================
2021-04-03 03:20:05,173:INFO:Creating metrics dataframe
2021-04-03 03:20:05,202:INFO:Initializing Passive Aggressive Regressor
2021-04-03 03:20:05,202:INFO:Total runtime is 0.3912526607513428 minutes
2021-04-03 03:20:05,211:INFO:SubProcess create_model() called ==================================
2021-04-03 03:20:05,211:INFO:Initializing create_model()
2021-04-03 03:20:05,211:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:20:05,211:INFO:Checking exceptions
2021-04-03 03:20:05,212:INFO:Importing libraries
2021-04-03 03:20:05,212:INFO:Copying training dataset
2021-04-03 03:20:05,213:INFO:Defining folds
2021-04-03 03:20:05,213:INFO:Declaring metric variables
2021-04-03 03:20:05,234:INFO:Importing untrained model
2021-04-03 03:20:05,255:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-03 03:20:05,291:INFO:Starting cross validation
2021-04-03 03:20:05,292:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:05,547:INFO:Calculating mean and std
2021-04-03 03:20:05,550:INFO:Creating metrics dataframe
2021-04-03 03:20:05,560:INFO:Uploading results into container
2021-04-03 03:20:05,560:INFO:Uploading model into container now
2021-04-03 03:20:05,561:INFO:create_model_container: 8
2021-04-03 03:20:05,561:INFO:master_model_container: 8
2021-04-03 03:20:05,561:INFO:display_container: 2
2021-04-03 03:20:05,564:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:20:05,564:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:05,673:INFO:SubProcess create_model() end ==================================
2021-04-03 03:20:05,673:INFO:Creating metrics dataframe
2021-04-03 03:20:05,695:INFO:Initializing Huber Regressor
2021-04-03 03:20:05,696:INFO:Total runtime is 0.39949173529942833 minutes
2021-04-03 03:20:05,706:INFO:SubProcess create_model() called ==================================
2021-04-03 03:20:05,707:INFO:Initializing create_model()
2021-04-03 03:20:05,707:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:20:05,707:INFO:Checking exceptions
2021-04-03 03:20:05,707:INFO:Importing libraries
2021-04-03 03:20:05,707:INFO:Copying training dataset
2021-04-03 03:20:05,709:INFO:Defining folds
2021-04-03 03:20:05,709:INFO:Declaring metric variables
2021-04-03 03:20:05,724:INFO:Importing untrained model
2021-04-03 03:20:05,738:INFO:Huber Regressor Imported succesfully
2021-04-03 03:20:05,765:INFO:Starting cross validation
2021-04-03 03:20:05,767:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:05,948:INFO:Calculating mean and std
2021-04-03 03:20:05,951:INFO:Creating metrics dataframe
2021-04-03 03:20:05,958:INFO:Uploading results into container
2021-04-03 03:20:05,958:INFO:Uploading model into container now
2021-04-03 03:20:05,959:INFO:create_model_container: 9
2021-04-03 03:20:05,959:INFO:master_model_container: 9
2021-04-03 03:20:05,959:INFO:display_container: 2
2021-04-03 03:20:05,960:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 03:20:05,960:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:06,063:INFO:SubProcess create_model() end ==================================
2021-04-03 03:20:06,063:INFO:Creating metrics dataframe
2021-04-03 03:20:06,085:INFO:Initializing K Neighbors Regressor
2021-04-03 03:20:06,085:INFO:Total runtime is 0.40598165194193525 minutes
2021-04-03 03:20:06,094:INFO:SubProcess create_model() called ==================================
2021-04-03 03:20:06,095:INFO:Initializing create_model()
2021-04-03 03:20:06,095:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:20:06,096:INFO:Checking exceptions
2021-04-03 03:20:06,096:INFO:Importing libraries
2021-04-03 03:20:06,096:INFO:Copying training dataset
2021-04-03 03:20:06,097:INFO:Defining folds
2021-04-03 03:20:06,097:INFO:Declaring metric variables
2021-04-03 03:20:06,106:INFO:Importing untrained model
2021-04-03 03:20:06,121:INFO:K Neighbors Regressor Imported succesfully
2021-04-03 03:20:06,145:INFO:Starting cross validation
2021-04-03 03:20:06,146:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:06,271:INFO:Calculating mean and std
2021-04-03 03:20:06,272:INFO:Creating metrics dataframe
2021-04-03 03:20:06,278:INFO:Uploading results into container
2021-04-03 03:20:06,278:INFO:Uploading model into container now
2021-04-03 03:20:06,279:INFO:create_model_container: 10
2021-04-03 03:20:06,279:INFO:master_model_container: 10
2021-04-03 03:20:06,279:INFO:display_container: 2
2021-04-03 03:20:06,280:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-03 03:20:06,280:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:06,392:INFO:SubProcess create_model() end ==================================
2021-04-03 03:20:06,392:INFO:Creating metrics dataframe
2021-04-03 03:20:06,410:INFO:Initializing Decision Tree Regressor
2021-04-03 03:20:06,410:INFO:Total runtime is 0.4114013195037842 minutes
2021-04-03 03:20:06,424:INFO:SubProcess create_model() called ==================================
2021-04-03 03:20:06,424:INFO:Initializing create_model()
2021-04-03 03:20:06,424:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:20:06,424:INFO:Checking exceptions
2021-04-03 03:20:06,424:INFO:Importing libraries
2021-04-03 03:20:06,424:INFO:Copying training dataset
2021-04-03 03:20:06,426:INFO:Defining folds
2021-04-03 03:20:06,426:INFO:Declaring metric variables
2021-04-03 03:20:06,435:INFO:Importing untrained model
2021-04-03 03:20:06,446:INFO:Decision Tree Regressor Imported succesfully
2021-04-03 03:20:06,478:INFO:Starting cross validation
2021-04-03 03:20:06,479:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:06,587:INFO:Calculating mean and std
2021-04-03 03:20:06,589:INFO:Creating metrics dataframe
2021-04-03 03:20:06,601:INFO:Uploading results into container
2021-04-03 03:20:06,601:INFO:Uploading model into container now
2021-04-03 03:20:06,601:INFO:create_model_container: 11
2021-04-03 03:20:06,601:INFO:master_model_container: 11
2021-04-03 03:20:06,601:INFO:display_container: 2
2021-04-03 03:20:06,604:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-03 03:20:06,604:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:06,741:INFO:SubProcess create_model() end ==================================
2021-04-03 03:20:06,741:INFO:Creating metrics dataframe
2021-04-03 03:20:06,764:INFO:Initializing Random Forest Regressor
2021-04-03 03:20:06,764:INFO:Total runtime is 0.417292857170105 minutes
2021-04-03 03:20:06,774:INFO:SubProcess create_model() called ==================================
2021-04-03 03:20:06,775:INFO:Initializing create_model()
2021-04-03 03:20:06,775:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:20:06,775:INFO:Checking exceptions
2021-04-03 03:20:06,775:INFO:Importing libraries
2021-04-03 03:20:06,776:INFO:Copying training dataset
2021-04-03 03:20:06,777:INFO:Defining folds
2021-04-03 03:20:06,777:INFO:Declaring metric variables
2021-04-03 03:20:06,790:INFO:Importing untrained model
2021-04-03 03:20:06,803:INFO:Random Forest Regressor Imported succesfully
2021-04-03 03:20:06,826:INFO:Starting cross validation
2021-04-03 03:20:06,827:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:07,796:INFO:Calculating mean and std
2021-04-03 03:20:07,798:INFO:Creating metrics dataframe
2021-04-03 03:20:07,804:INFO:Uploading results into container
2021-04-03 03:20:07,804:INFO:Uploading model into container now
2021-04-03 03:20:07,804:INFO:create_model_container: 12
2021-04-03 03:20:07,804:INFO:master_model_container: 12
2021-04-03 03:20:07,804:INFO:display_container: 2
2021-04-03 03:20:07,806:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 03:20:07,806:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:07,913:INFO:SubProcess create_model() end ==================================
2021-04-03 03:20:07,913:INFO:Creating metrics dataframe
2021-04-03 03:20:07,937:INFO:Initializing Extra Trees Regressor
2021-04-03 03:20:07,937:INFO:Total runtime is 0.43683614333470666 minutes
2021-04-03 03:20:07,947:INFO:SubProcess create_model() called ==================================
2021-04-03 03:20:07,947:INFO:Initializing create_model()
2021-04-03 03:20:07,947:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:20:07,948:INFO:Checking exceptions
2021-04-03 03:20:07,948:INFO:Importing libraries
2021-04-03 03:20:07,948:INFO:Copying training dataset
2021-04-03 03:20:07,949:INFO:Defining folds
2021-04-03 03:20:07,949:INFO:Declaring metric variables
2021-04-03 03:20:07,964:INFO:Importing untrained model
2021-04-03 03:20:07,976:INFO:Extra Trees Regressor Imported succesfully
2021-04-03 03:20:08,018:INFO:Starting cross validation
2021-04-03 03:20:08,020:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:08,686:INFO:Calculating mean and std
2021-04-03 03:20:08,688:INFO:Creating metrics dataframe
2021-04-03 03:20:08,695:INFO:Uploading results into container
2021-04-03 03:20:08,696:INFO:Uploading model into container now
2021-04-03 03:20:08,696:INFO:create_model_container: 13
2021-04-03 03:20:08,696:INFO:master_model_container: 13
2021-04-03 03:20:08,696:INFO:display_container: 2
2021-04-03 03:20:08,698:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 03:20:08,699:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:08,802:INFO:SubProcess create_model() end ==================================
2021-04-03 03:20:08,802:INFO:Creating metrics dataframe
2021-04-03 03:20:08,825:INFO:Initializing AdaBoost Regressor
2021-04-03 03:20:08,825:INFO:Total runtime is 0.45165020227432257 minutes
2021-04-03 03:20:08,836:INFO:SubProcess create_model() called ==================================
2021-04-03 03:20:08,836:INFO:Initializing create_model()
2021-04-03 03:20:08,836:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:20:08,836:INFO:Checking exceptions
2021-04-03 03:20:08,836:INFO:Importing libraries
2021-04-03 03:20:08,837:INFO:Copying training dataset
2021-04-03 03:20:08,837:INFO:Defining folds
2021-04-03 03:20:08,838:INFO:Declaring metric variables
2021-04-03 03:20:08,848:INFO:Importing untrained model
2021-04-03 03:20:08,863:INFO:AdaBoost Regressor Imported succesfully
2021-04-03 03:20:08,892:INFO:Starting cross validation
2021-04-03 03:20:08,893:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:09,320:INFO:Calculating mean and std
2021-04-03 03:20:09,323:INFO:Creating metrics dataframe
2021-04-03 03:20:09,329:INFO:Uploading results into container
2021-04-03 03:20:09,329:INFO:Uploading model into container now
2021-04-03 03:20:09,329:INFO:create_model_container: 14
2021-04-03 03:20:09,330:INFO:master_model_container: 14
2021-04-03 03:20:09,330:INFO:display_container: 2
2021-04-03 03:20:09,331:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-03 03:20:09,332:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:09,423:INFO:SubProcess create_model() end ==================================
2021-04-03 03:20:09,423:INFO:Creating metrics dataframe
2021-04-03 03:20:09,445:INFO:Initializing Gradient Boosting Regressor
2021-04-03 03:20:09,445:INFO:Total runtime is 0.46198016802469893 minutes
2021-04-03 03:20:09,457:INFO:SubProcess create_model() called ==================================
2021-04-03 03:20:09,458:INFO:Initializing create_model()
2021-04-03 03:20:09,458:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:20:09,458:INFO:Checking exceptions
2021-04-03 03:20:09,458:INFO:Importing libraries
2021-04-03 03:20:09,459:INFO:Copying training dataset
2021-04-03 03:20:09,459:INFO:Defining folds
2021-04-03 03:20:09,460:INFO:Declaring metric variables
2021-04-03 03:20:09,472:INFO:Importing untrained model
2021-04-03 03:20:09,484:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 03:20:09,516:INFO:Starting cross validation
2021-04-03 03:20:09,518:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:09,798:INFO:Calculating mean and std
2021-04-03 03:20:09,799:INFO:Creating metrics dataframe
2021-04-03 03:20:09,803:INFO:Uploading results into container
2021-04-03 03:20:09,803:INFO:Uploading model into container now
2021-04-03 03:20:09,803:INFO:create_model_container: 15
2021-04-03 03:20:09,803:INFO:master_model_container: 15
2021-04-03 03:20:09,803:INFO:display_container: 2
2021-04-03 03:20:09,805:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:20:09,805:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:09,886:INFO:SubProcess create_model() end ==================================
2021-04-03 03:20:09,887:INFO:Creating metrics dataframe
2021-04-03 03:20:09,908:INFO:Initializing Extreme Gradient Boosting
2021-04-03 03:20:09,909:INFO:Total runtime is 0.4697104136149089 minutes
2021-04-03 03:20:09,922:INFO:SubProcess create_model() called ==================================
2021-04-03 03:20:09,922:INFO:Initializing create_model()
2021-04-03 03:20:09,922:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:20:09,922:INFO:Checking exceptions
2021-04-03 03:20:09,922:INFO:Importing libraries
2021-04-03 03:20:09,923:INFO:Copying training dataset
2021-04-03 03:20:09,924:INFO:Defining folds
2021-04-03 03:20:09,924:INFO:Declaring metric variables
2021-04-03 03:20:09,934:INFO:Importing untrained model
2021-04-03 03:20:09,948:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 03:20:09,982:INFO:Starting cross validation
2021-04-03 03:20:09,984:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:12,391:INFO:Calculating mean and std
2021-04-03 03:20:12,392:INFO:Creating metrics dataframe
2021-04-03 03:20:12,401:INFO:Uploading results into container
2021-04-03 03:20:12,401:INFO:Uploading model into container now
2021-04-03 03:20:12,401:INFO:create_model_container: 16
2021-04-03 03:20:12,401:INFO:master_model_container: 16
2021-04-03 03:20:12,401:INFO:display_container: 2
2021-04-03 03:20:12,406:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 03:20:12,407:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:12,514:INFO:SubProcess create_model() end ==================================
2021-04-03 03:20:12,514:INFO:Creating metrics dataframe
2021-04-03 03:20:12,538:INFO:Initializing Light Gradient Boosting Machine
2021-04-03 03:20:12,538:INFO:Total runtime is 0.5135263363520305 minutes
2021-04-03 03:20:12,548:INFO:SubProcess create_model() called ==================================
2021-04-03 03:20:12,548:INFO:Initializing create_model()
2021-04-03 03:20:12,548:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FACBE1F0>, kwargs={})
2021-04-03 03:20:12,548:INFO:Checking exceptions
2021-04-03 03:20:12,549:INFO:Importing libraries
2021-04-03 03:20:12,549:INFO:Copying training dataset
2021-04-03 03:20:12,551:INFO:Defining folds
2021-04-03 03:20:12,551:INFO:Declaring metric variables
2021-04-03 03:20:12,564:INFO:Importing untrained model
2021-04-03 03:20:12,577:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-03 03:20:12,608:INFO:Starting cross validation
2021-04-03 03:20:12,609:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:13,375:INFO:Calculating mean and std
2021-04-03 03:20:13,376:INFO:Creating metrics dataframe
2021-04-03 03:20:13,387:INFO:Uploading results into container
2021-04-03 03:20:13,387:INFO:Uploading model into container now
2021-04-03 03:20:13,387:INFO:create_model_container: 17
2021-04-03 03:20:13,387:INFO:master_model_container: 17
2021-04-03 03:20:13,387:INFO:display_container: 2
2021-04-03 03:20:13,391:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-03 03:20:13,391:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:13,511:INFO:SubProcess create_model() end ==================================
2021-04-03 03:20:13,511:INFO:Creating metrics dataframe
2021-04-03 03:20:13,569:INFO:Initializing create_model()
2021-04-03 03:20:13,570:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:20:13,570:INFO:Checking exceptions
2021-04-03 03:20:13,570:INFO:Importing libraries
2021-04-03 03:20:13,570:INFO:Copying training dataset
2021-04-03 03:20:13,570:INFO:Defining folds
2021-04-03 03:20:13,571:INFO:Declaring metric variables
2021-04-03 03:20:13,571:INFO:Importing untrained model
2021-04-03 03:20:13,571:INFO:Declaring custom model
2021-04-03 03:20:13,573:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 03:20:13,573:INFO:Cross validation set to False
2021-04-03 03:20:13,573:INFO:Fitting Model
2021-04-03 03:20:13,694:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:20:13,694:INFO:create_models() succesfully completed......................................
2021-04-03 03:20:13,773:INFO:Creating MLFlow logs
2021-04-03 03:20:13,785:INFO:Model: Gradient Boosting Regressor
2021-04-03 03:20:13,829:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:20:13,961:INFO:Initializing predict_model()
2021-04-03 03:20:13,961:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:20:13,961:INFO:Checking exceptions
2021-04-03 03:20:13,961:INFO:Preloading libraries
2021-04-03 03:20:14,225:INFO:Creating MLFlow logs
2021-04-03 03:20:14,236:INFO:Model: Extreme Gradient Boosting
2021-04-03 03:20:14,268:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-03 03:20:14,549:INFO:Creating MLFlow logs
2021-04-03 03:20:14,563:INFO:Model: Random Forest Regressor
2021-04-03 03:20:14,608:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 03:20:14,857:INFO:Creating MLFlow logs
2021-04-03 03:20:14,868:INFO:Model: Decision Tree Regressor
2021-04-03 03:20:14,913:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-03 03:20:15,197:INFO:Creating MLFlow logs
2021-04-03 03:20:15,207:INFO:Model: Extra Trees Regressor
2021-04-03 03:20:15,242:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 03:20:15,491:INFO:Creating MLFlow logs
2021-04-03 03:20:15,503:INFO:Model: Light Gradient Boosting Machine
2021-04-03 03:20:15,547:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-03 03:20:15,808:INFO:Creating MLFlow logs
2021-04-03 03:20:15,822:INFO:Model: AdaBoost Regressor
2021-04-03 03:20:15,864:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-03 03:20:16,094:INFO:Creating MLFlow logs
2021-04-03 03:20:16,106:INFO:Model: Huber Regressor
2021-04-03 03:20:16,145:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 03:20:16,374:INFO:Creating MLFlow logs
2021-04-03 03:20:16,387:INFO:Model: K Neighbors Regressor
2021-04-03 03:20:16,424:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-03 03:20:16,692:INFO:Creating MLFlow logs
2021-04-03 03:20:16,707:INFO:Model: Ridge Regression
2021-04-03 03:20:16,749:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 03:20:16,990:INFO:Creating MLFlow logs
2021-04-03 03:20:17,002:INFO:Model: Linear Regression
2021-04-03 03:20:17,041:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 03:20:17,318:INFO:Creating MLFlow logs
2021-04-03 03:20:17,335:INFO:Model: Bayesian Ridge
2021-04-03 03:20:17,379:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 03:20:17,651:INFO:Creating MLFlow logs
2021-04-03 03:20:17,665:INFO:Model: Orthogonal Matching Pursuit
2021-04-03 03:20:17,717:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-03 03:20:17,991:INFO:Creating MLFlow logs
2021-04-03 03:20:18,002:INFO:Model: Lasso Regression
2021-04-03 03:20:18,037:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 03:20:18,271:INFO:Creating MLFlow logs
2021-04-03 03:20:18,282:INFO:Model: Elastic Net
2021-04-03 03:20:18,330:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 03:20:18,581:INFO:Creating MLFlow logs
2021-04-03 03:20:18,595:INFO:Model: Least Angle Regression
2021-04-03 03:20:18,639:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-03 03:20:18,880:INFO:Creating MLFlow logs
2021-04-03 03:20:18,896:INFO:Model: Passive Aggressive Regressor
2021-04-03 03:20:18,947:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:20:19,259:INFO:create_model_container: 17
2021-04-03 03:20:19,259:INFO:master_model_container: 17
2021-04-03 03:20:19,259:INFO:display_container: 2
2021-04-03 03:20:19,262:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:20:19,262:INFO:compare_models() succesfully completed......................................
2021-04-03 03:20:19,272:INFO:Initializing create_model()
2021-04-03 03:20:19,272:INFO:create_model(estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-03 03:20:19,273:INFO:Checking exceptions
2021-04-03 03:20:19,273:INFO:Preparing display monitor
2021-04-03 03:20:19,301:INFO:Importing libraries
2021-04-03 03:20:19,302:INFO:Copying training dataset
2021-04-03 03:20:19,303:INFO:Defining folds
2021-04-03 03:20:19,304:INFO:Declaring metric variables
2021-04-03 03:20:19,315:INFO:Importing untrained model
2021-04-03 03:20:19,333:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 03:20:19,367:INFO:Starting cross validation
2021-04-03 03:20:19,370:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:20,915:INFO:Calculating mean and std
2021-04-03 03:20:20,918:INFO:Creating metrics dataframe
2021-04-03 03:20:20,939:INFO:Finalizing model
2021-04-03 03:20:22,093:INFO:Creating MLFlow logs
2021-04-03 03:20:22,106:INFO:Model: Extreme Gradient Boosting
2021-04-03 03:20:22,144:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'gpu_id': -1, 'importance_type': 'gain', 'interaction_constraints': '', 'learning_rate': 0.300000012, 'max_delta_step': 0, 'max_depth': 6, 'min_child_weight': 1, 'missing': nan, 'monotone_constraints': '()', 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': 1, 'random_state': 786, 'reg_alpha': 0, 'reg_lambda': 1, 'scale_pos_weight': 1, 'subsample': 1, 'tree_method': 'auto', 'validate_parameters': 1, 'verbosity': 0}
2021-04-03 03:20:22,296:INFO:Initializing predict_model()
2021-04-03 03:20:22,296:INFO:predict_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:20:22,296:INFO:Checking exceptions
2021-04-03 03:20:22,296:INFO:Preloading libraries
2021-04-03 03:20:22,648:INFO:Uploading results into container
2021-04-03 03:20:22,649:INFO:Uploading model into container now
2021-04-03 03:20:22,671:INFO:create_model_container: 18
2021-04-03 03:20:22,671:INFO:master_model_container: 18
2021-04-03 03:20:22,671:INFO:display_container: 3
2021-04-03 03:20:22,676:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 03:20:22,676:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:22,862:INFO:Initializing tune_model()
2021-04-03 03:20:22,862:INFO:tune_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-03 03:20:22,862:INFO:Checking exceptions
2021-04-03 03:20:22,862:INFO:Preparing display monitor
2021-04-03 03:20:22,895:INFO:Copying training dataset
2021-04-03 03:20:22,896:INFO:Checking base model
2021-04-03 03:20:22,896:INFO:Base model : Extreme Gradient Boosting
2021-04-03 03:20:22,913:INFO:Declaring metric variables
2021-04-03 03:20:22,932:INFO:Defining Hyperparameters
2021-04-03 03:20:23,049:INFO:Tuning with n_jobs=-1
2021-04-03 03:20:23,050:INFO:Initializing RandomizedSearchCV
2021-04-03 03:20:35,447:INFO:best_params: {'actual_estimator__subsample': 0.9, 'actual_estimator__scale_pos_weight': 5.2, 'actual_estimator__reg_lambda': 0.15, 'actual_estimator__reg_alpha': 0.0005, 'actual_estimator__n_estimators': 270, 'actual_estimator__min_child_weight': 4, 'actual_estimator__max_depth': 8, 'actual_estimator__learning_rate': 0.4, 'actual_estimator__colsample_bytree': 1}
2021-04-03 03:20:35,448:INFO:Hyperparameter search completed
2021-04-03 03:20:35,449:INFO:SubProcess create_model() called ==================================
2021-04-03 03:20:35,457:INFO:Initializing create_model()
2021-04-03 03:20:35,457:INFO:create_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F964FFD0>, kwargs={'subsample': 0.9, 'scale_pos_weight': 5.2, 'reg_lambda': 0.15, 'reg_alpha': 0.0005, 'n_estimators': 270, 'min_child_weight': 4, 'max_depth': 8, 'learning_rate': 0.4, 'colsample_bytree': 1})
2021-04-03 03:20:35,458:INFO:Checking exceptions
2021-04-03 03:20:35,458:INFO:Importing libraries
2021-04-03 03:20:35,458:INFO:Copying training dataset
2021-04-03 03:20:35,459:INFO:Defining folds
2021-04-03 03:20:35,460:INFO:Declaring metric variables
2021-04-03 03:20:35,481:INFO:Importing untrained model
2021-04-03 03:20:35,481:INFO:Declaring custom model
2021-04-03 03:20:35,506:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 03:20:35,558:INFO:Starting cross validation
2021-04-03 03:20:35,560:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:37,559:INFO:Calculating mean and std
2021-04-03 03:20:37,561:INFO:Creating metrics dataframe
2021-04-03 03:20:37,587:INFO:Finalizing model
2021-04-03 03:20:38,037:INFO:Uploading results into container
2021-04-03 03:20:38,038:INFO:Uploading model into container now
2021-04-03 03:20:38,038:INFO:create_model_container: 19
2021-04-03 03:20:38,038:INFO:master_model_container: 19
2021-04-03 03:20:38,038:INFO:display_container: 4
2021-04-03 03:20:38,043:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 03:20:38,043:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:38,162:INFO:SubProcess create_model() end ==================================
2021-04-03 03:20:38,163:INFO:Creating MLFlow logs
2021-04-03 03:20:38,179:INFO:Model: Extreme Gradient Boosting
2021-04-03 03:20:38,226:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'gpu_id': -1, 'importance_type': 'gain', 'interaction_constraints': '', 'learning_rate': 0.4, 'max_delta_step': 0, 'max_depth': 8, 'min_child_weight': 4, 'missing': nan, 'monotone_constraints': '()', 'n_estimators': 270, 'n_jobs': -1, 'num_parallel_tree': 1, 'random_state': 786, 'reg_alpha': 0.0005, 'reg_lambda': 0.15, 'scale_pos_weight': 5.2, 'subsample': 0.9, 'tree_method': 'auto', 'validate_parameters': 1, 'verbosity': 0}
2021-04-03 03:20:38,378:INFO:Initializing predict_model()
2021-04-03 03:20:38,378:INFO:predict_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:20:38,378:INFO:Checking exceptions
2021-04-03 03:20:38,378:INFO:Preloading libraries
2021-04-03 03:20:38,756:INFO:create_model_container: 19
2021-04-03 03:20:38,757:INFO:master_model_container: 19
2021-04-03 03:20:38,757:INFO:display_container: 4
2021-04-03 03:20:38,760:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 03:20:38,760:INFO:tune_model() succesfully completed......................................
2021-04-03 03:20:38,894:INFO:Initializing plot_model()
2021-04-03 03:20:38,894:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:20:38,894:INFO:Checking exceptions
2021-04-03 03:20:38,894:INFO:Preparing display monitor
2021-04-03 03:20:38,905:INFO:Preloading libraries
2021-04-03 03:20:38,982:INFO:Copying training dataset
2021-04-03 03:20:38,983:INFO:Copying test dataset
2021-04-03 03:20:38,983:INFO:Plot type: residuals
2021-04-03 03:20:39,128:INFO:Fitting Model
2021-04-03 03:20:39,209:INFO:Scoring test/hold-out set
2021-04-03 03:20:40,126:INFO:Visual Rendered Successfully
2021-04-03 03:20:40,223:INFO:plot_model() succesfully completed......................................
2021-04-03 03:20:40,236:INFO:Initializing plot_model()
2021-04-03 03:20:40,236:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:20:40,236:INFO:Checking exceptions
2021-04-03 03:20:40,237:INFO:Preparing display monitor
2021-04-03 03:20:40,245:INFO:Preloading libraries
2021-04-03 03:20:40,299:INFO:Copying training dataset
2021-04-03 03:20:40,299:INFO:Copying test dataset
2021-04-03 03:20:40,299:INFO:Plot type: error
2021-04-03 03:20:40,300:INFO:Fitting Model
2021-04-03 03:20:40,303:INFO:Scoring test/hold-out set
2021-04-03 03:20:40,690:INFO:Visual Rendered Successfully
2021-04-03 03:20:40,806:INFO:plot_model() succesfully completed......................................
2021-04-03 03:20:40,829:INFO:Initializing plot_model()
2021-04-03 03:20:40,829:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:20:40,829:INFO:Checking exceptions
2021-04-03 03:20:40,829:INFO:Preparing display monitor
2021-04-03 03:20:40,839:INFO:Preloading libraries
2021-04-03 03:20:40,896:INFO:Copying training dataset
2021-04-03 03:20:40,896:INFO:Copying test dataset
2021-04-03 03:20:40,897:INFO:Plot type: feature
2021-04-03 03:20:40,898:WARNING:No coef_ found. Trying feature_importances_
2021-04-03 03:20:41,123:INFO:Visual Rendered Successfully
2021-04-03 03:20:41,215:INFO:plot_model() succesfully completed......................................
2021-04-03 03:20:41,258:INFO:Initializing evaluate_model()
2021-04-03 03:20:41,259:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-03 03:20:41,315:INFO:Initializing plot_model()
2021-04-03 03:20:41,316:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:20:41,316:INFO:Checking exceptions
2021-04-03 03:20:41,316:INFO:Preparing display monitor
2021-04-03 03:20:41,338:INFO:Preloading libraries
2021-04-03 03:20:41,409:INFO:Copying training dataset
2021-04-03 03:20:41,410:INFO:Copying test dataset
2021-04-03 03:20:41,410:INFO:Plot type: parameter
2021-04-03 03:20:41,427:INFO:Visual Rendered Successfully
2021-04-03 03:20:41,558:INFO:plot_model() succesfully completed......................................
2021-04-03 03:20:43,702:INFO:Initializing interpret_model()
2021-04-03 03:20:43,703:INFO:interpret_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), use_train_data=False, feature=None, kwargs={}, observation=None, plot=summary, save=False)
2021-04-03 03:20:43,703:INFO:Checking exceptions
2021-04-03 03:20:43,867:INFO:plot type: summary
2021-04-03 03:20:43,867:INFO:Creating TreeExplainer
2021-04-03 03:20:44,030:INFO:Compiling shap values
2021-04-03 03:20:44,692:INFO:Visual Rendered Successfully
2021-04-03 03:20:44,692:INFO:interpret_model() succesfully completed......................................
2021-04-03 03:20:44,796:INFO:Initializing automl()
2021-04-03 03:20:44,796:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-03 03:20:44,797:INFO:Model Selection Basis : CV Results on Training set
2021-04-03 03:20:44,803:INFO:Initializing create_model()
2021-04-03 03:20:44,803:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:20:44,803:INFO:Checking exceptions
2021-04-03 03:20:44,803:INFO:Importing libraries
2021-04-03 03:20:44,803:INFO:Copying training dataset
2021-04-03 03:20:44,804:INFO:Defining folds
2021-04-03 03:20:44,805:INFO:Declaring metric variables
2021-04-03 03:20:44,805:INFO:Importing untrained model
2021-04-03 03:20:44,805:INFO:Declaring custom model
2021-04-03 03:20:44,809:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 03:20:44,809:INFO:Cross validation set to False
2021-04-03 03:20:44,809:INFO:Fitting Model
2021-04-03 03:20:44,891:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:20:44,891:INFO:create_models() succesfully completed......................................
2021-04-03 03:20:44,985:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:20:44,985:INFO:automl() succesfully completed......................................
2021-04-03 03:20:45,002:INFO:Initializing predict_model()
2021-04-03 03:20:45,003:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:20:45,003:INFO:Checking exceptions
2021-04-03 03:20:45,004:INFO:Preloading libraries
2021-04-03 03:20:45,004:INFO:Preparing display monitor
2021-04-03 03:20:45,174:INFO:Initializing finalize_model()
2021-04-03 03:20:45,174:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-03 03:20:45,179:INFO:Finalizing PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:20:45,182:INFO:Initializing create_model()
2021-04-03 03:20:45,182:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:20:45,183:INFO:Checking exceptions
2021-04-03 03:20:45,183:INFO:Importing libraries
2021-04-03 03:20:45,183:INFO:Copying training dataset
2021-04-03 03:20:45,184:INFO:Defining folds
2021-04-03 03:20:45,187:INFO:Declaring metric variables
2021-04-03 03:20:45,188:INFO:Importing untrained model
2021-04-03 03:20:45,188:INFO:Declaring custom model
2021-04-03 03:20:45,192:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 03:20:45,192:INFO:Starting cross validation
2021-04-03 03:20:45,193:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:20:45,686:INFO:Calculating mean and std
2021-04-03 03:20:45,687:INFO:Creating metrics dataframe
2021-04-03 03:20:45,692:INFO:Finalizing model
2021-04-03 03:20:45,765:INFO:Uploading results into container
2021-04-03 03:20:45,765:INFO:Uploading model into container now
2021-04-03 03:20:45,765:INFO:create_model_container: 20
2021-04-03 03:20:45,765:INFO:master_model_container: 20
2021-04-03 03:20:45,765:INFO:display_container: 6
2021-04-03 03:20:45,766:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:20:45,767:INFO:create_model() succesfully completed......................................
2021-04-03 03:20:45,849:INFO:Creating MLFlow logs
2021-04-03 03:20:45,852:INFO:Model: Gradient Boosting Regressor
2021-04-03 03:20:45,883:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:20:46,026:INFO:Initializing predict_model()
2021-04-03 03:20:46,026:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:20:46,026:INFO:Checking exceptions
2021-04-03 03:20:46,026:INFO:Preloading libraries
2021-04-03 03:20:46,286:INFO:create_model_container: 20
2021-04-03 03:20:46,286:INFO:master_model_container: 20
2021-04-03 03:20:46,286:INFO:display_container: 5
2021-04-03 03:20:46,288:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:20:46,288:INFO:finalize_model() succesfully completed......................................
2021-04-03 03:20:46,406:INFO:Initializing predict_model()
2021-04-03 03:20:46,407:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:20:46,407:INFO:Checking exceptions
2021-04-03 03:20:46,407:INFO:Preloading libraries
2021-04-03 03:20:46,407:INFO:Preparing display monitor
2021-04-03 03:20:46,596:INFO:Initializing predict_model()
2021-04-03 03:20:46,596:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:20:46,597:INFO:Checking exceptions
2021-04-03 03:20:46,597:INFO:Preloading libraries
2021-04-03 03:20:46,598:INFO:Preparing display monitor
2021-04-03 03:20:46,836:INFO:Initializing save_model()
2021-04-03 03:20:46,836:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), model_name=saved_models/best_2nd_model_to_predict_median_income_xgboost, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2021-04-03 03:20:46,836:INFO:Adding model into prep_pipe
2021-04-03 03:20:46,878:INFO:saved_models/best_2nd_model_to_predict_median_income_xgboost.pkl saved in current working directory
2021-04-03 03:20:46,894:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                                                                                     min_impurity_decrease=0.0,
                                                                                     min_impurity_split=None,
                                                                                     min_samples_leaf=1,
                                                                                     min_samples_split=2,
                                                                                     min_weight_fraction_leaf=0.0,
                                                                                     n_estimators=100,
                                                                                     n_iter_no_change=None,
                                                                                     presort='deprecated',
                                                                                     random_state=786,
                                                                                     subsample=1.0,
                                                                                     tol=0.0001,
                                                                                     validation_fraction=0.1,
                                                                                     verbose=0,
                                                                                     warm_start=False),
                                                 subsample=1.0, tol=0.0001,
                                                 validation_fraction=0.1,
                                                 verbose=0,
                                                 warm_start=False)]],
         verbose=False)
2021-04-03 03:20:46,894:INFO:save_model() succesfully completed......................................
2021-04-03 03:20:47,135:INFO:PyCaret Supervised Module
2021-04-03 03:20:47,136:INFO:ML Usecase: regression
2021-04-03 03:20:47,137:INFO:version 2.3.0
2021-04-03 03:20:47,137:INFO:Initializing setup()
2021-04-03 03:20:47,137:INFO:setup(target=Median income, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 03:20:47,137:INFO:Checking environment
2021-04-03 03:20:47,138:INFO:python_version: 3.9.1
2021-04-03 03:20:47,138:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 03:20:47,138:INFO:machine: AMD64
2021-04-03 03:20:47,138:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 03:20:47,142:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 03:20:47,142:INFO:Checking libraries
2021-04-03 03:20:47,142:INFO:pd==1.2.2
2021-04-03 03:20:47,142:INFO:numpy==1.19.5
2021-04-03 03:20:47,143:INFO:sklearn==0.23.2
2021-04-03 03:20:47,143:INFO:lightgbm==3.1.1
2021-04-03 03:20:47,145:WARNING:catboost not found
2021-04-03 03:20:47,145:INFO:xgboost==1.3.3
2021-04-03 03:20:47,145:INFO:mlflow==1.14.1
2021-04-03 03:20:47,145:INFO:Checking Exceptions
2021-04-03 03:20:47,145:INFO:Declaring global variables
2021-04-03 03:20:47,146:INFO:USI: 846e
2021-04-03 03:20:47,146:INFO:pycaret_globals: {'fold_shuffle_param', 'transform_target_method_param', 'gpu_param', 'master_model_container', 'transform_target_param', '_all_metrics', '_ml_usecase', 'exp_name_log', 'fix_imbalance_param', 'fold_param', 'imputation_classifier', '_all_models', 'X', '_all_models_internal', 'stratify_param', 'imputation_regressor', 'fix_imbalance_method_param', 'display_container', 'X_train', 'fold_generator', 'X_test', 'fold_groups_param', 'pycaret_globals', 'seed', '_available_plots', 'logging_param', 'experiment__', 'y_train', 'n_jobs_param', 'USI', 'y_test', 'y', 'html_param', 'log_plots_param', 'data_before_preprocess', 'create_model_container', 'iterative_imputation_iters_param', '_gpu_n_jobs_param', '_internal_pipeline', 'target_param', 'prep_pipe'}
2021-04-03 03:20:47,146:INFO:Preparing display monitor
2021-04-03 03:20:47,146:INFO:Preparing display monitor
2021-04-03 03:20:47,198:INFO:Importing libraries
2021-04-03 03:20:47,199:INFO:Copying data for preprocessing
2021-04-03 03:20:47,230:INFO:Declaring preprocessing parameters
2021-04-03 03:20:47,232:INFO:Creating preprocessing pipeline
2021-04-03 03:20:47,246:INFO:Preprocessing pipeline created successfully
2021-04-03 03:20:47,247:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 03:20:47,247:INFO:Creating global containers
2021-04-03 03:20:47,248:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 03:21:09,815:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 03:21:09,947:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 03:21:09,947:INFO:Creating grid variables
2021-04-03 03:21:09,969:INFO:Logging experiment in MLFlow
2021-04-03 03:21:09,971:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-03 03:21:09,972:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-03 03:21:10,118:INFO:SubProcess save_model() called ==================================
2021-04-03 03:21:10,138:INFO:Initializing save_model()
2021-04-03 03:21:10,138:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 03:21:10,138:INFO:Adding model into prep_pipe
2021-04-03 03:21:10,140:WARNING:Only Model saved as it was a pipeline.
2021-04-03 03:21:10,160:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 03:21:10,166:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 03:21:10,167:INFO:save_model() succesfully completed......................................
2021-04-03 03:21:10,256:INFO:SubProcess save_model() end ==================================
2021-04-03 03:21:10,340:INFO:create_model_container: 0
2021-04-03 03:21:10,340:INFO:master_model_container: 0
2021-04-03 03:21:10,340:INFO:display_container: 1
2021-04-03 03:21:10,346:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 03:21:10,346:INFO:setup() succesfully completed......................................
2021-04-03 03:21:10,453:INFO:Initializing compare_models()
2021-04-03 03:21:10,453:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-03 03:21:10,454:INFO:Checking exceptions
2021-04-03 03:21:10,454:INFO:Preparing display monitor
2021-04-03 03:21:10,455:INFO:Preparing display monitor
2021-04-03 03:21:10,510:INFO:Initializing Linear Regression
2021-04-03 03:21:10,510:INFO:Total runtime is 0.0 minutes
2021-04-03 03:21:10,527:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:10,527:INFO:Initializing create_model()
2021-04-03 03:21:10,528:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:10,528:INFO:Checking exceptions
2021-04-03 03:21:10,528:INFO:Importing libraries
2021-04-03 03:21:10,529:INFO:Copying training dataset
2021-04-03 03:21:10,531:INFO:Defining folds
2021-04-03 03:21:10,531:INFO:Declaring metric variables
2021-04-03 03:21:10,546:INFO:Importing untrained model
2021-04-03 03:21:10,564:INFO:Linear Regression Imported succesfully
2021-04-03 03:21:10,599:INFO:Starting cross validation
2021-04-03 03:21:10,600:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:10,875:INFO:Calculating mean and std
2021-04-03 03:21:10,877:INFO:Creating metrics dataframe
2021-04-03 03:21:10,883:INFO:Uploading results into container
2021-04-03 03:21:10,883:INFO:Uploading model into container now
2021-04-03 03:21:10,884:INFO:create_model_container: 1
2021-04-03 03:21:10,884:INFO:master_model_container: 1
2021-04-03 03:21:10,884:INFO:display_container: 2
2021-04-03 03:21:10,885:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 03:21:10,886:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:11,015:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:11,015:INFO:Creating metrics dataframe
2021-04-03 03:21:11,065:INFO:Initializing Lasso Regression
2021-04-03 03:21:11,065:INFO:Total runtime is 0.00925443967183431 minutes
2021-04-03 03:21:11,082:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:11,083:INFO:Initializing create_model()
2021-04-03 03:21:11,083:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:11,083:INFO:Checking exceptions
2021-04-03 03:21:11,083:INFO:Importing libraries
2021-04-03 03:21:11,084:INFO:Copying training dataset
2021-04-03 03:21:11,087:INFO:Defining folds
2021-04-03 03:21:11,087:INFO:Declaring metric variables
2021-04-03 03:21:11,105:INFO:Importing untrained model
2021-04-03 03:21:11,126:INFO:Lasso Regression Imported succesfully
2021-04-03 03:21:11,193:INFO:Starting cross validation
2021-04-03 03:21:11,195:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:11,325:INFO:Calculating mean and std
2021-04-03 03:21:11,327:INFO:Creating metrics dataframe
2021-04-03 03:21:11,338:INFO:Uploading results into container
2021-04-03 03:21:11,338:INFO:Uploading model into container now
2021-04-03 03:21:11,338:INFO:create_model_container: 2
2021-04-03 03:21:11,338:INFO:master_model_container: 2
2021-04-03 03:21:11,338:INFO:display_container: 2
2021-04-03 03:21:11,341:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 03:21:11,341:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:11,485:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:11,488:INFO:Creating metrics dataframe
2021-04-03 03:21:11,514:INFO:Initializing Ridge Regression
2021-04-03 03:21:11,514:INFO:Total runtime is 0.01674139897028605 minutes
2021-04-03 03:21:11,530:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:11,530:INFO:Initializing create_model()
2021-04-03 03:21:11,531:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:11,531:INFO:Checking exceptions
2021-04-03 03:21:11,531:INFO:Importing libraries
2021-04-03 03:21:11,531:INFO:Copying training dataset
2021-04-03 03:21:11,532:INFO:Defining folds
2021-04-03 03:21:11,532:INFO:Declaring metric variables
2021-04-03 03:21:11,549:INFO:Importing untrained model
2021-04-03 03:21:11,565:INFO:Ridge Regression Imported succesfully
2021-04-03 03:21:11,594:INFO:Starting cross validation
2021-04-03 03:21:11,596:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:11,697:INFO:Calculating mean and std
2021-04-03 03:21:11,698:INFO:Creating metrics dataframe
2021-04-03 03:21:11,704:INFO:Uploading results into container
2021-04-03 03:21:11,705:INFO:Uploading model into container now
2021-04-03 03:21:11,705:INFO:create_model_container: 3
2021-04-03 03:21:11,706:INFO:master_model_container: 3
2021-04-03 03:21:11,706:INFO:display_container: 2
2021-04-03 03:21:11,708:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:21:11,708:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:11,826:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:11,826:INFO:Creating metrics dataframe
2021-04-03 03:21:11,859:INFO:Initializing Elastic Net
2021-04-03 03:21:11,859:INFO:Total runtime is 0.022490429878234863 minutes
2021-04-03 03:21:11,877:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:11,877:INFO:Initializing create_model()
2021-04-03 03:21:11,877:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:11,878:INFO:Checking exceptions
2021-04-03 03:21:11,878:INFO:Importing libraries
2021-04-03 03:21:11,878:INFO:Copying training dataset
2021-04-03 03:21:11,879:INFO:Defining folds
2021-04-03 03:21:11,880:INFO:Declaring metric variables
2021-04-03 03:21:11,899:INFO:Importing untrained model
2021-04-03 03:21:11,916:INFO:Elastic Net Imported succesfully
2021-04-03 03:21:11,944:INFO:Starting cross validation
2021-04-03 03:21:11,945:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:12,211:INFO:Calculating mean and std
2021-04-03 03:21:12,214:INFO:Creating metrics dataframe
2021-04-03 03:21:12,224:INFO:Uploading results into container
2021-04-03 03:21:12,224:INFO:Uploading model into container now
2021-04-03 03:21:12,225:INFO:create_model_container: 4
2021-04-03 03:21:12,225:INFO:master_model_container: 4
2021-04-03 03:21:12,225:INFO:display_container: 2
2021-04-03 03:21:12,227:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 03:21:12,228:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:12,350:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:12,350:INFO:Creating metrics dataframe
2021-04-03 03:21:12,384:INFO:Initializing Least Angle Regression
2021-04-03 03:21:12,385:INFO:Total runtime is 0.03125703732172648 minutes
2021-04-03 03:21:12,400:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:12,401:INFO:Initializing create_model()
2021-04-03 03:21:12,401:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:12,401:INFO:Checking exceptions
2021-04-03 03:21:12,402:INFO:Importing libraries
2021-04-03 03:21:12,402:INFO:Copying training dataset
2021-04-03 03:21:12,403:INFO:Defining folds
2021-04-03 03:21:12,405:INFO:Declaring metric variables
2021-04-03 03:21:12,420:INFO:Importing untrained model
2021-04-03 03:21:12,434:INFO:Least Angle Regression Imported succesfully
2021-04-03 03:21:12,466:INFO:Starting cross validation
2021-04-03 03:21:12,467:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:15,044:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-03 03:21:15,044:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 03:21:15,045:INFO:Initializing create_model()
2021-04-03 03:21:15,045:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:15,045:INFO:Checking exceptions
2021-04-03 03:21:15,045:INFO:Importing libraries
2021-04-03 03:21:15,045:INFO:Copying training dataset
2021-04-03 03:21:15,046:INFO:Defining folds
2021-04-03 03:21:15,046:INFO:Declaring metric variables
2021-04-03 03:21:15,058:INFO:Importing untrained model
2021-04-03 03:21:15,081:INFO:Least Angle Regression Imported succesfully
2021-04-03 03:21:15,132:INFO:Starting cross validation
2021-04-03 03:21:15,133:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:22,947:ERROR:create_model() for lar raised an exception:
2021-04-03 03:21:22,948:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 03:21:22,949:INFO:Initializing Lasso Least Angle Regression
2021-04-03 03:21:22,949:INFO:Total runtime is 0.20731770197550453 minutes
2021-04-03 03:21:22,962:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:22,962:INFO:Initializing create_model()
2021-04-03 03:21:22,963:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:22,963:INFO:Checking exceptions
2021-04-03 03:21:22,963:INFO:Importing libraries
2021-04-03 03:21:22,963:INFO:Copying training dataset
2021-04-03 03:21:22,965:INFO:Defining folds
2021-04-03 03:21:22,965:INFO:Declaring metric variables
2021-04-03 03:21:22,975:INFO:Importing untrained model
2021-04-03 03:21:22,994:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-03 03:21:23,019:INFO:Starting cross validation
2021-04-03 03:21:23,021:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:29,104:INFO:Calculating mean and std
2021-04-03 03:21:29,105:INFO:Creating metrics dataframe
2021-04-03 03:21:29,111:INFO:Uploading results into container
2021-04-03 03:21:29,112:INFO:Uploading model into container now
2021-04-03 03:21:29,112:INFO:create_model_container: 5
2021-04-03 03:21:29,112:INFO:master_model_container: 5
2021-04-03 03:21:29,112:INFO:display_container: 2
2021-04-03 03:21:29,114:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-03 03:21:29,114:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:29,214:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:29,215:INFO:Creating metrics dataframe
2021-04-03 03:21:29,257:INFO:Initializing Orthogonal Matching Pursuit
2021-04-03 03:21:29,257:INFO:Total runtime is 0.3124436259269714 minutes
2021-04-03 03:21:29,268:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:29,268:INFO:Initializing create_model()
2021-04-03 03:21:29,268:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:29,268:INFO:Checking exceptions
2021-04-03 03:21:29,268:INFO:Importing libraries
2021-04-03 03:21:29,269:INFO:Copying training dataset
2021-04-03 03:21:29,270:INFO:Defining folds
2021-04-03 03:21:29,270:INFO:Declaring metric variables
2021-04-03 03:21:29,281:INFO:Importing untrained model
2021-04-03 03:21:29,304:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-03 03:21:29,335:INFO:Starting cross validation
2021-04-03 03:21:29,337:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:29,446:INFO:Calculating mean and std
2021-04-03 03:21:29,448:INFO:Creating metrics dataframe
2021-04-03 03:21:29,457:INFO:Uploading results into container
2021-04-03 03:21:29,457:INFO:Uploading model into container now
2021-04-03 03:21:29,458:INFO:create_model_container: 6
2021-04-03 03:21:29,458:INFO:master_model_container: 6
2021-04-03 03:21:29,458:INFO:display_container: 2
2021-04-03 03:21:29,459:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-03 03:21:29,460:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:29,578:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:29,578:INFO:Creating metrics dataframe
2021-04-03 03:21:29,611:INFO:Initializing Bayesian Ridge
2021-04-03 03:21:29,612:INFO:Total runtime is 0.31836616992950434 minutes
2021-04-03 03:21:29,625:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:29,625:INFO:Initializing create_model()
2021-04-03 03:21:29,626:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:29,626:INFO:Checking exceptions
2021-04-03 03:21:29,626:INFO:Importing libraries
2021-04-03 03:21:29,626:INFO:Copying training dataset
2021-04-03 03:21:29,629:INFO:Defining folds
2021-04-03 03:21:29,629:INFO:Declaring metric variables
2021-04-03 03:21:29,643:INFO:Importing untrained model
2021-04-03 03:21:29,661:INFO:Bayesian Ridge Imported succesfully
2021-04-03 03:21:29,688:INFO:Starting cross validation
2021-04-03 03:21:29,689:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:29,781:INFO:Calculating mean and std
2021-04-03 03:21:29,782:INFO:Creating metrics dataframe
2021-04-03 03:21:29,790:INFO:Uploading results into container
2021-04-03 03:21:29,792:INFO:Uploading model into container now
2021-04-03 03:21:29,792:INFO:create_model_container: 7
2021-04-03 03:21:29,792:INFO:master_model_container: 7
2021-04-03 03:21:29,792:INFO:display_container: 2
2021-04-03 03:21:29,795:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:21:29,795:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:29,902:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:29,902:INFO:Creating metrics dataframe
2021-04-03 03:21:29,932:INFO:Initializing Passive Aggressive Regressor
2021-04-03 03:21:29,932:INFO:Total runtime is 0.32370419502258296 minutes
2021-04-03 03:21:29,944:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:29,944:INFO:Initializing create_model()
2021-04-03 03:21:29,945:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:29,945:INFO:Checking exceptions
2021-04-03 03:21:29,945:INFO:Importing libraries
2021-04-03 03:21:29,945:INFO:Copying training dataset
2021-04-03 03:21:29,946:INFO:Defining folds
2021-04-03 03:21:29,946:INFO:Declaring metric variables
2021-04-03 03:21:29,958:INFO:Importing untrained model
2021-04-03 03:21:29,972:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-03 03:21:30,007:INFO:Starting cross validation
2021-04-03 03:21:30,008:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:30,133:INFO:Calculating mean and std
2021-04-03 03:21:30,136:INFO:Creating metrics dataframe
2021-04-03 03:21:30,148:INFO:Uploading results into container
2021-04-03 03:21:30,148:INFO:Uploading model into container now
2021-04-03 03:21:30,149:INFO:create_model_container: 8
2021-04-03 03:21:30,149:INFO:master_model_container: 8
2021-04-03 03:21:30,149:INFO:display_container: 2
2021-04-03 03:21:30,152:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:21:30,153:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:30,377:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:30,377:INFO:Creating metrics dataframe
2021-04-03 03:21:30,414:INFO:Initializing Huber Regressor
2021-04-03 03:21:30,414:INFO:Total runtime is 0.3317304452260335 minutes
2021-04-03 03:21:30,429:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:30,430:INFO:Initializing create_model()
2021-04-03 03:21:30,430:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:30,431:INFO:Checking exceptions
2021-04-03 03:21:30,431:INFO:Importing libraries
2021-04-03 03:21:30,431:INFO:Copying training dataset
2021-04-03 03:21:30,432:INFO:Defining folds
2021-04-03 03:21:30,432:INFO:Declaring metric variables
2021-04-03 03:21:30,449:INFO:Importing untrained model
2021-04-03 03:21:30,464:INFO:Huber Regressor Imported succesfully
2021-04-03 03:21:30,487:INFO:Starting cross validation
2021-04-03 03:21:30,489:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:30,712:INFO:Calculating mean and std
2021-04-03 03:21:30,713:INFO:Creating metrics dataframe
2021-04-03 03:21:30,723:INFO:Uploading results into container
2021-04-03 03:21:30,723:INFO:Uploading model into container now
2021-04-03 03:21:30,724:INFO:create_model_container: 9
2021-04-03 03:21:30,724:INFO:master_model_container: 9
2021-04-03 03:21:30,724:INFO:display_container: 2
2021-04-03 03:21:30,726:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 03:21:30,727:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:30,831:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:30,831:INFO:Creating metrics dataframe
2021-04-03 03:21:30,853:INFO:Initializing K Neighbors Regressor
2021-04-03 03:21:30,853:INFO:Total runtime is 0.33905897537867224 minutes
2021-04-03 03:21:30,867:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:30,867:INFO:Initializing create_model()
2021-04-03 03:21:30,867:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:30,867:INFO:Checking exceptions
2021-04-03 03:21:30,868:INFO:Importing libraries
2021-04-03 03:21:30,868:INFO:Copying training dataset
2021-04-03 03:21:30,869:INFO:Defining folds
2021-04-03 03:21:30,869:INFO:Declaring metric variables
2021-04-03 03:21:30,879:INFO:Importing untrained model
2021-04-03 03:21:30,896:INFO:K Neighbors Regressor Imported succesfully
2021-04-03 03:21:30,927:INFO:Starting cross validation
2021-04-03 03:21:30,928:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:31,072:INFO:Calculating mean and std
2021-04-03 03:21:31,073:INFO:Creating metrics dataframe
2021-04-03 03:21:31,079:INFO:Uploading results into container
2021-04-03 03:21:31,079:INFO:Uploading model into container now
2021-04-03 03:21:31,079:INFO:create_model_container: 10
2021-04-03 03:21:31,080:INFO:master_model_container: 10
2021-04-03 03:21:31,080:INFO:display_container: 2
2021-04-03 03:21:31,082:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-03 03:21:31,082:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:31,204:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:31,204:INFO:Creating metrics dataframe
2021-04-03 03:21:31,229:INFO:Initializing Decision Tree Regressor
2021-04-03 03:21:31,229:INFO:Total runtime is 0.3453108429908752 minutes
2021-04-03 03:21:31,246:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:31,247:INFO:Initializing create_model()
2021-04-03 03:21:31,248:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:31,248:INFO:Checking exceptions
2021-04-03 03:21:31,248:INFO:Importing libraries
2021-04-03 03:21:31,248:INFO:Copying training dataset
2021-04-03 03:21:31,250:INFO:Defining folds
2021-04-03 03:21:31,251:INFO:Declaring metric variables
2021-04-03 03:21:31,262:INFO:Importing untrained model
2021-04-03 03:21:31,273:INFO:Decision Tree Regressor Imported succesfully
2021-04-03 03:21:31,296:INFO:Starting cross validation
2021-04-03 03:21:31,297:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:31,468:INFO:Calculating mean and std
2021-04-03 03:21:31,471:INFO:Creating metrics dataframe
2021-04-03 03:21:31,481:INFO:Uploading results into container
2021-04-03 03:21:31,481:INFO:Uploading model into container now
2021-04-03 03:21:31,482:INFO:create_model_container: 11
2021-04-03 03:21:31,482:INFO:master_model_container: 11
2021-04-03 03:21:31,482:INFO:display_container: 2
2021-04-03 03:21:31,485:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-03 03:21:31,485:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:31,658:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:31,658:INFO:Creating metrics dataframe
2021-04-03 03:21:31,688:INFO:Initializing Random Forest Regressor
2021-04-03 03:21:31,688:INFO:Total runtime is 0.3529697736104329 minutes
2021-04-03 03:21:31,700:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:31,701:INFO:Initializing create_model()
2021-04-03 03:21:31,701:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:31,701:INFO:Checking exceptions
2021-04-03 03:21:31,701:INFO:Importing libraries
2021-04-03 03:21:31,701:INFO:Copying training dataset
2021-04-03 03:21:31,702:INFO:Defining folds
2021-04-03 03:21:31,703:INFO:Declaring metric variables
2021-04-03 03:21:31,717:INFO:Importing untrained model
2021-04-03 03:21:31,727:INFO:Random Forest Regressor Imported succesfully
2021-04-03 03:21:31,759:INFO:Starting cross validation
2021-04-03 03:21:31,760:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:32,756:INFO:Calculating mean and std
2021-04-03 03:21:32,757:INFO:Creating metrics dataframe
2021-04-03 03:21:32,762:INFO:Uploading results into container
2021-04-03 03:21:32,762:INFO:Uploading model into container now
2021-04-03 03:21:32,763:INFO:create_model_container: 12
2021-04-03 03:21:32,763:INFO:master_model_container: 12
2021-04-03 03:21:32,763:INFO:display_container: 2
2021-04-03 03:21:32,767:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 03:21:32,767:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:32,881:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:32,881:INFO:Creating metrics dataframe
2021-04-03 03:21:32,901:INFO:Initializing Extra Trees Regressor
2021-04-03 03:21:32,901:INFO:Total runtime is 0.3731904943784078 minutes
2021-04-03 03:21:32,913:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:32,914:INFO:Initializing create_model()
2021-04-03 03:21:32,914:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:32,914:INFO:Checking exceptions
2021-04-03 03:21:32,914:INFO:Importing libraries
2021-04-03 03:21:32,914:INFO:Copying training dataset
2021-04-03 03:21:32,916:INFO:Defining folds
2021-04-03 03:21:32,916:INFO:Declaring metric variables
2021-04-03 03:21:32,929:INFO:Importing untrained model
2021-04-03 03:21:32,941:INFO:Extra Trees Regressor Imported succesfully
2021-04-03 03:21:32,968:INFO:Starting cross validation
2021-04-03 03:21:32,968:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:33,990:INFO:Calculating mean and std
2021-04-03 03:21:33,991:INFO:Creating metrics dataframe
2021-04-03 03:21:33,996:INFO:Uploading results into container
2021-04-03 03:21:33,996:INFO:Uploading model into container now
2021-04-03 03:21:33,996:INFO:create_model_container: 13
2021-04-03 03:21:33,996:INFO:master_model_container: 13
2021-04-03 03:21:33,996:INFO:display_container: 2
2021-04-03 03:21:33,998:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 03:21:33,998:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:34,086:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:34,086:INFO:Creating metrics dataframe
2021-04-03 03:21:34,107:INFO:Initializing AdaBoost Regressor
2021-04-03 03:21:34,108:INFO:Total runtime is 0.39330822229385376 minutes
2021-04-03 03:21:34,120:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:34,121:INFO:Initializing create_model()
2021-04-03 03:21:34,121:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:34,121:INFO:Checking exceptions
2021-04-03 03:21:34,121:INFO:Importing libraries
2021-04-03 03:21:34,121:INFO:Copying training dataset
2021-04-03 03:21:34,123:INFO:Defining folds
2021-04-03 03:21:34,124:INFO:Declaring metric variables
2021-04-03 03:21:34,137:INFO:Importing untrained model
2021-04-03 03:21:34,149:INFO:AdaBoost Regressor Imported succesfully
2021-04-03 03:21:34,182:INFO:Starting cross validation
2021-04-03 03:21:34,182:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:34,643:INFO:Calculating mean and std
2021-04-03 03:21:34,644:INFO:Creating metrics dataframe
2021-04-03 03:21:34,649:INFO:Uploading results into container
2021-04-03 03:21:34,649:INFO:Uploading model into container now
2021-04-03 03:21:34,649:INFO:create_model_container: 14
2021-04-03 03:21:34,649:INFO:master_model_container: 14
2021-04-03 03:21:34,649:INFO:display_container: 2
2021-04-03 03:21:34,650:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-03 03:21:34,650:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:34,752:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:34,752:INFO:Creating metrics dataframe
2021-04-03 03:21:34,775:INFO:Initializing Gradient Boosting Regressor
2021-04-03 03:21:34,775:INFO:Total runtime is 0.4044097383817037 minutes
2021-04-03 03:21:34,794:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:34,795:INFO:Initializing create_model()
2021-04-03 03:21:34,795:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:34,795:INFO:Checking exceptions
2021-04-03 03:21:34,796:INFO:Importing libraries
2021-04-03 03:21:34,796:INFO:Copying training dataset
2021-04-03 03:21:34,797:INFO:Defining folds
2021-04-03 03:21:34,797:INFO:Declaring metric variables
2021-04-03 03:21:34,812:INFO:Importing untrained model
2021-04-03 03:21:34,838:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 03:21:34,878:INFO:Starting cross validation
2021-04-03 03:21:34,879:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:35,405:INFO:Calculating mean and std
2021-04-03 03:21:35,406:INFO:Creating metrics dataframe
2021-04-03 03:21:35,409:INFO:Uploading results into container
2021-04-03 03:21:35,409:INFO:Uploading model into container now
2021-04-03 03:21:35,410:INFO:create_model_container: 15
2021-04-03 03:21:35,410:INFO:master_model_container: 15
2021-04-03 03:21:35,410:INFO:display_container: 2
2021-04-03 03:21:35,412:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:21:35,412:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:35,501:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:35,501:INFO:Creating metrics dataframe
2021-04-03 03:21:35,528:INFO:Initializing Extreme Gradient Boosting
2021-04-03 03:21:35,528:INFO:Total runtime is 0.41696745951970415 minutes
2021-04-03 03:21:35,541:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:35,542:INFO:Initializing create_model()
2021-04-03 03:21:35,542:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:35,543:INFO:Checking exceptions
2021-04-03 03:21:35,543:INFO:Importing libraries
2021-04-03 03:21:35,543:INFO:Copying training dataset
2021-04-03 03:21:35,545:INFO:Defining folds
2021-04-03 03:21:35,545:INFO:Declaring metric variables
2021-04-03 03:21:35,561:INFO:Importing untrained model
2021-04-03 03:21:35,575:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 03:21:35,602:INFO:Starting cross validation
2021-04-03 03:21:35,603:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:37,858:INFO:Calculating mean and std
2021-04-03 03:21:37,860:INFO:Creating metrics dataframe
2021-04-03 03:21:37,870:INFO:Uploading results into container
2021-04-03 03:21:37,870:INFO:Uploading model into container now
2021-04-03 03:21:37,871:INFO:create_model_container: 16
2021-04-03 03:21:37,871:INFO:master_model_container: 16
2021-04-03 03:21:37,871:INFO:display_container: 2
2021-04-03 03:21:37,879:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 03:21:37,879:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:38,003:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:38,003:INFO:Creating metrics dataframe
2021-04-03 03:21:38,029:INFO:Initializing Light Gradient Boosting Machine
2021-04-03 03:21:38,029:INFO:Total runtime is 0.4586521943410237 minutes
2021-04-03 03:21:38,039:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:38,040:INFO:Initializing create_model()
2021-04-03 03:21:38,040:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FB9F26A0>, kwargs={})
2021-04-03 03:21:38,040:INFO:Checking exceptions
2021-04-03 03:21:38,040:INFO:Importing libraries
2021-04-03 03:21:38,040:INFO:Copying training dataset
2021-04-03 03:21:38,041:INFO:Defining folds
2021-04-03 03:21:38,041:INFO:Declaring metric variables
2021-04-03 03:21:38,052:INFO:Importing untrained model
2021-04-03 03:21:38,064:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-03 03:21:38,097:INFO:Starting cross validation
2021-04-03 03:21:38,098:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:38,901:INFO:Calculating mean and std
2021-04-03 03:21:38,903:INFO:Creating metrics dataframe
2021-04-03 03:21:38,913:INFO:Uploading results into container
2021-04-03 03:21:38,913:INFO:Uploading model into container now
2021-04-03 03:21:38,914:INFO:create_model_container: 17
2021-04-03 03:21:38,914:INFO:master_model_container: 17
2021-04-03 03:21:38,914:INFO:display_container: 2
2021-04-03 03:21:38,917:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-03 03:21:38,918:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:39,043:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:39,044:INFO:Creating metrics dataframe
2021-04-03 03:21:39,096:INFO:Initializing create_model()
2021-04-03 03:21:39,097:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:21:39,097:INFO:Checking exceptions
2021-04-03 03:21:39,098:INFO:Importing libraries
2021-04-03 03:21:39,098:INFO:Copying training dataset
2021-04-03 03:21:39,098:INFO:Defining folds
2021-04-03 03:21:39,098:INFO:Declaring metric variables
2021-04-03 03:21:39,098:INFO:Importing untrained model
2021-04-03 03:21:39,098:INFO:Declaring custom model
2021-04-03 03:21:39,102:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 03:21:39,102:INFO:Cross validation set to False
2021-04-03 03:21:39,103:INFO:Fitting Model
2021-04-03 03:21:39,209:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:21:39,209:INFO:create_models() succesfully completed......................................
2021-04-03 03:21:39,319:INFO:Creating MLFlow logs
2021-04-03 03:21:39,331:INFO:Model: Gradient Boosting Regressor
2021-04-03 03:21:39,378:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:21:39,494:INFO:Initializing predict_model()
2021-04-03 03:21:39,494:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:21:39,494:INFO:Checking exceptions
2021-04-03 03:21:39,494:INFO:Preloading libraries
2021-04-03 03:21:39,751:INFO:Creating MLFlow logs
2021-04-03 03:21:39,767:INFO:Model: Extreme Gradient Boosting
2021-04-03 03:21:39,815:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-03 03:21:40,079:INFO:Creating MLFlow logs
2021-04-03 03:21:40,094:INFO:Model: Random Forest Regressor
2021-04-03 03:21:40,135:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 03:21:40,403:INFO:Creating MLFlow logs
2021-04-03 03:21:40,417:INFO:Model: Decision Tree Regressor
2021-04-03 03:21:40,470:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-03 03:21:40,831:INFO:Creating MLFlow logs
2021-04-03 03:21:40,842:INFO:Model: Extra Trees Regressor
2021-04-03 03:21:40,878:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 03:21:41,152:INFO:Creating MLFlow logs
2021-04-03 03:21:41,166:INFO:Model: Light Gradient Boosting Machine
2021-04-03 03:21:41,239:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-03 03:21:41,513:INFO:Creating MLFlow logs
2021-04-03 03:21:41,528:INFO:Model: AdaBoost Regressor
2021-04-03 03:21:41,579:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-03 03:21:41,893:INFO:Creating MLFlow logs
2021-04-03 03:21:41,906:INFO:Model: Huber Regressor
2021-04-03 03:21:41,966:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 03:21:42,229:INFO:Creating MLFlow logs
2021-04-03 03:21:42,243:INFO:Model: K Neighbors Regressor
2021-04-03 03:21:42,285:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-03 03:21:42,574:INFO:Creating MLFlow logs
2021-04-03 03:21:42,587:INFO:Model: Ridge Regression
2021-04-03 03:21:42,650:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 03:21:42,989:INFO:Creating MLFlow logs
2021-04-03 03:21:43,000:INFO:Model: Linear Regression
2021-04-03 03:21:43,051:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 03:21:43,284:INFO:Creating MLFlow logs
2021-04-03 03:21:43,298:INFO:Model: Bayesian Ridge
2021-04-03 03:21:43,363:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 03:21:43,715:INFO:Creating MLFlow logs
2021-04-03 03:21:43,734:INFO:Model: Orthogonal Matching Pursuit
2021-04-03 03:21:43,779:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-03 03:21:44,037:INFO:Creating MLFlow logs
2021-04-03 03:21:44,050:INFO:Model: Lasso Regression
2021-04-03 03:21:44,100:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 03:21:44,349:INFO:Creating MLFlow logs
2021-04-03 03:21:44,365:INFO:Model: Elastic Net
2021-04-03 03:21:44,411:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 03:21:44,691:INFO:Creating MLFlow logs
2021-04-03 03:21:44,704:INFO:Model: Least Angle Regression
2021-04-03 03:21:44,749:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-03 03:21:45,014:INFO:Creating MLFlow logs
2021-04-03 03:21:45,026:INFO:Model: Passive Aggressive Regressor
2021-04-03 03:21:45,068:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:21:45,406:INFO:create_model_container: 17
2021-04-03 03:21:45,407:INFO:master_model_container: 17
2021-04-03 03:21:45,407:INFO:display_container: 2
2021-04-03 03:21:45,411:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:21:45,411:INFO:compare_models() succesfully completed......................................
2021-04-03 03:21:45,428:INFO:Initializing create_model()
2021-04-03 03:21:45,428:INFO:create_model(estimator=gbr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-03 03:21:45,428:INFO:Checking exceptions
2021-04-03 03:21:45,429:INFO:Preparing display monitor
2021-04-03 03:21:45,468:INFO:Importing libraries
2021-04-03 03:21:45,469:INFO:Copying training dataset
2021-04-03 03:21:45,471:INFO:Defining folds
2021-04-03 03:21:45,471:INFO:Declaring metric variables
2021-04-03 03:21:45,491:INFO:Importing untrained model
2021-04-03 03:21:45,511:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 03:21:45,553:INFO:Starting cross validation
2021-04-03 03:21:45,558:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:46,136:INFO:Calculating mean and std
2021-04-03 03:21:46,138:INFO:Creating metrics dataframe
2021-04-03 03:21:46,157:INFO:Finalizing model
2021-04-03 03:21:46,240:INFO:Creating MLFlow logs
2021-04-03 03:21:46,253:INFO:Model: Gradient Boosting Regressor
2021-04-03 03:21:46,298:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:21:46,453:INFO:Initializing predict_model()
2021-04-03 03:21:46,453:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:21:46,453:INFO:Checking exceptions
2021-04-03 03:21:46,453:INFO:Preloading libraries
2021-04-03 03:21:46,736:INFO:Uploading results into container
2021-04-03 03:21:46,736:INFO:Uploading model into container now
2021-04-03 03:21:46,752:INFO:create_model_container: 18
2021-04-03 03:21:46,752:INFO:master_model_container: 18
2021-04-03 03:21:46,753:INFO:display_container: 3
2021-04-03 03:21:46,757:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:21:46,757:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:46,907:INFO:Initializing tune_model()
2021-04-03 03:21:46,907:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-03 03:21:46,907:INFO:Checking exceptions
2021-04-03 03:21:46,907:INFO:Preparing display monitor
2021-04-03 03:21:46,934:INFO:Copying training dataset
2021-04-03 03:21:46,936:INFO:Checking base model
2021-04-03 03:21:46,936:INFO:Base model : Gradient Boosting Regressor
2021-04-03 03:21:46,952:INFO:Declaring metric variables
2021-04-03 03:21:46,975:INFO:Defining Hyperparameters
2021-04-03 03:21:47,109:INFO:Tuning with n_jobs=-1
2021-04-03 03:21:47,109:INFO:Initializing RandomizedSearchCV
2021-04-03 03:21:49,840:INFO:best_params: {'actual_estimator__subsample': 0.85, 'actual_estimator__n_estimators': 50, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 1, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 5, 'actual_estimator__learning_rate': 0.1}
2021-04-03 03:21:49,842:INFO:Hyperparameter search completed
2021-04-03 03:21:49,842:INFO:SubProcess create_model() called ==================================
2021-04-03 03:21:49,848:INFO:Initializing create_model()
2021-04-03 03:21:49,848:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBEC80A0>, kwargs={'subsample': 0.85, 'n_estimators': 50, 'min_samples_split': 7, 'min_samples_leaf': 1, 'min_impurity_decrease': 0.05, 'max_features': 'log2', 'max_depth': 5, 'learning_rate': 0.1})
2021-04-03 03:21:49,848:INFO:Checking exceptions
2021-04-03 03:21:49,848:INFO:Importing libraries
2021-04-03 03:21:49,848:INFO:Copying training dataset
2021-04-03 03:21:49,850:INFO:Defining folds
2021-04-03 03:21:49,850:INFO:Declaring metric variables
2021-04-03 03:21:49,878:INFO:Importing untrained model
2021-04-03 03:21:49,878:INFO:Declaring custom model
2021-04-03 03:21:49,907:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 03:21:49,947:INFO:Starting cross validation
2021-04-03 03:21:49,951:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:50,193:INFO:Calculating mean and std
2021-04-03 03:21:50,195:INFO:Creating metrics dataframe
2021-04-03 03:21:50,217:INFO:Finalizing model
2021-04-03 03:21:50,271:INFO:Uploading results into container
2021-04-03 03:21:50,271:INFO:Uploading model into container now
2021-04-03 03:21:50,271:INFO:create_model_container: 19
2021-04-03 03:21:50,272:INFO:master_model_container: 19
2021-04-03 03:21:50,272:INFO:display_container: 4
2021-04-03 03:21:50,276:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:21:50,277:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:50,412:INFO:SubProcess create_model() end ==================================
2021-04-03 03:21:50,414:INFO:Creating MLFlow logs
2021-04-03 03:21:50,433:INFO:Model: Gradient Boosting Regressor
2021-04-03 03:21:50,479:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 5, 'max_features': 'log2', 'max_leaf_nodes': None, 'min_impurity_decrease': 0.05, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 7, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 50, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 0.85, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:21:50,627:INFO:Initializing predict_model()
2021-04-03 03:21:50,627:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:21:50,627:INFO:Checking exceptions
2021-04-03 03:21:50,628:INFO:Preloading libraries
2021-04-03 03:21:50,972:INFO:create_model_container: 19
2021-04-03 03:21:50,972:INFO:master_model_container: 19
2021-04-03 03:21:50,972:INFO:display_container: 4
2021-04-03 03:21:50,974:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:21:50,974:INFO:tune_model() succesfully completed......................................
2021-04-03 03:21:51,107:INFO:Initializing plot_model()
2021-04-03 03:21:51,107:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:21:51,108:INFO:Checking exceptions
2021-04-03 03:21:51,108:INFO:Preparing display monitor
2021-04-03 03:21:51,119:INFO:Preloading libraries
2021-04-03 03:21:51,133:INFO:Copying training dataset
2021-04-03 03:21:51,133:INFO:Copying test dataset
2021-04-03 03:21:51,135:INFO:Plot type: residuals
2021-04-03 03:21:51,188:INFO:Fitting Model
2021-04-03 03:21:51,227:INFO:Scoring test/hold-out set
2021-04-03 03:21:51,937:INFO:Visual Rendered Successfully
2021-04-03 03:21:52,030:INFO:plot_model() succesfully completed......................................
2021-04-03 03:21:52,042:INFO:Initializing plot_model()
2021-04-03 03:21:52,042:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:21:52,042:INFO:Checking exceptions
2021-04-03 03:21:52,042:INFO:Preparing display monitor
2021-04-03 03:21:52,050:INFO:Preloading libraries
2021-04-03 03:21:52,062:INFO:Copying training dataset
2021-04-03 03:21:52,062:INFO:Copying test dataset
2021-04-03 03:21:52,064:INFO:Plot type: error
2021-04-03 03:21:52,067:INFO:Fitting Model
2021-04-03 03:21:52,068:INFO:Scoring test/hold-out set
2021-04-03 03:21:52,407:INFO:Visual Rendered Successfully
2021-04-03 03:21:52,518:INFO:plot_model() succesfully completed......................................
2021-04-03 03:21:52,532:INFO:Initializing plot_model()
2021-04-03 03:21:52,532:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:21:52,532:INFO:Checking exceptions
2021-04-03 03:21:52,533:INFO:Preparing display monitor
2021-04-03 03:21:52,544:INFO:Preloading libraries
2021-04-03 03:21:52,559:INFO:Copying training dataset
2021-04-03 03:21:52,560:INFO:Copying test dataset
2021-04-03 03:21:52,562:INFO:Plot type: feature
2021-04-03 03:21:52,566:WARNING:No coef_ found. Trying feature_importances_
2021-04-03 03:21:52,798:INFO:Visual Rendered Successfully
2021-04-03 03:21:52,888:INFO:plot_model() succesfully completed......................................
2021-04-03 03:21:52,921:INFO:Initializing evaluate_model()
2021-04-03 03:21:52,921:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-03 03:21:52,947:INFO:Initializing plot_model()
2021-04-03 03:21:52,947:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:21:52,947:INFO:Checking exceptions
2021-04-03 03:21:52,947:INFO:Preparing display monitor
2021-04-03 03:21:52,956:INFO:Preloading libraries
2021-04-03 03:21:52,968:INFO:Copying training dataset
2021-04-03 03:21:52,968:INFO:Copying test dataset
2021-04-03 03:21:52,969:INFO:Plot type: parameter
2021-04-03 03:21:52,979:INFO:Visual Rendered Successfully
2021-04-03 03:21:53,077:INFO:plot_model() succesfully completed......................................
2021-04-03 03:21:53,088:INFO:Initializing automl()
2021-04-03 03:21:53,089:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-03 03:21:53,089:INFO:Model Selection Basis : CV Results on Training set
2021-04-03 03:21:53,096:INFO:Initializing create_model()
2021-04-03 03:21:53,096:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:21:53,097:INFO:Checking exceptions
2021-04-03 03:21:53,097:INFO:Importing libraries
2021-04-03 03:21:53,097:INFO:Copying training dataset
2021-04-03 03:21:53,097:INFO:Defining folds
2021-04-03 03:21:53,097:INFO:Declaring metric variables
2021-04-03 03:21:53,098:INFO:Importing untrained model
2021-04-03 03:21:53,098:INFO:Declaring custom model
2021-04-03 03:21:53,101:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 03:21:53,102:INFO:Cross validation set to False
2021-04-03 03:21:53,102:INFO:Fitting Model
2021-04-03 03:21:53,181:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:21:53,181:INFO:create_models() succesfully completed......................................
2021-04-03 03:21:53,275:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:21:53,275:INFO:automl() succesfully completed......................................
2021-04-03 03:21:53,299:INFO:Initializing predict_model()
2021-04-03 03:21:53,300:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:21:53,300:INFO:Checking exceptions
2021-04-03 03:21:53,300:INFO:Preloading libraries
2021-04-03 03:21:53,301:INFO:Preparing display monitor
2021-04-03 03:21:53,511:INFO:Initializing finalize_model()
2021-04-03 03:21:53,512:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-03 03:21:53,514:INFO:Finalizing PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:21:53,519:INFO:Initializing create_model()
2021-04-03 03:21:53,525:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:21:53,525:INFO:Checking exceptions
2021-04-03 03:21:53,525:INFO:Importing libraries
2021-04-03 03:21:53,525:INFO:Copying training dataset
2021-04-03 03:21:53,526:INFO:Defining folds
2021-04-03 03:21:53,526:INFO:Declaring metric variables
2021-04-03 03:21:53,526:INFO:Importing untrained model
2021-04-03 03:21:53,526:INFO:Declaring custom model
2021-04-03 03:21:53,531:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 03:21:53,532:INFO:Starting cross validation
2021-04-03 03:21:53,533:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:21:54,019:INFO:Calculating mean and std
2021-04-03 03:21:54,020:INFO:Creating metrics dataframe
2021-04-03 03:21:54,027:INFO:Finalizing model
2021-04-03 03:21:54,107:INFO:Uploading results into container
2021-04-03 03:21:54,107:INFO:Uploading model into container now
2021-04-03 03:21:54,107:INFO:create_model_container: 20
2021-04-03 03:21:54,107:INFO:master_model_container: 20
2021-04-03 03:21:54,107:INFO:display_container: 6
2021-04-03 03:21:54,109:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:21:54,109:INFO:create_model() succesfully completed......................................
2021-04-03 03:21:54,202:INFO:Creating MLFlow logs
2021-04-03 03:21:54,205:INFO:Model: Gradient Boosting Regressor
2021-04-03 03:21:54,236:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:21:54,367:INFO:Initializing predict_model()
2021-04-03 03:21:54,367:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:21:54,367:INFO:Checking exceptions
2021-04-03 03:21:54,367:INFO:Preloading libraries
2021-04-03 03:21:54,665:INFO:create_model_container: 20
2021-04-03 03:21:54,665:INFO:master_model_container: 20
2021-04-03 03:21:54,665:INFO:display_container: 5
2021-04-03 03:21:54,667:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:21:54,667:INFO:finalize_model() succesfully completed......................................
2021-04-03 03:21:54,826:INFO:Initializing predict_model()
2021-04-03 03:21:54,826:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:21:54,827:INFO:Checking exceptions
2021-04-03 03:21:54,827:INFO:Preloading libraries
2021-04-03 03:21:54,827:INFO:Preparing display monitor
2021-04-03 03:21:54,982:INFO:Initializing predict_model()
2021-04-03 03:21:54,983:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:21:54,983:INFO:Checking exceptions
2021-04-03 03:21:54,983:INFO:Preloading libraries
2021-04-03 03:21:54,984:INFO:Preparing display monitor
2021-04-03 03:21:55,239:INFO:Initializing save_model()
2021-04-03 03:21:55,239:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), model_name=saved_models/best_model_to_predict_median_income_gbr, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2021-04-03 03:21:55,239:INFO:Adding model into prep_pipe
2021-04-03 03:21:55,298:INFO:saved_models/best_model_to_predict_median_income_gbr.pkl saved in current working directory
2021-04-03 03:21:55,312:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                                                                                     min_impurity_decrease=0.0,
                                                                                     min_impurity_split=None,
                                                                                     min_samples_leaf=1,
                                                                                     min_samples_split=2,
                                                                                     min_weight_fraction_leaf=0.0,
                                                                                     n_estimators=100,
                                                                                     n_iter_no_change=None,
                                                                                     presort='deprecated',
                                                                                     random_state=786,
                                                                                     subsample=1.0,
                                                                                     tol=0.0001,
                                                                                     validation_fraction=0.1,
                                                                                     verbose=0,
                                                                                     warm_start=False),
                                                 subsample=1.0, tol=0.0001,
                                                 validation_fraction=0.1,
                                                 verbose=0,
                                                 warm_start=False)]],
         verbose=False)
2021-04-03 03:21:55,313:INFO:save_model() succesfully completed......................................
2021-04-03 03:21:55,530:INFO:PyCaret Supervised Module
2021-04-03 03:21:55,531:INFO:ML Usecase: regression
2021-04-03 03:21:55,531:INFO:version 2.3.0
2021-04-03 03:21:55,531:INFO:Initializing setup()
2021-04-03 03:21:55,532:INFO:setup(target=highschool_graduation_rate, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 03:21:55,532:INFO:Checking environment
2021-04-03 03:21:55,533:INFO:python_version: 3.9.1
2021-04-03 03:21:55,533:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 03:21:55,533:INFO:machine: AMD64
2021-04-03 03:21:55,533:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 03:21:55,535:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 03:21:55,535:INFO:Checking libraries
2021-04-03 03:21:55,535:INFO:pd==1.2.2
2021-04-03 03:21:55,535:INFO:numpy==1.19.5
2021-04-03 03:21:55,535:INFO:sklearn==0.23.2
2021-04-03 03:21:55,535:INFO:lightgbm==3.1.1
2021-04-03 03:21:55,536:WARNING:catboost not found
2021-04-03 03:21:55,537:INFO:xgboost==1.3.3
2021-04-03 03:21:55,537:INFO:mlflow==1.14.1
2021-04-03 03:21:55,537:INFO:Checking Exceptions
2021-04-03 03:21:55,537:INFO:Declaring global variables
2021-04-03 03:21:55,537:INFO:USI: 2dd4
2021-04-03 03:21:55,537:INFO:pycaret_globals: {'fold_shuffle_param', 'transform_target_method_param', 'gpu_param', 'master_model_container', 'transform_target_param', '_all_metrics', '_ml_usecase', 'exp_name_log', 'fix_imbalance_param', 'fold_param', 'imputation_classifier', '_all_models', 'X', '_all_models_internal', 'stratify_param', 'imputation_regressor', 'fix_imbalance_method_param', 'display_container', 'X_train', 'fold_generator', 'X_test', 'fold_groups_param', 'pycaret_globals', 'seed', '_available_plots', 'logging_param', 'experiment__', 'y_train', 'n_jobs_param', 'USI', 'y_test', 'y', 'html_param', 'log_plots_param', 'data_before_preprocess', 'create_model_container', 'iterative_imputation_iters_param', '_gpu_n_jobs_param', '_internal_pipeline', 'target_param', 'prep_pipe'}
2021-04-03 03:21:55,538:INFO:Preparing display monitor
2021-04-03 03:21:55,538:INFO:Preparing display monitor
2021-04-03 03:21:55,560:INFO:Importing libraries
2021-04-03 03:21:55,560:INFO:Copying data for preprocessing
2021-04-03 03:21:55,573:INFO:Declaring preprocessing parameters
2021-04-03 03:21:55,575:INFO:Creating preprocessing pipeline
2021-04-03 03:21:55,581:INFO:Preprocessing pipeline created successfully
2021-04-03 03:21:55,581:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 03:21:55,581:INFO:Creating global containers
2021-04-03 03:21:55,582:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 03:25:29,544:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 03:25:29,674:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 03:25:29,675:INFO:Creating grid variables
2021-04-03 03:25:29,695:INFO:Logging experiment in MLFlow
2021-04-03 03:25:29,698:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-03 03:25:29,698:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-03 03:25:29,837:INFO:SubProcess save_model() called ==================================
2021-04-03 03:25:29,848:INFO:Initializing save_model()
2021-04-03 03:25:29,848:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 03:25:29,848:INFO:Adding model into prep_pipe
2021-04-03 03:25:29,850:WARNING:Only Model saved as it was a pipeline.
2021-04-03 03:25:29,867:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 03:25:29,873:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 03:25:29,873:INFO:save_model() succesfully completed......................................
2021-04-03 03:25:29,965:INFO:SubProcess save_model() end ==================================
2021-04-03 03:25:30,048:INFO:create_model_container: 0
2021-04-03 03:25:30,048:INFO:master_model_container: 0
2021-04-03 03:25:30,048:INFO:display_container: 1
2021-04-03 03:25:30,055:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 03:25:30,056:INFO:setup() succesfully completed......................................
2021-04-03 03:25:30,156:INFO:Initializing compare_models()
2021-04-03 03:25:30,157:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-03 03:25:30,157:INFO:Checking exceptions
2021-04-03 03:25:30,157:INFO:Preparing display monitor
2021-04-03 03:25:30,158:INFO:Preparing display monitor
2021-04-03 03:25:30,202:INFO:Initializing Linear Regression
2021-04-03 03:25:30,202:INFO:Total runtime is 1.663366953531901e-05 minutes
2021-04-03 03:25:30,220:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:30,221:INFO:Initializing create_model()
2021-04-03 03:25:30,222:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:30,222:INFO:Checking exceptions
2021-04-03 03:25:30,222:INFO:Importing libraries
2021-04-03 03:25:30,223:INFO:Copying training dataset
2021-04-03 03:25:30,224:INFO:Defining folds
2021-04-03 03:25:30,224:INFO:Declaring metric variables
2021-04-03 03:25:30,236:INFO:Importing untrained model
2021-04-03 03:25:30,253:INFO:Linear Regression Imported succesfully
2021-04-03 03:25:30,287:INFO:Starting cross validation
2021-04-03 03:25:30,288:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:30,578:INFO:Calculating mean and std
2021-04-03 03:25:30,580:INFO:Creating metrics dataframe
2021-04-03 03:25:30,592:INFO:Uploading results into container
2021-04-03 03:25:30,592:INFO:Uploading model into container now
2021-04-03 03:25:30,593:INFO:create_model_container: 1
2021-04-03 03:25:30,593:INFO:master_model_container: 1
2021-04-03 03:25:30,593:INFO:display_container: 2
2021-04-03 03:25:30,595:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 03:25:30,595:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:30,756:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:30,756:INFO:Creating metrics dataframe
2021-04-03 03:25:30,792:INFO:Initializing Lasso Regression
2021-04-03 03:25:30,793:INFO:Total runtime is 0.009854737917582195 minutes
2021-04-03 03:25:30,810:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:30,811:INFO:Initializing create_model()
2021-04-03 03:25:30,811:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:30,811:INFO:Checking exceptions
2021-04-03 03:25:30,812:INFO:Importing libraries
2021-04-03 03:25:30,812:INFO:Copying training dataset
2021-04-03 03:25:30,816:INFO:Defining folds
2021-04-03 03:25:30,816:INFO:Declaring metric variables
2021-04-03 03:25:30,835:INFO:Importing untrained model
2021-04-03 03:25:30,861:INFO:Lasso Regression Imported succesfully
2021-04-03 03:25:30,897:INFO:Starting cross validation
2021-04-03 03:25:30,899:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:31,007:INFO:Calculating mean and std
2021-04-03 03:25:31,009:INFO:Creating metrics dataframe
2021-04-03 03:25:31,018:INFO:Uploading results into container
2021-04-03 03:25:31,018:INFO:Uploading model into container now
2021-04-03 03:25:31,018:INFO:create_model_container: 2
2021-04-03 03:25:31,019:INFO:master_model_container: 2
2021-04-03 03:25:31,019:INFO:display_container: 2
2021-04-03 03:25:31,021:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 03:25:31,021:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:31,156:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:31,156:INFO:Creating metrics dataframe
2021-04-03 03:25:31,225:INFO:Initializing Ridge Regression
2021-04-03 03:25:31,225:INFO:Total runtime is 0.01705362399419149 minutes
2021-04-03 03:25:31,243:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:31,244:INFO:Initializing create_model()
2021-04-03 03:25:31,244:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:31,245:INFO:Checking exceptions
2021-04-03 03:25:31,245:INFO:Importing libraries
2021-04-03 03:25:31,245:INFO:Copying training dataset
2021-04-03 03:25:31,247:INFO:Defining folds
2021-04-03 03:25:31,249:INFO:Declaring metric variables
2021-04-03 03:25:31,268:INFO:Importing untrained model
2021-04-03 03:25:31,287:INFO:Ridge Regression Imported succesfully
2021-04-03 03:25:31,315:INFO:Starting cross validation
2021-04-03 03:25:31,316:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:31,408:INFO:Calculating mean and std
2021-04-03 03:25:31,409:INFO:Creating metrics dataframe
2021-04-03 03:25:31,414:INFO:Uploading results into container
2021-04-03 03:25:31,415:INFO:Uploading model into container now
2021-04-03 03:25:31,415:INFO:create_model_container: 3
2021-04-03 03:25:31,416:INFO:master_model_container: 3
2021-04-03 03:25:31,416:INFO:display_container: 2
2021-04-03 03:25:31,417:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:25:31,418:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:31,536:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:31,536:INFO:Creating metrics dataframe
2021-04-03 03:25:31,562:INFO:Initializing Elastic Net
2021-04-03 03:25:31,562:INFO:Total runtime is 0.022669474283854168 minutes
2021-04-03 03:25:31,575:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:31,575:INFO:Initializing create_model()
2021-04-03 03:25:31,575:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:31,576:INFO:Checking exceptions
2021-04-03 03:25:31,576:INFO:Importing libraries
2021-04-03 03:25:31,576:INFO:Copying training dataset
2021-04-03 03:25:31,577:INFO:Defining folds
2021-04-03 03:25:31,577:INFO:Declaring metric variables
2021-04-03 03:25:31,594:INFO:Importing untrained model
2021-04-03 03:25:31,617:INFO:Elastic Net Imported succesfully
2021-04-03 03:25:31,644:INFO:Starting cross validation
2021-04-03 03:25:31,645:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:31,946:INFO:Calculating mean and std
2021-04-03 03:25:31,948:INFO:Creating metrics dataframe
2021-04-03 03:25:31,959:INFO:Uploading results into container
2021-04-03 03:25:31,959:INFO:Uploading model into container now
2021-04-03 03:25:31,959:INFO:create_model_container: 4
2021-04-03 03:25:31,960:INFO:master_model_container: 4
2021-04-03 03:25:31,960:INFO:display_container: 2
2021-04-03 03:25:31,962:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 03:25:31,962:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:32,110:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:32,111:INFO:Creating metrics dataframe
2021-04-03 03:25:32,140:INFO:Initializing Least Angle Regression
2021-04-03 03:25:32,140:INFO:Total runtime is 0.032314614454905195 minutes
2021-04-03 03:25:32,161:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:32,161:INFO:Initializing create_model()
2021-04-03 03:25:32,162:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:32,162:INFO:Checking exceptions
2021-04-03 03:25:32,162:INFO:Importing libraries
2021-04-03 03:25:32,163:INFO:Copying training dataset
2021-04-03 03:25:32,164:INFO:Defining folds
2021-04-03 03:25:32,165:INFO:Declaring metric variables
2021-04-03 03:25:32,176:INFO:Importing untrained model
2021-04-03 03:25:32,198:INFO:Least Angle Regression Imported succesfully
2021-04-03 03:25:32,223:INFO:Starting cross validation
2021-04-03 03:25:32,224:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:34,610:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-03 03:25:34,611:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 03:25:34,611:INFO:Initializing create_model()
2021-04-03 03:25:34,611:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:34,611:INFO:Checking exceptions
2021-04-03 03:25:34,611:INFO:Importing libraries
2021-04-03 03:25:34,611:INFO:Copying training dataset
2021-04-03 03:25:34,612:INFO:Defining folds
2021-04-03 03:25:34,612:INFO:Declaring metric variables
2021-04-03 03:25:34,623:INFO:Importing untrained model
2021-04-03 03:25:34,636:INFO:Least Angle Regression Imported succesfully
2021-04-03 03:25:34,666:INFO:Starting cross validation
2021-04-03 03:25:34,667:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:41,390:ERROR:create_model() for lar raised an exception:
2021-04-03 03:25:41,392:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 03:25:41,393:INFO:Initializing Lasso Least Angle Regression
2021-04-03 03:25:41,393:INFO:Total runtime is 0.18651911815007527 minutes
2021-04-03 03:25:41,406:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:41,407:INFO:Initializing create_model()
2021-04-03 03:25:41,407:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:41,408:INFO:Checking exceptions
2021-04-03 03:25:41,408:INFO:Importing libraries
2021-04-03 03:25:41,408:INFO:Copying training dataset
2021-04-03 03:25:41,410:INFO:Defining folds
2021-04-03 03:25:41,411:INFO:Declaring metric variables
2021-04-03 03:25:41,428:INFO:Importing untrained model
2021-04-03 03:25:41,442:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-03 03:25:41,480:INFO:Starting cross validation
2021-04-03 03:25:41,482:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:47,265:INFO:Calculating mean and std
2021-04-03 03:25:47,267:INFO:Creating metrics dataframe
2021-04-03 03:25:47,276:INFO:Uploading results into container
2021-04-03 03:25:47,276:INFO:Uploading model into container now
2021-04-03 03:25:47,277:INFO:create_model_container: 5
2021-04-03 03:25:47,277:INFO:master_model_container: 5
2021-04-03 03:25:47,277:INFO:display_container: 2
2021-04-03 03:25:47,279:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-03 03:25:47,280:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:47,402:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:47,402:INFO:Creating metrics dataframe
2021-04-03 03:25:47,423:INFO:Initializing Orthogonal Matching Pursuit
2021-04-03 03:25:47,423:INFO:Total runtime is 0.28702211380004883 minutes
2021-04-03 03:25:47,435:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:47,436:INFO:Initializing create_model()
2021-04-03 03:25:47,437:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:47,437:INFO:Checking exceptions
2021-04-03 03:25:47,437:INFO:Importing libraries
2021-04-03 03:25:47,437:INFO:Copying training dataset
2021-04-03 03:25:47,439:INFO:Defining folds
2021-04-03 03:25:47,439:INFO:Declaring metric variables
2021-04-03 03:25:47,451:INFO:Importing untrained model
2021-04-03 03:25:47,466:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-03 03:25:47,501:INFO:Starting cross validation
2021-04-03 03:25:47,502:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:47,604:INFO:Calculating mean and std
2021-04-03 03:25:47,605:INFO:Creating metrics dataframe
2021-04-03 03:25:47,612:INFO:Uploading results into container
2021-04-03 03:25:47,613:INFO:Uploading model into container now
2021-04-03 03:25:47,613:INFO:create_model_container: 6
2021-04-03 03:25:47,613:INFO:master_model_container: 6
2021-04-03 03:25:47,613:INFO:display_container: 2
2021-04-03 03:25:47,615:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-03 03:25:47,616:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:47,725:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:47,725:INFO:Creating metrics dataframe
2021-04-03 03:25:47,752:INFO:Initializing Bayesian Ridge
2021-04-03 03:25:47,752:INFO:Total runtime is 0.29250789880752565 minutes
2021-04-03 03:25:47,764:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:47,765:INFO:Initializing create_model()
2021-04-03 03:25:47,765:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:47,765:INFO:Checking exceptions
2021-04-03 03:25:47,765:INFO:Importing libraries
2021-04-03 03:25:47,766:INFO:Copying training dataset
2021-04-03 03:25:47,768:INFO:Defining folds
2021-04-03 03:25:47,768:INFO:Declaring metric variables
2021-04-03 03:25:47,778:INFO:Importing untrained model
2021-04-03 03:25:47,793:INFO:Bayesian Ridge Imported succesfully
2021-04-03 03:25:47,823:INFO:Starting cross validation
2021-04-03 03:25:47,825:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:47,922:INFO:Calculating mean and std
2021-04-03 03:25:47,923:INFO:Creating metrics dataframe
2021-04-03 03:25:47,929:INFO:Uploading results into container
2021-04-03 03:25:47,929:INFO:Uploading model into container now
2021-04-03 03:25:47,929:INFO:create_model_container: 7
2021-04-03 03:25:47,930:INFO:master_model_container: 7
2021-04-03 03:25:47,930:INFO:display_container: 2
2021-04-03 03:25:47,931:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:25:47,932:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:48,037:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:48,037:INFO:Creating metrics dataframe
2021-04-03 03:25:48,066:INFO:Initializing Passive Aggressive Regressor
2021-04-03 03:25:48,067:INFO:Total runtime is 0.2977580467859904 minutes
2021-04-03 03:25:48,084:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:48,085:INFO:Initializing create_model()
2021-04-03 03:25:48,086:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:48,086:INFO:Checking exceptions
2021-04-03 03:25:48,086:INFO:Importing libraries
2021-04-03 03:25:48,087:INFO:Copying training dataset
2021-04-03 03:25:48,088:INFO:Defining folds
2021-04-03 03:25:48,089:INFO:Declaring metric variables
2021-04-03 03:25:48,099:INFO:Importing untrained model
2021-04-03 03:25:48,108:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-03 03:25:48,140:INFO:Starting cross validation
2021-04-03 03:25:48,141:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:48,239:INFO:Calculating mean and std
2021-04-03 03:25:48,240:INFO:Creating metrics dataframe
2021-04-03 03:25:48,246:INFO:Uploading results into container
2021-04-03 03:25:48,246:INFO:Uploading model into container now
2021-04-03 03:25:48,246:INFO:create_model_container: 8
2021-04-03 03:25:48,247:INFO:master_model_container: 8
2021-04-03 03:25:48,247:INFO:display_container: 2
2021-04-03 03:25:48,251:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:25:48,252:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:48,394:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:48,394:INFO:Creating metrics dataframe
2021-04-03 03:25:48,421:INFO:Initializing Huber Regressor
2021-04-03 03:25:48,421:INFO:Total runtime is 0.3036651333173116 minutes
2021-04-03 03:25:48,435:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:48,435:INFO:Initializing create_model()
2021-04-03 03:25:48,436:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:48,436:INFO:Checking exceptions
2021-04-03 03:25:48,436:INFO:Importing libraries
2021-04-03 03:25:48,436:INFO:Copying training dataset
2021-04-03 03:25:48,437:INFO:Defining folds
2021-04-03 03:25:48,438:INFO:Declaring metric variables
2021-04-03 03:25:48,455:INFO:Importing untrained model
2021-04-03 03:25:48,465:INFO:Huber Regressor Imported succesfully
2021-04-03 03:25:48,491:INFO:Starting cross validation
2021-04-03 03:25:48,492:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:48,852:INFO:Calculating mean and std
2021-04-03 03:25:48,853:INFO:Creating metrics dataframe
2021-04-03 03:25:48,861:INFO:Uploading results into container
2021-04-03 03:25:48,861:INFO:Uploading model into container now
2021-04-03 03:25:48,861:INFO:create_model_container: 9
2021-04-03 03:25:48,861:INFO:master_model_container: 9
2021-04-03 03:25:48,862:INFO:display_container: 2
2021-04-03 03:25:48,863:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 03:25:48,863:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:48,966:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:48,966:INFO:Creating metrics dataframe
2021-04-03 03:25:48,988:INFO:Initializing K Neighbors Regressor
2021-04-03 03:25:48,988:INFO:Total runtime is 0.31311337153116864 minutes
2021-04-03 03:25:49,000:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:49,000:INFO:Initializing create_model()
2021-04-03 03:25:49,001:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:49,001:INFO:Checking exceptions
2021-04-03 03:25:49,001:INFO:Importing libraries
2021-04-03 03:25:49,001:INFO:Copying training dataset
2021-04-03 03:25:49,002:INFO:Defining folds
2021-04-03 03:25:49,002:INFO:Declaring metric variables
2021-04-03 03:25:49,013:INFO:Importing untrained model
2021-04-03 03:25:49,027:INFO:K Neighbors Regressor Imported succesfully
2021-04-03 03:25:49,053:INFO:Starting cross validation
2021-04-03 03:25:49,056:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:49,180:INFO:Calculating mean and std
2021-04-03 03:25:49,181:INFO:Creating metrics dataframe
2021-04-03 03:25:49,192:INFO:Uploading results into container
2021-04-03 03:25:49,192:INFO:Uploading model into container now
2021-04-03 03:25:49,193:INFO:create_model_container: 10
2021-04-03 03:25:49,193:INFO:master_model_container: 10
2021-04-03 03:25:49,193:INFO:display_container: 2
2021-04-03 03:25:49,195:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-03 03:25:49,195:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:49,361:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:49,361:INFO:Creating metrics dataframe
2021-04-03 03:25:49,395:INFO:Initializing Decision Tree Regressor
2021-04-03 03:25:49,395:INFO:Total runtime is 0.3198989470799764 minutes
2021-04-03 03:25:49,410:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:49,411:INFO:Initializing create_model()
2021-04-03 03:25:49,411:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:49,411:INFO:Checking exceptions
2021-04-03 03:25:49,411:INFO:Importing libraries
2021-04-03 03:25:49,411:INFO:Copying training dataset
2021-04-03 03:25:49,412:INFO:Defining folds
2021-04-03 03:25:49,413:INFO:Declaring metric variables
2021-04-03 03:25:49,429:INFO:Importing untrained model
2021-04-03 03:25:49,440:INFO:Decision Tree Regressor Imported succesfully
2021-04-03 03:25:49,469:INFO:Starting cross validation
2021-04-03 03:25:49,470:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:49,576:INFO:Calculating mean and std
2021-04-03 03:25:49,581:INFO:Creating metrics dataframe
2021-04-03 03:25:49,589:INFO:Uploading results into container
2021-04-03 03:25:49,590:INFO:Uploading model into container now
2021-04-03 03:25:49,590:INFO:create_model_container: 11
2021-04-03 03:25:49,590:INFO:master_model_container: 11
2021-04-03 03:25:49,590:INFO:display_container: 2
2021-04-03 03:25:49,593:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-03 03:25:49,593:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:49,710:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:49,710:INFO:Creating metrics dataframe
2021-04-03 03:25:49,737:INFO:Initializing Random Forest Regressor
2021-04-03 03:25:49,737:INFO:Total runtime is 0.3255882223447164 minutes
2021-04-03 03:25:49,754:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:49,755:INFO:Initializing create_model()
2021-04-03 03:25:49,755:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:49,755:INFO:Checking exceptions
2021-04-03 03:25:49,755:INFO:Importing libraries
2021-04-03 03:25:49,755:INFO:Copying training dataset
2021-04-03 03:25:49,756:INFO:Defining folds
2021-04-03 03:25:49,757:INFO:Declaring metric variables
2021-04-03 03:25:49,767:INFO:Importing untrained model
2021-04-03 03:25:49,777:INFO:Random Forest Regressor Imported succesfully
2021-04-03 03:25:49,806:INFO:Starting cross validation
2021-04-03 03:25:49,806:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:50,932:INFO:Calculating mean and std
2021-04-03 03:25:50,933:INFO:Creating metrics dataframe
2021-04-03 03:25:50,937:INFO:Uploading results into container
2021-04-03 03:25:50,938:INFO:Uploading model into container now
2021-04-03 03:25:50,938:INFO:create_model_container: 12
2021-04-03 03:25:50,938:INFO:master_model_container: 12
2021-04-03 03:25:50,938:INFO:display_container: 2
2021-04-03 03:25:50,940:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 03:25:50,940:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:51,026:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:51,026:INFO:Creating metrics dataframe
2021-04-03 03:25:51,049:INFO:Initializing Extra Trees Regressor
2021-04-03 03:25:51,049:INFO:Total runtime is 0.34746196667353313 minutes
2021-04-03 03:25:51,061:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:51,062:INFO:Initializing create_model()
2021-04-03 03:25:51,062:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:51,062:INFO:Checking exceptions
2021-04-03 03:25:51,062:INFO:Importing libraries
2021-04-03 03:25:51,062:INFO:Copying training dataset
2021-04-03 03:25:51,063:INFO:Defining folds
2021-04-03 03:25:51,064:INFO:Declaring metric variables
2021-04-03 03:25:51,074:INFO:Importing untrained model
2021-04-03 03:25:51,087:INFO:Extra Trees Regressor Imported succesfully
2021-04-03 03:25:51,113:INFO:Starting cross validation
2021-04-03 03:25:51,114:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:52,072:INFO:Calculating mean and std
2021-04-03 03:25:52,074:INFO:Creating metrics dataframe
2021-04-03 03:25:52,083:INFO:Uploading results into container
2021-04-03 03:25:52,084:INFO:Uploading model into container now
2021-04-03 03:25:52,084:INFO:create_model_container: 13
2021-04-03 03:25:52,085:INFO:master_model_container: 13
2021-04-03 03:25:52,085:INFO:display_container: 2
2021-04-03 03:25:52,087:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 03:25:52,088:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:52,201:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:52,201:INFO:Creating metrics dataframe
2021-04-03 03:25:52,225:INFO:Initializing AdaBoost Regressor
2021-04-03 03:25:52,226:INFO:Total runtime is 0.3670806646347046 minutes
2021-04-03 03:25:52,236:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:52,237:INFO:Initializing create_model()
2021-04-03 03:25:52,237:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:52,237:INFO:Checking exceptions
2021-04-03 03:25:52,237:INFO:Importing libraries
2021-04-03 03:25:52,237:INFO:Copying training dataset
2021-04-03 03:25:52,239:INFO:Defining folds
2021-04-03 03:25:52,239:INFO:Declaring metric variables
2021-04-03 03:25:52,256:INFO:Importing untrained model
2021-04-03 03:25:52,271:INFO:AdaBoost Regressor Imported succesfully
2021-04-03 03:25:52,307:INFO:Starting cross validation
2021-04-03 03:25:52,308:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:52,748:INFO:Calculating mean and std
2021-04-03 03:25:52,751:INFO:Creating metrics dataframe
2021-04-03 03:25:52,758:INFO:Uploading results into container
2021-04-03 03:25:52,758:INFO:Uploading model into container now
2021-04-03 03:25:52,759:INFO:create_model_container: 14
2021-04-03 03:25:52,759:INFO:master_model_container: 14
2021-04-03 03:25:52,759:INFO:display_container: 2
2021-04-03 03:25:52,760:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-03 03:25:52,760:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:52,870:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:52,871:INFO:Creating metrics dataframe
2021-04-03 03:25:52,894:INFO:Initializing Gradient Boosting Regressor
2021-04-03 03:25:52,894:INFO:Total runtime is 0.3782015363375346 minutes
2021-04-03 03:25:52,905:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:52,905:INFO:Initializing create_model()
2021-04-03 03:25:52,905:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:52,905:INFO:Checking exceptions
2021-04-03 03:25:52,905:INFO:Importing libraries
2021-04-03 03:25:52,906:INFO:Copying training dataset
2021-04-03 03:25:52,907:INFO:Defining folds
2021-04-03 03:25:52,907:INFO:Declaring metric variables
2021-04-03 03:25:52,918:INFO:Importing untrained model
2021-04-03 03:25:52,930:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 03:25:52,959:INFO:Starting cross validation
2021-04-03 03:25:52,960:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:53,507:INFO:Calculating mean and std
2021-04-03 03:25:53,508:INFO:Creating metrics dataframe
2021-04-03 03:25:53,514:INFO:Uploading results into container
2021-04-03 03:25:53,514:INFO:Uploading model into container now
2021-04-03 03:25:53,514:INFO:create_model_container: 15
2021-04-03 03:25:53,515:INFO:master_model_container: 15
2021-04-03 03:25:53,515:INFO:display_container: 2
2021-04-03 03:25:53,519:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:25:53,520:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:53,658:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:53,658:INFO:Creating metrics dataframe
2021-04-03 03:25:53,691:INFO:Initializing Extreme Gradient Boosting
2021-04-03 03:25:53,692:INFO:Total runtime is 0.39150961240132653 minutes
2021-04-03 03:25:53,704:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:53,704:INFO:Initializing create_model()
2021-04-03 03:25:53,705:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:53,705:INFO:Checking exceptions
2021-04-03 03:25:53,705:INFO:Importing libraries
2021-04-03 03:25:53,705:INFO:Copying training dataset
2021-04-03 03:25:53,706:INFO:Defining folds
2021-04-03 03:25:53,706:INFO:Declaring metric variables
2021-04-03 03:25:53,723:INFO:Importing untrained model
2021-04-03 03:25:53,743:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 03:25:53,776:INFO:Starting cross validation
2021-04-03 03:25:53,777:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:56,163:INFO:Calculating mean and std
2021-04-03 03:25:56,165:INFO:Creating metrics dataframe
2021-04-03 03:25:56,172:INFO:Uploading results into container
2021-04-03 03:25:56,173:INFO:Uploading model into container now
2021-04-03 03:25:56,173:INFO:create_model_container: 16
2021-04-03 03:25:56,174:INFO:master_model_container: 16
2021-04-03 03:25:56,174:INFO:display_container: 2
2021-04-03 03:25:56,178:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 03:25:56,179:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:56,299:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:56,299:INFO:Creating metrics dataframe
2021-04-03 03:25:56,322:INFO:Initializing Light Gradient Boosting Machine
2021-04-03 03:25:56,322:INFO:Total runtime is 0.4353347539901734 minutes
2021-04-03 03:25:56,334:INFO:SubProcess create_model() called ==================================
2021-04-03 03:25:56,335:INFO:Initializing create_model()
2021-04-03 03:25:56,335:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FC244AF0>, kwargs={})
2021-04-03 03:25:56,335:INFO:Checking exceptions
2021-04-03 03:25:56,336:INFO:Importing libraries
2021-04-03 03:25:56,336:INFO:Copying training dataset
2021-04-03 03:25:56,337:INFO:Defining folds
2021-04-03 03:25:56,337:INFO:Declaring metric variables
2021-04-03 03:25:56,351:INFO:Importing untrained model
2021-04-03 03:25:56,369:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-03 03:25:56,405:INFO:Starting cross validation
2021-04-03 03:25:56,406:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:25:57,101:INFO:Calculating mean and std
2021-04-03 03:25:57,102:INFO:Creating metrics dataframe
2021-04-03 03:25:57,111:INFO:Uploading results into container
2021-04-03 03:25:57,111:INFO:Uploading model into container now
2021-04-03 03:25:57,111:INFO:create_model_container: 17
2021-04-03 03:25:57,111:INFO:master_model_container: 17
2021-04-03 03:25:57,112:INFO:display_container: 2
2021-04-03 03:25:57,116:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-03 03:25:57,116:INFO:create_model() succesfully completed......................................
2021-04-03 03:25:57,234:INFO:SubProcess create_model() end ==================================
2021-04-03 03:25:57,234:INFO:Creating metrics dataframe
2021-04-03 03:25:57,293:INFO:Initializing create_model()
2021-04-03 03:25:57,293:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:25:57,293:INFO:Checking exceptions
2021-04-03 03:25:57,293:INFO:Importing libraries
2021-04-03 03:25:57,294:INFO:Copying training dataset
2021-04-03 03:25:57,294:INFO:Defining folds
2021-04-03 03:25:57,294:INFO:Declaring metric variables
2021-04-03 03:25:57,295:INFO:Importing untrained model
2021-04-03 03:25:57,295:INFO:Declaring custom model
2021-04-03 03:25:57,296:INFO:Ridge Regression Imported succesfully
2021-04-03 03:25:57,297:INFO:Cross validation set to False
2021-04-03 03:25:57,297:INFO:Fitting Model
2021-04-03 03:25:57,307:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:25:57,307:INFO:create_models() succesfully completed......................................
2021-04-03 03:25:57,444:INFO:Creating MLFlow logs
2021-04-03 03:25:57,459:INFO:Model: Ridge Regression
2021-04-03 03:25:57,509:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 03:25:57,616:INFO:Initializing predict_model()
2021-04-03 03:25:57,616:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:25:57,616:INFO:Checking exceptions
2021-04-03 03:25:57,617:INFO:Preloading libraries
2021-04-03 03:25:57,878:INFO:Creating MLFlow logs
2021-04-03 03:25:57,893:INFO:Model: Bayesian Ridge
2021-04-03 03:25:57,931:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 03:25:58,205:INFO:Creating MLFlow logs
2021-04-03 03:25:58,217:INFO:Model: Linear Regression
2021-04-03 03:25:58,265:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 03:25:58,524:INFO:Creating MLFlow logs
2021-04-03 03:25:58,539:INFO:Model: Huber Regressor
2021-04-03 03:25:58,579:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 03:25:58,877:INFO:Creating MLFlow logs
2021-04-03 03:25:58,891:INFO:Model: Extra Trees Regressor
2021-04-03 03:25:58,928:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 03:25:59,205:INFO:Creating MLFlow logs
2021-04-03 03:25:59,218:INFO:Model: Random Forest Regressor
2021-04-03 03:25:59,265:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 03:25:59,527:INFO:Creating MLFlow logs
2021-04-03 03:25:59,540:INFO:Model: Gradient Boosting Regressor
2021-04-03 03:25:59,590:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:25:59,865:INFO:Creating MLFlow logs
2021-04-03 03:25:59,875:INFO:Model: Light Gradient Boosting Machine
2021-04-03 03:25:59,922:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-03 03:26:00,221:INFO:Creating MLFlow logs
2021-04-03 03:26:00,236:INFO:Model: AdaBoost Regressor
2021-04-03 03:26:00,289:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-03 03:26:00,534:INFO:Creating MLFlow logs
2021-04-03 03:26:00,545:INFO:Model: Extreme Gradient Boosting
2021-04-03 03:26:00,588:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-03 03:26:00,907:INFO:Creating MLFlow logs
2021-04-03 03:26:00,923:INFO:Model: K Neighbors Regressor
2021-04-03 03:26:00,972:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-03 03:26:01,254:INFO:Creating MLFlow logs
2021-04-03 03:26:01,265:INFO:Model: Decision Tree Regressor
2021-04-03 03:26:01,312:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-03 03:26:01,655:INFO:Creating MLFlow logs
2021-04-03 03:26:01,668:INFO:Model: Orthogonal Matching Pursuit
2021-04-03 03:26:01,721:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-03 03:26:01,974:INFO:Creating MLFlow logs
2021-04-03 03:26:01,990:INFO:Model: Passive Aggressive Regressor
2021-04-03 03:26:02,032:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:26:02,341:INFO:Creating MLFlow logs
2021-04-03 03:26:02,357:INFO:Model: Elastic Net
2021-04-03 03:26:02,409:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 03:26:02,682:INFO:Creating MLFlow logs
2021-04-03 03:26:02,700:INFO:Model: Lasso Regression
2021-04-03 03:26:02,738:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 03:26:03,022:INFO:Creating MLFlow logs
2021-04-03 03:26:03,037:INFO:Model: Least Angle Regression
2021-04-03 03:26:03,088:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-03 03:26:03,420:INFO:create_model_container: 17
2021-04-03 03:26:03,420:INFO:master_model_container: 17
2021-04-03 03:26:03,421:INFO:display_container: 2
2021-04-03 03:26:03,422:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:26:03,423:INFO:compare_models() succesfully completed......................................
2021-04-03 03:26:03,437:INFO:Initializing create_model()
2021-04-03 03:26:03,438:INFO:create_model(estimator=br, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-03 03:26:03,438:INFO:Checking exceptions
2021-04-03 03:26:03,438:INFO:Preparing display monitor
2021-04-03 03:26:03,474:INFO:Importing libraries
2021-04-03 03:26:03,474:INFO:Copying training dataset
2021-04-03 03:26:03,476:INFO:Defining folds
2021-04-03 03:26:03,476:INFO:Declaring metric variables
2021-04-03 03:26:03,492:INFO:Importing untrained model
2021-04-03 03:26:03,508:INFO:Bayesian Ridge Imported succesfully
2021-04-03 03:26:03,540:INFO:Starting cross validation
2021-04-03 03:26:03,541:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:26:03,863:INFO:Calculating mean and std
2021-04-03 03:26:03,866:INFO:Creating metrics dataframe
2021-04-03 03:26:03,892:INFO:Finalizing model
2021-04-03 03:26:03,911:INFO:Creating MLFlow logs
2021-04-03 03:26:03,936:INFO:Model: Bayesian Ridge
2021-04-03 03:26:03,990:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 03:26:04,173:INFO:Initializing predict_model()
2021-04-03 03:26:04,173:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:26:04,174:INFO:Checking exceptions
2021-04-03 03:26:04,174:INFO:Preloading libraries
2021-04-03 03:26:04,542:INFO:Uploading results into container
2021-04-03 03:26:04,542:INFO:Uploading model into container now
2021-04-03 03:26:04,567:INFO:create_model_container: 18
2021-04-03 03:26:04,567:INFO:master_model_container: 18
2021-04-03 03:26:04,568:INFO:display_container: 3
2021-04-03 03:26:04,570:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:26:04,570:INFO:create_model() succesfully completed......................................
2021-04-03 03:26:04,721:INFO:Initializing tune_model()
2021-04-03 03:26:04,722:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-03 03:26:04,722:INFO:Checking exceptions
2021-04-03 03:26:04,722:INFO:Preparing display monitor
2021-04-03 03:26:04,745:INFO:Copying training dataset
2021-04-03 03:26:04,747:INFO:Checking base model
2021-04-03 03:26:04,747:INFO:Base model : Bayesian Ridge
2021-04-03 03:26:04,762:INFO:Declaring metric variables
2021-04-03 03:26:04,776:INFO:Defining Hyperparameters
2021-04-03 03:26:04,895:INFO:Tuning with n_jobs=-1
2021-04-03 03:26:04,895:INFO:Initializing RandomizedSearchCV
2021-04-03 03:26:05,454:INFO:best_params: {'actual_estimator__normalize': False, 'actual_estimator__lambda_2': 0.001, 'actual_estimator__lambda_1': 0.005, 'actual_estimator__fit_intercept': True, 'actual_estimator__compute_score': False, 'actual_estimator__alpha_2': 0.3, 'actual_estimator__alpha_1': 0.15}
2021-04-03 03:26:05,455:INFO:Hyperparameter search completed
2021-04-03 03:26:05,455:INFO:SubProcess create_model() called ==================================
2021-04-03 03:26:05,457:INFO:Initializing create_model()
2021-04-03 03:26:05,457:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBB1D940>, kwargs={'normalize': False, 'lambda_2': 0.001, 'lambda_1': 0.005, 'fit_intercept': True, 'compute_score': False, 'alpha_2': 0.3, 'alpha_1': 0.15})
2021-04-03 03:26:05,457:INFO:Checking exceptions
2021-04-03 03:26:05,457:INFO:Importing libraries
2021-04-03 03:26:05,457:INFO:Copying training dataset
2021-04-03 03:26:05,458:INFO:Defining folds
2021-04-03 03:26:05,458:INFO:Declaring metric variables
2021-04-03 03:26:05,468:INFO:Importing untrained model
2021-04-03 03:26:05,468:INFO:Declaring custom model
2021-04-03 03:26:05,478:INFO:Bayesian Ridge Imported succesfully
2021-04-03 03:26:05,515:INFO:Starting cross validation
2021-04-03 03:26:05,516:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:26:05,623:INFO:Calculating mean and std
2021-04-03 03:26:05,625:INFO:Creating metrics dataframe
2021-04-03 03:26:05,644:INFO:Finalizing model
2021-04-03 03:26:05,653:INFO:Uploading results into container
2021-04-03 03:26:05,654:INFO:Uploading model into container now
2021-04-03 03:26:05,654:INFO:create_model_container: 19
2021-04-03 03:26:05,655:INFO:master_model_container: 19
2021-04-03 03:26:05,655:INFO:display_container: 4
2021-04-03 03:26:05,657:INFO:PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:26:05,658:INFO:create_model() succesfully completed......................................
2021-04-03 03:26:05,776:INFO:SubProcess create_model() end ==================================
2021-04-03 03:26:05,776:INFO:Creating MLFlow logs
2021-04-03 03:26:05,796:INFO:Model: Bayesian Ridge
2021-04-03 03:26:05,834:INFO:logged params: {'alpha_1': 0.15, 'alpha_2': 0.3, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 0.005, 'lambda_2': 0.001, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 03:26:05,985:INFO:Initializing predict_model()
2021-04-03 03:26:05,985:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:26:05,985:INFO:Checking exceptions
2021-04-03 03:26:05,985:INFO:Preloading libraries
2021-04-03 03:26:06,313:INFO:create_model_container: 19
2021-04-03 03:26:06,313:INFO:master_model_container: 19
2021-04-03 03:26:06,314:INFO:display_container: 4
2021-04-03 03:26:06,316:INFO:PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:26:06,317:INFO:tune_model() succesfully completed......................................
2021-04-03 03:26:06,445:INFO:Initializing plot_model()
2021-04-03 03:26:06,446:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:26:06,446:INFO:Checking exceptions
2021-04-03 03:26:06,446:INFO:Preparing display monitor
2021-04-03 03:26:06,459:INFO:Preloading libraries
2021-04-03 03:26:06,461:INFO:Copying training dataset
2021-04-03 03:26:06,461:INFO:Copying test dataset
2021-04-03 03:26:06,462:INFO:Plot type: residuals
2021-04-03 03:26:06,501:INFO:Fitting Model
2021-04-03 03:26:06,535:INFO:Scoring test/hold-out set
2021-04-03 03:26:07,156:INFO:Visual Rendered Successfully
2021-04-03 03:26:07,272:INFO:plot_model() succesfully completed......................................
2021-04-03 03:26:07,291:INFO:Initializing plot_model()
2021-04-03 03:26:07,291:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:26:07,292:INFO:Checking exceptions
2021-04-03 03:26:07,292:INFO:Preparing display monitor
2021-04-03 03:26:07,304:INFO:Preloading libraries
2021-04-03 03:26:07,307:INFO:Copying training dataset
2021-04-03 03:26:07,308:INFO:Copying test dataset
2021-04-03 03:26:07,309:INFO:Plot type: error
2021-04-03 03:26:07,312:INFO:Fitting Model
2021-04-03 03:26:07,313:INFO:Scoring test/hold-out set
2021-04-03 03:26:07,671:INFO:Visual Rendered Successfully
2021-04-03 03:26:07,791:INFO:plot_model() succesfully completed......................................
2021-04-03 03:26:07,805:INFO:Initializing plot_model()
2021-04-03 03:26:07,805:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:26:07,805:INFO:Checking exceptions
2021-04-03 03:26:07,805:INFO:Preparing display monitor
2021-04-03 03:26:07,812:INFO:Preloading libraries
2021-04-03 03:26:07,814:INFO:Copying training dataset
2021-04-03 03:26:07,816:INFO:Copying test dataset
2021-04-03 03:26:07,817:INFO:Plot type: feature
2021-04-03 03:26:08,071:INFO:Visual Rendered Successfully
2021-04-03 03:26:08,171:INFO:plot_model() succesfully completed......................................
2021-04-03 03:26:08,219:INFO:Initializing evaluate_model()
2021-04-03 03:26:08,219:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-03 03:26:08,263:INFO:Initializing plot_model()
2021-04-03 03:26:08,264:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:26:08,264:INFO:Checking exceptions
2021-04-03 03:26:08,264:INFO:Preparing display monitor
2021-04-03 03:26:08,277:INFO:Preloading libraries
2021-04-03 03:26:08,280:INFO:Copying training dataset
2021-04-03 03:26:08,281:INFO:Copying test dataset
2021-04-03 03:26:08,282:INFO:Plot type: parameter
2021-04-03 03:26:08,302:INFO:Visual Rendered Successfully
2021-04-03 03:26:08,427:INFO:plot_model() succesfully completed......................................
2021-04-03 03:26:08,441:INFO:Initializing automl()
2021-04-03 03:26:08,442:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-03 03:26:08,442:INFO:Model Selection Basis : CV Results on Training set
2021-04-03 03:26:08,449:INFO:Initializing create_model()
2021-04-03 03:26:08,449:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:26:08,452:INFO:Checking exceptions
2021-04-03 03:26:08,452:INFO:Importing libraries
2021-04-03 03:26:08,452:INFO:Copying training dataset
2021-04-03 03:26:08,453:INFO:Defining folds
2021-04-03 03:26:08,453:INFO:Declaring metric variables
2021-04-03 03:26:08,453:INFO:Importing untrained model
2021-04-03 03:26:08,453:INFO:Declaring custom model
2021-04-03 03:26:08,455:INFO:Ridge Regression Imported succesfully
2021-04-03 03:26:08,456:INFO:Cross validation set to False
2021-04-03 03:26:08,456:INFO:Fitting Model
2021-04-03 03:26:08,467:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:26:08,468:INFO:create_models() succesfully completed......................................
2021-04-03 03:26:08,574:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:26:08,574:INFO:automl() succesfully completed......................................
2021-04-03 03:26:08,586:INFO:Initializing predict_model()
2021-04-03 03:26:08,587:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:26:08,587:INFO:Checking exceptions
2021-04-03 03:26:08,587:INFO:Preloading libraries
2021-04-03 03:26:08,587:INFO:Preparing display monitor
2021-04-03 03:26:08,742:INFO:Initializing finalize_model()
2021-04-03 03:26:08,743:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-03 03:26:08,747:INFO:Finalizing PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:26:08,749:INFO:Initializing create_model()
2021-04-03 03:26:08,749:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:26:08,749:INFO:Checking exceptions
2021-04-03 03:26:08,749:INFO:Importing libraries
2021-04-03 03:26:08,749:INFO:Copying training dataset
2021-04-03 03:26:08,750:INFO:Defining folds
2021-04-03 03:26:08,750:INFO:Declaring metric variables
2021-04-03 03:26:08,750:INFO:Importing untrained model
2021-04-03 03:26:08,750:INFO:Declaring custom model
2021-04-03 03:26:08,752:INFO:Ridge Regression Imported succesfully
2021-04-03 03:26:08,752:INFO:Starting cross validation
2021-04-03 03:26:08,753:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:26:09,003:INFO:Calculating mean and std
2021-04-03 03:26:09,004:INFO:Creating metrics dataframe
2021-04-03 03:26:09,011:INFO:Finalizing model
2021-04-03 03:26:09,023:INFO:Uploading results into container
2021-04-03 03:26:09,023:INFO:Uploading model into container now
2021-04-03 03:26:09,023:INFO:create_model_container: 20
2021-04-03 03:26:09,023:INFO:master_model_container: 20
2021-04-03 03:26:09,023:INFO:display_container: 6
2021-04-03 03:26:09,025:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:26:09,025:INFO:create_model() succesfully completed......................................
2021-04-03 03:26:09,145:INFO:Creating MLFlow logs
2021-04-03 03:26:09,149:INFO:Model: Ridge Regression
2021-04-03 03:26:09,192:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 03:26:09,314:INFO:Initializing predict_model()
2021-04-03 03:26:09,314:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:26:09,314:INFO:Checking exceptions
2021-04-03 03:26:09,314:INFO:Preloading libraries
2021-04-03 03:26:09,587:INFO:create_model_container: 20
2021-04-03 03:26:09,587:INFO:master_model_container: 20
2021-04-03 03:26:09,587:INFO:display_container: 5
2021-04-03 03:26:09,588:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:26:09,588:INFO:finalize_model() succesfully completed......................................
2021-04-03 03:26:09,690:INFO:Initializing predict_model()
2021-04-03 03:26:09,690:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:26:09,691:INFO:Checking exceptions
2021-04-03 03:26:09,691:INFO:Preloading libraries
2021-04-03 03:26:09,691:INFO:Preparing display monitor
2021-04-03 03:26:09,849:INFO:Initializing predict_model()
2021-04-03 03:26:09,850:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:26:09,851:INFO:Checking exceptions
2021-04-03 03:26:09,851:INFO:Preloading libraries
2021-04-03 03:26:09,851:INFO:Preparing display monitor
2021-04-03 03:26:10,113:INFO:Initializing save_model()
2021-04-03 03:26:10,113:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), model_name=saved_models/best_2nd_model_to_predict_highschool_graduation_rate_br, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2021-04-03 03:26:10,113:INFO:Adding model into prep_pipe
2021-04-03 03:26:10,151:INFO:saved_models/best_2nd_model_to_predict_highschool_graduation_rate_br.pkl saved in current working directory
2021-04-03 03:26:10,163:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                                 fit_intercept=True,
                                                 max_iter=None, normalize=False,
                                                 power_transformer_method='box-cox',
                                                 power_transformer_standardize=True,
                                                 random_state=786,
                                                 regressor=Ridge(alpha=1.0,
                                                                 copy_X=True,
                                                                 fit_intercept=True,
                                                                 max_iter=None,
                                                                 normalize=False,
                                                                 random_state=786,
                                                                 solver='auto',
                                                                 tol=0.001),
                                                 solver='auto', tol=0.001)]],
         verbose=False)
2021-04-03 03:26:10,164:INFO:save_model() succesfully completed......................................
2021-04-03 03:26:10,459:INFO:PyCaret Supervised Module
2021-04-03 03:26:10,460:INFO:ML Usecase: regression
2021-04-03 03:26:10,460:INFO:version 2.3.0
2021-04-03 03:26:10,460:INFO:Initializing setup()
2021-04-03 03:26:10,460:INFO:setup(target=highschool_graduation_rate, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 03:26:10,460:INFO:Checking environment
2021-04-03 03:26:10,460:INFO:python_version: 3.9.1
2021-04-03 03:26:10,461:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 03:26:10,461:INFO:machine: AMD64
2021-04-03 03:26:10,461:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 03:26:10,464:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 03:26:10,464:INFO:Checking libraries
2021-04-03 03:26:10,464:INFO:pd==1.2.2
2021-04-03 03:26:10,464:INFO:numpy==1.19.5
2021-04-03 03:26:10,464:INFO:sklearn==0.23.2
2021-04-03 03:26:10,465:INFO:lightgbm==3.1.1
2021-04-03 03:26:10,467:WARNING:catboost not found
2021-04-03 03:26:10,468:INFO:xgboost==1.3.3
2021-04-03 03:26:10,468:INFO:mlflow==1.14.1
2021-04-03 03:26:10,468:INFO:Checking Exceptions
2021-04-03 03:26:10,468:INFO:Declaring global variables
2021-04-03 03:26:10,468:INFO:USI: c7b1
2021-04-03 03:26:10,469:INFO:pycaret_globals: {'fold_shuffle_param', 'transform_target_method_param', 'gpu_param', 'master_model_container', 'transform_target_param', '_all_metrics', '_ml_usecase', 'exp_name_log', 'fix_imbalance_param', 'fold_param', 'imputation_classifier', '_all_models', 'X', '_all_models_internal', 'stratify_param', 'imputation_regressor', 'fix_imbalance_method_param', 'display_container', 'X_train', 'fold_generator', 'X_test', 'fold_groups_param', 'pycaret_globals', 'seed', '_available_plots', 'logging_param', 'experiment__', 'y_train', 'n_jobs_param', 'USI', 'y_test', 'y', 'html_param', 'log_plots_param', 'data_before_preprocess', 'create_model_container', 'iterative_imputation_iters_param', '_gpu_n_jobs_param', '_internal_pipeline', 'target_param', 'prep_pipe'}
2021-04-03 03:26:10,469:INFO:Preparing display monitor
2021-04-03 03:26:10,469:INFO:Preparing display monitor
2021-04-03 03:26:10,489:INFO:Importing libraries
2021-04-03 03:26:10,489:INFO:Copying data for preprocessing
2021-04-03 03:26:10,501:INFO:Declaring preprocessing parameters
2021-04-03 03:26:10,503:INFO:Creating preprocessing pipeline
2021-04-03 03:26:10,511:INFO:Preprocessing pipeline created successfully
2021-04-03 03:26:10,525:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 03:26:10,525:INFO:Creating global containers
2021-04-03 03:26:10,526:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 03:27:11,054:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 03:27:11,188:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 03:27:11,188:INFO:Creating grid variables
2021-04-03 03:27:11,207:INFO:Logging experiment in MLFlow
2021-04-03 03:27:11,214:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-03 03:27:11,215:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-03 03:27:11,360:INFO:SubProcess save_model() called ==================================
2021-04-03 03:27:11,372:INFO:Initializing save_model()
2021-04-03 03:27:11,372:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 03:27:11,372:INFO:Adding model into prep_pipe
2021-04-03 03:27:11,374:WARNING:Only Model saved as it was a pipeline.
2021-04-03 03:27:11,397:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 03:27:11,406:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 03:27:11,406:INFO:save_model() succesfully completed......................................
2021-04-03 03:27:11,500:INFO:SubProcess save_model() end ==================================
2021-04-03 03:27:11,569:INFO:create_model_container: 0
2021-04-03 03:27:11,570:INFO:master_model_container: 0
2021-04-03 03:27:11,570:INFO:display_container: 1
2021-04-03 03:27:11,575:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 03:27:11,575:INFO:setup() succesfully completed......................................
2021-04-03 03:27:11,690:INFO:Initializing compare_models()
2021-04-03 03:27:11,691:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-03 03:27:11,691:INFO:Checking exceptions
2021-04-03 03:27:11,691:INFO:Preparing display monitor
2021-04-03 03:27:11,692:INFO:Preparing display monitor
2021-04-03 03:27:11,731:INFO:Initializing Linear Regression
2021-04-03 03:27:11,732:INFO:Total runtime is 1.6736984252929688e-05 minutes
2021-04-03 03:27:11,746:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:11,746:INFO:Initializing create_model()
2021-04-03 03:27:11,746:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:11,746:INFO:Checking exceptions
2021-04-03 03:27:11,747:INFO:Importing libraries
2021-04-03 03:27:11,747:INFO:Copying training dataset
2021-04-03 03:27:11,751:INFO:Defining folds
2021-04-03 03:27:11,751:INFO:Declaring metric variables
2021-04-03 03:27:11,768:INFO:Importing untrained model
2021-04-03 03:27:11,781:INFO:Linear Regression Imported succesfully
2021-04-03 03:27:11,806:INFO:Starting cross validation
2021-04-03 03:27:11,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:12,075:INFO:Calculating mean and std
2021-04-03 03:27:12,077:INFO:Creating metrics dataframe
2021-04-03 03:27:12,087:INFO:Uploading results into container
2021-04-03 03:27:12,087:INFO:Uploading model into container now
2021-04-03 03:27:12,087:INFO:create_model_container: 1
2021-04-03 03:27:12,088:INFO:master_model_container: 1
2021-04-03 03:27:12,088:INFO:display_container: 2
2021-04-03 03:27:12,089:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 03:27:12,089:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:12,202:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:12,202:INFO:Creating metrics dataframe
2021-04-03 03:27:12,229:INFO:Initializing Lasso Regression
2021-04-03 03:27:12,230:INFO:Total runtime is 0.008326860268910725 minutes
2021-04-03 03:27:12,243:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:12,244:INFO:Initializing create_model()
2021-04-03 03:27:12,244:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:12,244:INFO:Checking exceptions
2021-04-03 03:27:12,244:INFO:Importing libraries
2021-04-03 03:27:12,244:INFO:Copying training dataset
2021-04-03 03:27:12,245:INFO:Defining folds
2021-04-03 03:27:12,246:INFO:Declaring metric variables
2021-04-03 03:27:12,280:INFO:Importing untrained model
2021-04-03 03:27:12,299:INFO:Lasso Regression Imported succesfully
2021-04-03 03:27:12,334:INFO:Starting cross validation
2021-04-03 03:27:12,335:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:12,463:INFO:Calculating mean and std
2021-04-03 03:27:12,465:INFO:Creating metrics dataframe
2021-04-03 03:27:12,474:INFO:Uploading results into container
2021-04-03 03:27:12,475:INFO:Uploading model into container now
2021-04-03 03:27:12,475:INFO:create_model_container: 2
2021-04-03 03:27:12,475:INFO:master_model_container: 2
2021-04-03 03:27:12,475:INFO:display_container: 2
2021-04-03 03:27:12,476:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 03:27:12,477:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:12,613:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:12,614:INFO:Creating metrics dataframe
2021-04-03 03:27:12,673:INFO:Initializing Ridge Regression
2021-04-03 03:27:12,673:INFO:Total runtime is 0.015697185198465982 minutes
2021-04-03 03:27:12,712:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:12,712:INFO:Initializing create_model()
2021-04-03 03:27:12,712:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:12,712:INFO:Checking exceptions
2021-04-03 03:27:12,713:INFO:Importing libraries
2021-04-03 03:27:12,713:INFO:Copying training dataset
2021-04-03 03:27:12,715:INFO:Defining folds
2021-04-03 03:27:12,715:INFO:Declaring metric variables
2021-04-03 03:27:12,734:INFO:Importing untrained model
2021-04-03 03:27:12,757:INFO:Ridge Regression Imported succesfully
2021-04-03 03:27:12,795:INFO:Starting cross validation
2021-04-03 03:27:12,796:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:12,915:INFO:Calculating mean and std
2021-04-03 03:27:12,916:INFO:Creating metrics dataframe
2021-04-03 03:27:12,927:INFO:Uploading results into container
2021-04-03 03:27:12,927:INFO:Uploading model into container now
2021-04-03 03:27:12,927:INFO:create_model_container: 3
2021-04-03 03:27:12,927:INFO:master_model_container: 3
2021-04-03 03:27:12,927:INFO:display_container: 2
2021-04-03 03:27:12,929:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:27:12,929:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:13,069:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:13,069:INFO:Creating metrics dataframe
2021-04-03 03:27:13,114:INFO:Initializing Elastic Net
2021-04-03 03:27:13,114:INFO:Total runtime is 0.02306018273035685 minutes
2021-04-03 03:27:13,132:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:13,132:INFO:Initializing create_model()
2021-04-03 03:27:13,132:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:13,132:INFO:Checking exceptions
2021-04-03 03:27:13,133:INFO:Importing libraries
2021-04-03 03:27:13,133:INFO:Copying training dataset
2021-04-03 03:27:13,134:INFO:Defining folds
2021-04-03 03:27:13,135:INFO:Declaring metric variables
2021-04-03 03:27:13,147:INFO:Importing untrained model
2021-04-03 03:27:13,171:INFO:Elastic Net Imported succesfully
2021-04-03 03:27:13,204:INFO:Starting cross validation
2021-04-03 03:27:13,205:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:13,511:INFO:Calculating mean and std
2021-04-03 03:27:13,512:INFO:Creating metrics dataframe
2021-04-03 03:27:13,523:INFO:Uploading results into container
2021-04-03 03:27:13,524:INFO:Uploading model into container now
2021-04-03 03:27:13,524:INFO:create_model_container: 4
2021-04-03 03:27:13,525:INFO:master_model_container: 4
2021-04-03 03:27:13,525:INFO:display_container: 2
2021-04-03 03:27:13,527:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 03:27:13,528:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:13,648:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:13,649:INFO:Creating metrics dataframe
2021-04-03 03:27:13,685:INFO:Initializing Least Angle Regression
2021-04-03 03:27:13,686:INFO:Total runtime is 0.03259513775507609 minutes
2021-04-03 03:27:13,700:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:13,700:INFO:Initializing create_model()
2021-04-03 03:27:13,701:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:13,701:INFO:Checking exceptions
2021-04-03 03:27:13,701:INFO:Importing libraries
2021-04-03 03:27:13,701:INFO:Copying training dataset
2021-04-03 03:27:13,703:INFO:Defining folds
2021-04-03 03:27:13,704:INFO:Declaring metric variables
2021-04-03 03:27:13,719:INFO:Importing untrained model
2021-04-03 03:27:13,737:INFO:Least Angle Regression Imported succesfully
2021-04-03 03:27:13,775:INFO:Starting cross validation
2021-04-03 03:27:13,776:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:15,921:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-03 03:27:15,922:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 03:27:15,922:INFO:Initializing create_model()
2021-04-03 03:27:15,922:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:15,922:INFO:Checking exceptions
2021-04-03 03:27:15,922:INFO:Importing libraries
2021-04-03 03:27:15,923:INFO:Copying training dataset
2021-04-03 03:27:15,924:INFO:Defining folds
2021-04-03 03:27:15,924:INFO:Declaring metric variables
2021-04-03 03:27:15,933:INFO:Importing untrained model
2021-04-03 03:27:15,948:INFO:Least Angle Regression Imported succesfully
2021-04-03 03:27:15,979:INFO:Starting cross validation
2021-04-03 03:27:15,980:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:23,640:ERROR:create_model() for lar raised an exception:
2021-04-03 03:27:23,641:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 03:27:23,641:INFO:Initializing Lasso Least Angle Regression
2021-04-03 03:27:23,641:INFO:Total runtime is 0.19850948254267373 minutes
2021-04-03 03:27:23,655:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:23,656:INFO:Initializing create_model()
2021-04-03 03:27:23,657:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:23,657:INFO:Checking exceptions
2021-04-03 03:27:23,657:INFO:Importing libraries
2021-04-03 03:27:23,658:INFO:Copying training dataset
2021-04-03 03:27:23,659:INFO:Defining folds
2021-04-03 03:27:23,660:INFO:Declaring metric variables
2021-04-03 03:27:23,682:INFO:Importing untrained model
2021-04-03 03:27:23,704:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-03 03:27:23,740:INFO:Starting cross validation
2021-04-03 03:27:23,741:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:30,704:INFO:Calculating mean and std
2021-04-03 03:27:30,705:INFO:Creating metrics dataframe
2021-04-03 03:27:30,712:INFO:Uploading results into container
2021-04-03 03:27:30,712:INFO:Uploading model into container now
2021-04-03 03:27:30,712:INFO:create_model_container: 5
2021-04-03 03:27:30,712:INFO:master_model_container: 5
2021-04-03 03:27:30,712:INFO:display_container: 2
2021-04-03 03:27:30,714:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-03 03:27:30,714:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:30,828:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:30,828:INFO:Creating metrics dataframe
2021-04-03 03:27:30,852:INFO:Initializing Orthogonal Matching Pursuit
2021-04-03 03:27:30,853:INFO:Total runtime is 0.3187015493710835 minutes
2021-04-03 03:27:30,868:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:30,868:INFO:Initializing create_model()
2021-04-03 03:27:30,869:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:30,869:INFO:Checking exceptions
2021-04-03 03:27:30,869:INFO:Importing libraries
2021-04-03 03:27:30,869:INFO:Copying training dataset
2021-04-03 03:27:30,870:INFO:Defining folds
2021-04-03 03:27:30,871:INFO:Declaring metric variables
2021-04-03 03:27:30,881:INFO:Importing untrained model
2021-04-03 03:27:30,896:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-03 03:27:30,934:INFO:Starting cross validation
2021-04-03 03:27:30,936:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:31,056:INFO:Calculating mean and std
2021-04-03 03:27:31,058:INFO:Creating metrics dataframe
2021-04-03 03:27:31,066:INFO:Uploading results into container
2021-04-03 03:27:31,066:INFO:Uploading model into container now
2021-04-03 03:27:31,066:INFO:create_model_container: 6
2021-04-03 03:27:31,067:INFO:master_model_container: 6
2021-04-03 03:27:31,067:INFO:display_container: 2
2021-04-03 03:27:31,069:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-03 03:27:31,069:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:31,189:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:31,189:INFO:Creating metrics dataframe
2021-04-03 03:27:31,222:INFO:Initializing Bayesian Ridge
2021-04-03 03:27:31,222:INFO:Total runtime is 0.32486041386922193 minutes
2021-04-03 03:27:31,239:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:31,239:INFO:Initializing create_model()
2021-04-03 03:27:31,239:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:31,239:INFO:Checking exceptions
2021-04-03 03:27:31,240:INFO:Importing libraries
2021-04-03 03:27:31,240:INFO:Copying training dataset
2021-04-03 03:27:31,241:INFO:Defining folds
2021-04-03 03:27:31,241:INFO:Declaring metric variables
2021-04-03 03:27:31,258:INFO:Importing untrained model
2021-04-03 03:27:31,273:INFO:Bayesian Ridge Imported succesfully
2021-04-03 03:27:31,310:INFO:Starting cross validation
2021-04-03 03:27:31,311:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:31,425:INFO:Calculating mean and std
2021-04-03 03:27:31,427:INFO:Creating metrics dataframe
2021-04-03 03:27:31,436:INFO:Uploading results into container
2021-04-03 03:27:31,437:INFO:Uploading model into container now
2021-04-03 03:27:31,437:INFO:create_model_container: 7
2021-04-03 03:27:31,438:INFO:master_model_container: 7
2021-04-03 03:27:31,438:INFO:display_container: 2
2021-04-03 03:27:31,440:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:27:31,441:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:31,582:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:31,582:INFO:Creating metrics dataframe
2021-04-03 03:27:31,622:INFO:Initializing Passive Aggressive Regressor
2021-04-03 03:27:31,623:INFO:Total runtime is 0.33154236872990916 minutes
2021-04-03 03:27:31,638:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:31,638:INFO:Initializing create_model()
2021-04-03 03:27:31,639:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:31,639:INFO:Checking exceptions
2021-04-03 03:27:31,639:INFO:Importing libraries
2021-04-03 03:27:31,639:INFO:Copying training dataset
2021-04-03 03:27:31,640:INFO:Defining folds
2021-04-03 03:27:31,640:INFO:Declaring metric variables
2021-04-03 03:27:31,651:INFO:Importing untrained model
2021-04-03 03:27:31,669:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-03 03:27:31,702:INFO:Starting cross validation
2021-04-03 03:27:31,703:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:31,997:INFO:Calculating mean and std
2021-04-03 03:27:31,999:INFO:Creating metrics dataframe
2021-04-03 03:27:32,005:INFO:Uploading results into container
2021-04-03 03:27:32,005:INFO:Uploading model into container now
2021-04-03 03:27:32,005:INFO:create_model_container: 8
2021-04-03 03:27:32,006:INFO:master_model_container: 8
2021-04-03 03:27:32,006:INFO:display_container: 2
2021-04-03 03:27:32,009:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:27:32,009:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:32,146:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:32,146:INFO:Creating metrics dataframe
2021-04-03 03:27:32,192:INFO:Initializing Huber Regressor
2021-04-03 03:27:32,192:INFO:Total runtime is 0.341024092833201 minutes
2021-04-03 03:27:32,209:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:32,210:INFO:Initializing create_model()
2021-04-03 03:27:32,210:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:32,210:INFO:Checking exceptions
2021-04-03 03:27:32,210:INFO:Importing libraries
2021-04-03 03:27:32,210:INFO:Copying training dataset
2021-04-03 03:27:32,212:INFO:Defining folds
2021-04-03 03:27:32,212:INFO:Declaring metric variables
2021-04-03 03:27:32,235:INFO:Importing untrained model
2021-04-03 03:27:32,253:INFO:Huber Regressor Imported succesfully
2021-04-03 03:27:32,276:INFO:Starting cross validation
2021-04-03 03:27:32,277:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:32,481:INFO:Calculating mean and std
2021-04-03 03:27:32,482:INFO:Creating metrics dataframe
2021-04-03 03:27:32,489:INFO:Uploading results into container
2021-04-03 03:27:32,490:INFO:Uploading model into container now
2021-04-03 03:27:32,490:INFO:create_model_container: 9
2021-04-03 03:27:32,490:INFO:master_model_container: 9
2021-04-03 03:27:32,490:INFO:display_container: 2
2021-04-03 03:27:32,491:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 03:27:32,492:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:32,624:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:32,625:INFO:Creating metrics dataframe
2021-04-03 03:27:32,662:INFO:Initializing K Neighbors Regressor
2021-04-03 03:27:32,662:INFO:Total runtime is 0.34886065324147536 minutes
2021-04-03 03:27:32,678:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:32,678:INFO:Initializing create_model()
2021-04-03 03:27:32,679:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:32,679:INFO:Checking exceptions
2021-04-03 03:27:32,679:INFO:Importing libraries
2021-04-03 03:27:32,679:INFO:Copying training dataset
2021-04-03 03:27:32,681:INFO:Defining folds
2021-04-03 03:27:32,681:INFO:Declaring metric variables
2021-04-03 03:27:32,698:INFO:Importing untrained model
2021-04-03 03:27:32,717:INFO:K Neighbors Regressor Imported succesfully
2021-04-03 03:27:32,744:INFO:Starting cross validation
2021-04-03 03:27:32,746:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:32,922:INFO:Calculating mean and std
2021-04-03 03:27:32,924:INFO:Creating metrics dataframe
2021-04-03 03:27:32,932:INFO:Uploading results into container
2021-04-03 03:27:32,932:INFO:Uploading model into container now
2021-04-03 03:27:32,933:INFO:create_model_container: 10
2021-04-03 03:27:32,933:INFO:master_model_container: 10
2021-04-03 03:27:32,933:INFO:display_container: 2
2021-04-03 03:27:32,935:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-03 03:27:32,935:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:33,059:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:33,059:INFO:Creating metrics dataframe
2021-04-03 03:27:33,092:INFO:Initializing Decision Tree Regressor
2021-04-03 03:27:33,092:INFO:Total runtime is 0.35602436463038123 minutes
2021-04-03 03:27:33,109:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:33,110:INFO:Initializing create_model()
2021-04-03 03:27:33,110:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:33,110:INFO:Checking exceptions
2021-04-03 03:27:33,110:INFO:Importing libraries
2021-04-03 03:27:33,110:INFO:Copying training dataset
2021-04-03 03:27:33,111:INFO:Defining folds
2021-04-03 03:27:33,111:INFO:Declaring metric variables
2021-04-03 03:27:33,129:INFO:Importing untrained model
2021-04-03 03:27:33,157:INFO:Decision Tree Regressor Imported succesfully
2021-04-03 03:27:33,187:INFO:Starting cross validation
2021-04-03 03:27:33,188:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:33,477:INFO:Calculating mean and std
2021-04-03 03:27:33,479:INFO:Creating metrics dataframe
2021-04-03 03:27:33,489:INFO:Uploading results into container
2021-04-03 03:27:33,489:INFO:Uploading model into container now
2021-04-03 03:27:33,489:INFO:create_model_container: 11
2021-04-03 03:27:33,490:INFO:master_model_container: 11
2021-04-03 03:27:33,490:INFO:display_container: 2
2021-04-03 03:27:33,493:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-03 03:27:33,493:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:33,639:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:33,640:INFO:Creating metrics dataframe
2021-04-03 03:27:33,689:INFO:Initializing Random Forest Regressor
2021-04-03 03:27:33,689:INFO:Total runtime is 0.36597632567087807 minutes
2021-04-03 03:27:33,704:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:33,704:INFO:Initializing create_model()
2021-04-03 03:27:33,705:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:33,705:INFO:Checking exceptions
2021-04-03 03:27:33,705:INFO:Importing libraries
2021-04-03 03:27:33,705:INFO:Copying training dataset
2021-04-03 03:27:33,707:INFO:Defining folds
2021-04-03 03:27:33,707:INFO:Declaring metric variables
2021-04-03 03:27:33,729:INFO:Importing untrained model
2021-04-03 03:27:33,739:INFO:Random Forest Regressor Imported succesfully
2021-04-03 03:27:33,764:INFO:Starting cross validation
2021-04-03 03:27:33,765:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:34,884:INFO:Calculating mean and std
2021-04-03 03:27:34,886:INFO:Creating metrics dataframe
2021-04-03 03:27:34,897:INFO:Uploading results into container
2021-04-03 03:27:34,897:INFO:Uploading model into container now
2021-04-03 03:27:34,898:INFO:create_model_container: 12
2021-04-03 03:27:34,898:INFO:master_model_container: 12
2021-04-03 03:27:34,898:INFO:display_container: 2
2021-04-03 03:27:34,902:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 03:27:34,902:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:35,056:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:35,056:INFO:Creating metrics dataframe
2021-04-03 03:27:35,084:INFO:Initializing Extra Trees Regressor
2021-04-03 03:27:35,084:INFO:Total runtime is 0.38921748797098793 minutes
2021-04-03 03:27:35,100:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:35,101:INFO:Initializing create_model()
2021-04-03 03:27:35,101:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:35,101:INFO:Checking exceptions
2021-04-03 03:27:35,101:INFO:Importing libraries
2021-04-03 03:27:35,102:INFO:Copying training dataset
2021-04-03 03:27:35,103:INFO:Defining folds
2021-04-03 03:27:35,103:INFO:Declaring metric variables
2021-04-03 03:27:35,121:INFO:Importing untrained model
2021-04-03 03:27:35,137:INFO:Extra Trees Regressor Imported succesfully
2021-04-03 03:27:35,163:INFO:Starting cross validation
2021-04-03 03:27:35,165:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:36,098:INFO:Calculating mean and std
2021-04-03 03:27:36,099:INFO:Creating metrics dataframe
2021-04-03 03:27:36,110:INFO:Uploading results into container
2021-04-03 03:27:36,110:INFO:Uploading model into container now
2021-04-03 03:27:36,111:INFO:create_model_container: 13
2021-04-03 03:27:36,111:INFO:master_model_container: 13
2021-04-03 03:27:36,111:INFO:display_container: 2
2021-04-03 03:27:36,115:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 03:27:36,115:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:36,271:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:36,271:INFO:Creating metrics dataframe
2021-04-03 03:27:36,298:INFO:Initializing AdaBoost Regressor
2021-04-03 03:27:36,298:INFO:Total runtime is 0.4094614028930664 minutes
2021-04-03 03:27:36,309:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:36,310:INFO:Initializing create_model()
2021-04-03 03:27:36,310:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:36,310:INFO:Checking exceptions
2021-04-03 03:27:36,310:INFO:Importing libraries
2021-04-03 03:27:36,310:INFO:Copying training dataset
2021-04-03 03:27:36,311:INFO:Defining folds
2021-04-03 03:27:36,312:INFO:Declaring metric variables
2021-04-03 03:27:36,334:INFO:Importing untrained model
2021-04-03 03:27:36,345:INFO:AdaBoost Regressor Imported succesfully
2021-04-03 03:27:36,375:INFO:Starting cross validation
2021-04-03 03:27:36,376:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:36,832:INFO:Calculating mean and std
2021-04-03 03:27:36,833:INFO:Creating metrics dataframe
2021-04-03 03:27:36,839:INFO:Uploading results into container
2021-04-03 03:27:36,839:INFO:Uploading model into container now
2021-04-03 03:27:36,840:INFO:create_model_container: 14
2021-04-03 03:27:36,840:INFO:master_model_container: 14
2021-04-03 03:27:36,840:INFO:display_container: 2
2021-04-03 03:27:36,841:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-03 03:27:36,842:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:36,959:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:36,959:INFO:Creating metrics dataframe
2021-04-03 03:27:37,014:INFO:Initializing Gradient Boosting Regressor
2021-04-03 03:27:37,015:INFO:Total runtime is 0.4213978211085001 minutes
2021-04-03 03:27:37,029:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:37,030:INFO:Initializing create_model()
2021-04-03 03:27:37,030:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:37,030:INFO:Checking exceptions
2021-04-03 03:27:37,030:INFO:Importing libraries
2021-04-03 03:27:37,030:INFO:Copying training dataset
2021-04-03 03:27:37,031:INFO:Defining folds
2021-04-03 03:27:37,031:INFO:Declaring metric variables
2021-04-03 03:27:37,045:INFO:Importing untrained model
2021-04-03 03:27:37,072:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 03:27:37,103:INFO:Starting cross validation
2021-04-03 03:27:37,104:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:37,664:INFO:Calculating mean and std
2021-04-03 03:27:37,666:INFO:Creating metrics dataframe
2021-04-03 03:27:37,677:INFO:Uploading results into container
2021-04-03 03:27:37,678:INFO:Uploading model into container now
2021-04-03 03:27:37,678:INFO:create_model_container: 15
2021-04-03 03:27:37,678:INFO:master_model_container: 15
2021-04-03 03:27:37,679:INFO:display_container: 2
2021-04-03 03:27:37,682:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:27:37,682:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:37,846:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:37,846:INFO:Creating metrics dataframe
2021-04-03 03:27:37,884:INFO:Initializing Extreme Gradient Boosting
2021-04-03 03:27:37,885:INFO:Total runtime is 0.4358971238136291 minutes
2021-04-03 03:27:37,914:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:37,915:INFO:Initializing create_model()
2021-04-03 03:27:37,915:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:37,915:INFO:Checking exceptions
2021-04-03 03:27:37,915:INFO:Importing libraries
2021-04-03 03:27:37,915:INFO:Copying training dataset
2021-04-03 03:27:37,918:INFO:Defining folds
2021-04-03 03:27:37,919:INFO:Declaring metric variables
2021-04-03 03:27:37,937:INFO:Importing untrained model
2021-04-03 03:27:37,957:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 03:27:38,002:INFO:Starting cross validation
2021-04-03 03:27:38,003:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:40,054:INFO:Calculating mean and std
2021-04-03 03:27:40,056:INFO:Creating metrics dataframe
2021-04-03 03:27:40,065:INFO:Uploading results into container
2021-04-03 03:27:40,065:INFO:Uploading model into container now
2021-04-03 03:27:40,065:INFO:create_model_container: 16
2021-04-03 03:27:40,065:INFO:master_model_container: 16
2021-04-03 03:27:40,066:INFO:display_container: 2
2021-04-03 03:27:40,071:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 03:27:40,071:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:40,189:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:40,189:INFO:Creating metrics dataframe
2021-04-03 03:27:40,212:INFO:Initializing Light Gradient Boosting Machine
2021-04-03 03:27:40,212:INFO:Total runtime is 0.4746809681256612 minutes
2021-04-03 03:27:40,224:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:40,225:INFO:Initializing create_model()
2021-04-03 03:27:40,225:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3070>, kwargs={})
2021-04-03 03:27:40,225:INFO:Checking exceptions
2021-04-03 03:27:40,225:INFO:Importing libraries
2021-04-03 03:27:40,225:INFO:Copying training dataset
2021-04-03 03:27:40,227:INFO:Defining folds
2021-04-03 03:27:40,227:INFO:Declaring metric variables
2021-04-03 03:27:40,238:INFO:Importing untrained model
2021-04-03 03:27:40,259:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-03 03:27:40,292:INFO:Starting cross validation
2021-04-03 03:27:40,293:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:41,259:INFO:Calculating mean and std
2021-04-03 03:27:41,261:INFO:Creating metrics dataframe
2021-04-03 03:27:41,270:INFO:Uploading results into container
2021-04-03 03:27:41,270:INFO:Uploading model into container now
2021-04-03 03:27:41,271:INFO:create_model_container: 17
2021-04-03 03:27:41,271:INFO:master_model_container: 17
2021-04-03 03:27:41,271:INFO:display_container: 2
2021-04-03 03:27:41,274:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-03 03:27:41,274:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:41,399:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:41,399:INFO:Creating metrics dataframe
2021-04-03 03:27:41,472:INFO:Initializing create_model()
2021-04-03 03:27:41,472:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:27:41,473:INFO:Checking exceptions
2021-04-03 03:27:41,473:INFO:Importing libraries
2021-04-03 03:27:41,473:INFO:Copying training dataset
2021-04-03 03:27:41,473:INFO:Defining folds
2021-04-03 03:27:41,474:INFO:Declaring metric variables
2021-04-03 03:27:41,474:INFO:Importing untrained model
2021-04-03 03:27:41,474:INFO:Declaring custom model
2021-04-03 03:27:41,475:INFO:Ridge Regression Imported succesfully
2021-04-03 03:27:41,476:INFO:Cross validation set to False
2021-04-03 03:27:41,476:INFO:Fitting Model
2021-04-03 03:27:41,485:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:27:41,485:INFO:create_models() succesfully completed......................................
2021-04-03 03:27:41,615:INFO:Creating MLFlow logs
2021-04-03 03:27:41,631:INFO:Model: Ridge Regression
2021-04-03 03:27:41,677:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 03:27:41,797:INFO:Initializing predict_model()
2021-04-03 03:27:41,797:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:27:41,798:INFO:Checking exceptions
2021-04-03 03:27:41,798:INFO:Preloading libraries
2021-04-03 03:27:42,062:INFO:Creating MLFlow logs
2021-04-03 03:27:42,077:INFO:Model: Bayesian Ridge
2021-04-03 03:27:42,126:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 03:27:42,383:INFO:Creating MLFlow logs
2021-04-03 03:27:42,399:INFO:Model: Linear Regression
2021-04-03 03:27:42,443:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 03:27:42,712:INFO:Creating MLFlow logs
2021-04-03 03:27:42,725:INFO:Model: Huber Regressor
2021-04-03 03:27:42,775:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 03:27:43,080:INFO:Creating MLFlow logs
2021-04-03 03:27:43,094:INFO:Model: Extra Trees Regressor
2021-04-03 03:27:43,137:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 03:27:43,398:INFO:Creating MLFlow logs
2021-04-03 03:27:43,410:INFO:Model: Random Forest Regressor
2021-04-03 03:27:43,469:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 03:27:43,735:INFO:Creating MLFlow logs
2021-04-03 03:27:43,748:INFO:Model: Gradient Boosting Regressor
2021-04-03 03:27:43,794:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:27:44,065:INFO:Creating MLFlow logs
2021-04-03 03:27:44,077:INFO:Model: Light Gradient Boosting Machine
2021-04-03 03:27:44,125:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-03 03:27:44,394:INFO:Creating MLFlow logs
2021-04-03 03:27:44,407:INFO:Model: AdaBoost Regressor
2021-04-03 03:27:44,456:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-03 03:27:44,697:INFO:Creating MLFlow logs
2021-04-03 03:27:44,708:INFO:Model: Extreme Gradient Boosting
2021-04-03 03:27:44,752:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-03 03:27:45,030:INFO:Creating MLFlow logs
2021-04-03 03:27:45,049:INFO:Model: K Neighbors Regressor
2021-04-03 03:27:45,126:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-03 03:27:45,435:INFO:Creating MLFlow logs
2021-04-03 03:27:45,446:INFO:Model: Decision Tree Regressor
2021-04-03 03:27:45,496:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-03 03:27:45,766:INFO:Creating MLFlow logs
2021-04-03 03:27:45,789:INFO:Model: Orthogonal Matching Pursuit
2021-04-03 03:27:45,856:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-03 03:27:46,116:INFO:Creating MLFlow logs
2021-04-03 03:27:46,131:INFO:Model: Passive Aggressive Regressor
2021-04-03 03:27:46,184:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:27:46,459:INFO:Creating MLFlow logs
2021-04-03 03:27:46,469:INFO:Model: Elastic Net
2021-04-03 03:27:46,510:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 03:27:46,779:INFO:Creating MLFlow logs
2021-04-03 03:27:46,793:INFO:Model: Lasso Regression
2021-04-03 03:27:46,837:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 03:27:47,100:INFO:Creating MLFlow logs
2021-04-03 03:27:47,115:INFO:Model: Least Angle Regression
2021-04-03 03:27:47,162:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-03 03:27:47,434:INFO:create_model_container: 17
2021-04-03 03:27:47,434:INFO:master_model_container: 17
2021-04-03 03:27:47,434:INFO:display_container: 2
2021-04-03 03:27:47,436:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:27:47,436:INFO:compare_models() succesfully completed......................................
2021-04-03 03:27:47,449:INFO:Initializing create_model()
2021-04-03 03:27:47,450:INFO:create_model(estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-03 03:27:47,450:INFO:Checking exceptions
2021-04-03 03:27:47,450:INFO:Preparing display monitor
2021-04-03 03:27:47,486:INFO:Importing libraries
2021-04-03 03:27:47,486:INFO:Copying training dataset
2021-04-03 03:27:47,489:INFO:Defining folds
2021-04-03 03:27:47,489:INFO:Declaring metric variables
2021-04-03 03:27:47,499:INFO:Importing untrained model
2021-04-03 03:27:47,514:INFO:Ridge Regression Imported succesfully
2021-04-03 03:27:47,548:INFO:Starting cross validation
2021-04-03 03:27:47,549:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:47,830:INFO:Calculating mean and std
2021-04-03 03:27:47,832:INFO:Creating metrics dataframe
2021-04-03 03:27:47,867:INFO:Finalizing model
2021-04-03 03:27:47,891:INFO:Creating MLFlow logs
2021-04-03 03:27:47,922:INFO:Model: Ridge Regression
2021-04-03 03:27:47,987:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 03:27:48,154:INFO:Initializing predict_model()
2021-04-03 03:27:48,154:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:27:48,154:INFO:Checking exceptions
2021-04-03 03:27:48,155:INFO:Preloading libraries
2021-04-03 03:27:48,542:INFO:Uploading results into container
2021-04-03 03:27:48,542:INFO:Uploading model into container now
2021-04-03 03:27:48,564:INFO:create_model_container: 18
2021-04-03 03:27:48,564:INFO:master_model_container: 18
2021-04-03 03:27:48,565:INFO:display_container: 3
2021-04-03 03:27:48,566:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:27:48,568:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:48,766:INFO:Initializing tune_model()
2021-04-03 03:27:48,766:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-03 03:27:48,766:INFO:Checking exceptions
2021-04-03 03:27:48,766:INFO:Preparing display monitor
2021-04-03 03:27:48,806:INFO:Copying training dataset
2021-04-03 03:27:48,808:INFO:Checking base model
2021-04-03 03:27:48,808:INFO:Base model : Ridge Regression
2021-04-03 03:27:48,826:INFO:Declaring metric variables
2021-04-03 03:27:48,852:INFO:Defining Hyperparameters
2021-04-03 03:27:48,972:INFO:Tuning with n_jobs=-1
2021-04-03 03:27:48,972:INFO:Initializing RandomizedSearchCV
2021-04-03 03:27:49,662:INFO:best_params: {'actual_estimator__normalize': True, 'actual_estimator__fit_intercept': False, 'actual_estimator__alpha': 0.72}
2021-04-03 03:27:49,664:INFO:Hyperparameter search completed
2021-04-03 03:27:49,664:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:49,666:INFO:Initializing create_model()
2021-04-03 03:27:49,666:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBE8B700>, kwargs={'normalize': True, 'fit_intercept': False, 'alpha': 0.72})
2021-04-03 03:27:49,666:INFO:Checking exceptions
2021-04-03 03:27:49,666:INFO:Importing libraries
2021-04-03 03:27:49,666:INFO:Copying training dataset
2021-04-03 03:27:49,668:INFO:Defining folds
2021-04-03 03:27:49,668:INFO:Declaring metric variables
2021-04-03 03:27:49,692:INFO:Importing untrained model
2021-04-03 03:27:49,693:INFO:Declaring custom model
2021-04-03 03:27:49,713:INFO:Ridge Regression Imported succesfully
2021-04-03 03:27:49,762:INFO:Starting cross validation
2021-04-03 03:27:49,763:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:49,890:INFO:Calculating mean and std
2021-04-03 03:27:49,891:INFO:Creating metrics dataframe
2021-04-03 03:27:49,917:INFO:Finalizing model
2021-04-03 03:27:49,935:INFO:Uploading results into container
2021-04-03 03:27:49,935:INFO:Uploading model into container now
2021-04-03 03:27:49,935:INFO:create_model_container: 19
2021-04-03 03:27:49,936:INFO:master_model_container: 19
2021-04-03 03:27:49,936:INFO:display_container: 4
2021-04-03 03:27:49,938:INFO:PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:27:49,938:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:50,078:INFO:SubProcess create_model() end ==================================
2021-04-03 03:27:50,079:INFO:Creating MLFlow logs
2021-04-03 03:27:50,106:INFO:Model: Ridge Regression
2021-04-03 03:27:50,166:INFO:logged params: {'alpha': 0.72, 'copy_X': True, 'fit_intercept': False, 'max_iter': None, 'normalize': True, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 03:27:50,365:INFO:Initializing predict_model()
2021-04-03 03:27:50,365:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:27:50,365:INFO:Checking exceptions
2021-04-03 03:27:50,365:INFO:Preloading libraries
2021-04-03 03:27:50,737:INFO:create_model_container: 19
2021-04-03 03:27:50,738:INFO:master_model_container: 19
2021-04-03 03:27:50,739:INFO:display_container: 4
2021-04-03 03:27:50,742:INFO:PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:27:50,743:INFO:tune_model() succesfully completed......................................
2021-04-03 03:27:50,901:INFO:Initializing plot_model()
2021-04-03 03:27:50,902:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:27:50,902:INFO:Checking exceptions
2021-04-03 03:27:50,902:INFO:Preparing display monitor
2021-04-03 03:27:50,913:INFO:Preloading libraries
2021-04-03 03:27:50,917:INFO:Copying training dataset
2021-04-03 03:27:50,917:INFO:Copying test dataset
2021-04-03 03:27:50,918:INFO:Plot type: residuals
2021-04-03 03:27:50,980:INFO:Fitting Model
2021-04-03 03:27:51,022:INFO:Scoring test/hold-out set
2021-04-03 03:27:51,799:INFO:Visual Rendered Successfully
2021-04-03 03:27:51,963:INFO:plot_model() succesfully completed......................................
2021-04-03 03:27:51,980:INFO:Initializing plot_model()
2021-04-03 03:27:51,981:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:27:51,981:INFO:Checking exceptions
2021-04-03 03:27:51,981:INFO:Preparing display monitor
2021-04-03 03:27:51,994:INFO:Preloading libraries
2021-04-03 03:27:51,997:INFO:Copying training dataset
2021-04-03 03:27:51,998:INFO:Copying test dataset
2021-04-03 03:27:51,998:INFO:Plot type: error
2021-04-03 03:27:52,001:INFO:Fitting Model
2021-04-03 03:27:52,004:INFO:Scoring test/hold-out set
2021-04-03 03:27:52,425:INFO:Visual Rendered Successfully
2021-04-03 03:27:52,542:INFO:plot_model() succesfully completed......................................
2021-04-03 03:27:52,562:INFO:Initializing plot_model()
2021-04-03 03:27:52,562:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:27:52,562:INFO:Checking exceptions
2021-04-03 03:27:52,562:INFO:Preparing display monitor
2021-04-03 03:27:52,569:INFO:Preloading libraries
2021-04-03 03:27:52,572:INFO:Copying training dataset
2021-04-03 03:27:52,572:INFO:Copying test dataset
2021-04-03 03:27:52,573:INFO:Plot type: feature
2021-04-03 03:27:52,810:INFO:Visual Rendered Successfully
2021-04-03 03:27:52,906:INFO:plot_model() succesfully completed......................................
2021-04-03 03:27:52,936:INFO:Initializing evaluate_model()
2021-04-03 03:27:52,939:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-03 03:27:52,984:INFO:Initializing plot_model()
2021-04-03 03:27:52,984:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:27:52,984:INFO:Checking exceptions
2021-04-03 03:27:52,985:INFO:Preparing display monitor
2021-04-03 03:27:53,001:INFO:Preloading libraries
2021-04-03 03:27:53,006:INFO:Copying training dataset
2021-04-03 03:27:53,006:INFO:Copying test dataset
2021-04-03 03:27:53,007:INFO:Plot type: parameter
2021-04-03 03:27:53,018:INFO:Visual Rendered Successfully
2021-04-03 03:27:53,294:INFO:plot_model() succesfully completed......................................
2021-04-03 03:27:53,308:INFO:Initializing automl()
2021-04-03 03:27:53,308:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-03 03:27:53,308:INFO:Model Selection Basis : CV Results on Training set
2021-04-03 03:27:53,313:INFO:Initializing create_model()
2021-04-03 03:27:53,313:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:27:53,313:INFO:Checking exceptions
2021-04-03 03:27:53,314:INFO:Importing libraries
2021-04-03 03:27:53,314:INFO:Copying training dataset
2021-04-03 03:27:53,314:INFO:Defining folds
2021-04-03 03:27:53,314:INFO:Declaring metric variables
2021-04-03 03:27:53,314:INFO:Importing untrained model
2021-04-03 03:27:53,314:INFO:Declaring custom model
2021-04-03 03:27:53,314:INFO:Ridge Regression Imported succesfully
2021-04-03 03:27:53,315:INFO:Cross validation set to False
2021-04-03 03:27:53,315:INFO:Fitting Model
2021-04-03 03:27:53,327:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:27:53,328:INFO:create_models() succesfully completed......................................
2021-04-03 03:27:53,442:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:27:53,443:INFO:automl() succesfully completed......................................
2021-04-03 03:27:53,462:INFO:Initializing predict_model()
2021-04-03 03:27:53,462:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:27:53,462:INFO:Checking exceptions
2021-04-03 03:27:53,462:INFO:Preloading libraries
2021-04-03 03:27:53,462:INFO:Preparing display monitor
2021-04-03 03:27:53,761:INFO:Initializing finalize_model()
2021-04-03 03:27:53,761:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-03 03:27:53,763:INFO:Finalizing PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:27:53,765:INFO:Initializing create_model()
2021-04-03 03:27:53,765:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:27:53,766:INFO:Checking exceptions
2021-04-03 03:27:53,766:INFO:Importing libraries
2021-04-03 03:27:53,767:INFO:Copying training dataset
2021-04-03 03:27:53,768:INFO:Defining folds
2021-04-03 03:27:53,768:INFO:Declaring metric variables
2021-04-03 03:27:53,768:INFO:Importing untrained model
2021-04-03 03:27:53,768:INFO:Declaring custom model
2021-04-03 03:27:53,772:INFO:Ridge Regression Imported succesfully
2021-04-03 03:27:53,773:INFO:Starting cross validation
2021-04-03 03:27:53,774:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:27:54,089:INFO:Calculating mean and std
2021-04-03 03:27:54,090:INFO:Creating metrics dataframe
2021-04-03 03:27:54,099:INFO:Finalizing model
2021-04-03 03:27:54,111:INFO:Uploading results into container
2021-04-03 03:27:54,111:INFO:Uploading model into container now
2021-04-03 03:27:54,111:INFO:create_model_container: 20
2021-04-03 03:27:54,111:INFO:master_model_container: 20
2021-04-03 03:27:54,111:INFO:display_container: 6
2021-04-03 03:27:54,113:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:27:54,113:INFO:create_model() succesfully completed......................................
2021-04-03 03:27:54,266:INFO:Creating MLFlow logs
2021-04-03 03:27:54,269:INFO:Model: Ridge Regression
2021-04-03 03:27:54,351:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 03:27:54,502:INFO:Initializing predict_model()
2021-04-03 03:27:54,502:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:27:54,502:INFO:Checking exceptions
2021-04-03 03:27:54,502:INFO:Preloading libraries
2021-04-03 03:27:54,814:INFO:create_model_container: 20
2021-04-03 03:27:54,814:INFO:master_model_container: 20
2021-04-03 03:27:54,814:INFO:display_container: 5
2021-04-03 03:27:54,815:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:27:54,815:INFO:finalize_model() succesfully completed......................................
2021-04-03 03:27:54,939:INFO:Initializing predict_model()
2021-04-03 03:27:54,939:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:27:54,940:INFO:Checking exceptions
2021-04-03 03:27:54,940:INFO:Preloading libraries
2021-04-03 03:27:54,940:INFO:Preparing display monitor
2021-04-03 03:27:55,315:INFO:Initializing predict_model()
2021-04-03 03:27:55,315:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:27:55,315:INFO:Checking exceptions
2021-04-03 03:27:55,316:INFO:Preloading libraries
2021-04-03 03:27:55,316:INFO:Preparing display monitor
2021-04-03 03:27:55,581:INFO:Initializing save_model()
2021-04-03 03:27:55,581:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), model_name=saved_models/best_model_to_predict_highschool_graduation_rate_ridge_regression, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2021-04-03 03:27:55,581:INFO:Adding model into prep_pipe
2021-04-03 03:27:55,610:INFO:saved_models/best_model_to_predict_highschool_graduation_rate_ridge_regression.pkl saved in current working directory
2021-04-03 03:27:55,624:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                                 fit_intercept=True,
                                                 max_iter=None, normalize=False,
                                                 power_transformer_method='box-cox',
                                                 power_transformer_standardize=True,
                                                 random_state=786,
                                                 regressor=Ridge(alpha=1.0,
                                                                 copy_X=True,
                                                                 fit_intercept=True,
                                                                 max_iter=None,
                                                                 normalize=False,
                                                                 random_state=786,
                                                                 solver='auto',
                                                                 tol=0.001),
                                                 solver='auto', tol=0.001)]],
         verbose=False)
2021-04-03 03:27:55,625:INFO:save_model() succesfully completed......................................
2021-04-03 03:27:55,909:INFO:PyCaret Supervised Module
2021-04-03 03:27:55,909:INFO:ML Usecase: regression
2021-04-03 03:27:55,909:INFO:version 2.3.0
2021-04-03 03:27:55,910:INFO:Initializing setup()
2021-04-03 03:27:55,910:INFO:setup(target=College Enrollment Rate, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 03:27:55,910:INFO:Checking environment
2021-04-03 03:27:55,910:INFO:python_version: 3.9.1
2021-04-03 03:27:55,910:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 03:27:55,910:INFO:machine: AMD64
2021-04-03 03:27:55,910:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 03:27:55,912:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 03:27:55,912:INFO:Checking libraries
2021-04-03 03:27:55,912:INFO:pd==1.2.2
2021-04-03 03:27:55,912:INFO:numpy==1.19.5
2021-04-03 03:27:55,912:INFO:sklearn==0.23.2
2021-04-03 03:27:55,912:INFO:lightgbm==3.1.1
2021-04-03 03:27:55,914:WARNING:catboost not found
2021-04-03 03:27:55,914:INFO:xgboost==1.3.3
2021-04-03 03:27:55,914:INFO:mlflow==1.14.1
2021-04-03 03:27:55,914:INFO:Checking Exceptions
2021-04-03 03:27:55,914:INFO:Declaring global variables
2021-04-03 03:27:55,915:INFO:USI: 9226
2021-04-03 03:27:55,915:INFO:pycaret_globals: {'fold_shuffle_param', 'transform_target_method_param', 'gpu_param', 'master_model_container', 'transform_target_param', '_all_metrics', '_ml_usecase', 'exp_name_log', 'fix_imbalance_param', 'fold_param', 'imputation_classifier', '_all_models', 'X', '_all_models_internal', 'stratify_param', 'imputation_regressor', 'fix_imbalance_method_param', 'display_container', 'X_train', 'fold_generator', 'X_test', 'fold_groups_param', 'pycaret_globals', 'seed', '_available_plots', 'logging_param', 'experiment__', 'y_train', 'n_jobs_param', 'USI', 'y_test', 'y', 'html_param', 'log_plots_param', 'data_before_preprocess', 'create_model_container', 'iterative_imputation_iters_param', '_gpu_n_jobs_param', '_internal_pipeline', 'target_param', 'prep_pipe'}
2021-04-03 03:27:55,915:INFO:Preparing display monitor
2021-04-03 03:27:55,915:INFO:Preparing display monitor
2021-04-03 03:27:55,952:INFO:Importing libraries
2021-04-03 03:27:55,952:INFO:Copying data for preprocessing
2021-04-03 03:27:55,973:INFO:Declaring preprocessing parameters
2021-04-03 03:27:55,977:INFO:Creating preprocessing pipeline
2021-04-03 03:27:55,987:INFO:Preprocessing pipeline created successfully
2021-04-03 03:27:55,988:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 03:27:55,988:INFO:Creating global containers
2021-04-03 03:27:55,990:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 03:27:59,184:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 03:27:59,361:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 03:27:59,362:INFO:Creating grid variables
2021-04-03 03:27:59,388:INFO:Logging experiment in MLFlow
2021-04-03 03:27:59,393:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-03 03:27:59,393:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-03 03:27:59,549:INFO:SubProcess save_model() called ==================================
2021-04-03 03:27:59,562:INFO:Initializing save_model()
2021-04-03 03:27:59,563:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 03:27:59,563:INFO:Adding model into prep_pipe
2021-04-03 03:27:59,565:WARNING:Only Model saved as it was a pipeline.
2021-04-03 03:27:59,584:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 03:27:59,593:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 03:27:59,593:INFO:save_model() succesfully completed......................................
2021-04-03 03:27:59,681:INFO:SubProcess save_model() end ==================================
2021-04-03 03:27:59,753:INFO:create_model_container: 0
2021-04-03 03:27:59,754:INFO:master_model_container: 0
2021-04-03 03:27:59,754:INFO:display_container: 1
2021-04-03 03:27:59,760:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 03:27:59,760:INFO:setup() succesfully completed......................................
2021-04-03 03:27:59,865:INFO:Initializing compare_models()
2021-04-03 03:27:59,866:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-03 03:27:59,866:INFO:Checking exceptions
2021-04-03 03:27:59,866:INFO:Preparing display monitor
2021-04-03 03:27:59,867:INFO:Preparing display monitor
2021-04-03 03:27:59,927:INFO:Initializing Linear Regression
2021-04-03 03:27:59,927:INFO:Total runtime is 0.0 minutes
2021-04-03 03:27:59,948:INFO:SubProcess create_model() called ==================================
2021-04-03 03:27:59,950:INFO:Initializing create_model()
2021-04-03 03:27:59,950:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:27:59,951:INFO:Checking exceptions
2021-04-03 03:27:59,951:INFO:Importing libraries
2021-04-03 03:27:59,951:INFO:Copying training dataset
2021-04-03 03:27:59,955:INFO:Defining folds
2021-04-03 03:27:59,957:INFO:Declaring metric variables
2021-04-03 03:27:59,977:INFO:Importing untrained model
2021-04-03 03:27:59,996:INFO:Linear Regression Imported succesfully
2021-04-03 03:28:00,037:INFO:Starting cross validation
2021-04-03 03:28:00,039:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:00,294:INFO:Calculating mean and std
2021-04-03 03:28:00,298:INFO:Creating metrics dataframe
2021-04-03 03:28:00,313:INFO:Uploading results into container
2021-04-03 03:28:00,313:INFO:Uploading model into container now
2021-04-03 03:28:00,314:INFO:create_model_container: 1
2021-04-03 03:28:00,314:INFO:master_model_container: 1
2021-04-03 03:28:00,314:INFO:display_container: 2
2021-04-03 03:28:00,316:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 03:28:00,316:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:00,551:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:00,551:INFO:Creating metrics dataframe
2021-04-03 03:28:00,599:INFO:Initializing Lasso Regression
2021-04-03 03:28:00,599:INFO:Total runtime is 0.011192067464192709 minutes
2021-04-03 03:28:00,612:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:00,613:INFO:Initializing create_model()
2021-04-03 03:28:00,613:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:00,613:INFO:Checking exceptions
2021-04-03 03:28:00,613:INFO:Importing libraries
2021-04-03 03:28:00,613:INFO:Copying training dataset
2021-04-03 03:28:00,615:INFO:Defining folds
2021-04-03 03:28:00,615:INFO:Declaring metric variables
2021-04-03 03:28:00,632:INFO:Importing untrained model
2021-04-03 03:28:00,657:INFO:Lasso Regression Imported succesfully
2021-04-03 03:28:00,728:INFO:Starting cross validation
2021-04-03 03:28:00,729:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:00,852:INFO:Calculating mean and std
2021-04-03 03:28:00,855:INFO:Creating metrics dataframe
2021-04-03 03:28:00,864:INFO:Uploading results into container
2021-04-03 03:28:00,865:INFO:Uploading model into container now
2021-04-03 03:28:00,865:INFO:create_model_container: 2
2021-04-03 03:28:00,865:INFO:master_model_container: 2
2021-04-03 03:28:00,866:INFO:display_container: 2
2021-04-03 03:28:00,868:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 03:28:00,868:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:01,070:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:01,072:INFO:Creating metrics dataframe
2021-04-03 03:28:01,109:INFO:Initializing Ridge Regression
2021-04-03 03:28:01,109:INFO:Total runtime is 0.019686619440714516 minutes
2021-04-03 03:28:01,124:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:01,125:INFO:Initializing create_model()
2021-04-03 03:28:01,126:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:01,126:INFO:Checking exceptions
2021-04-03 03:28:01,126:INFO:Importing libraries
2021-04-03 03:28:01,127:INFO:Copying training dataset
2021-04-03 03:28:01,128:INFO:Defining folds
2021-04-03 03:28:01,128:INFO:Declaring metric variables
2021-04-03 03:28:01,145:INFO:Importing untrained model
2021-04-03 03:28:01,159:INFO:Ridge Regression Imported succesfully
2021-04-03 03:28:01,197:INFO:Starting cross validation
2021-04-03 03:28:01,199:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:01,352:INFO:Calculating mean and std
2021-04-03 03:28:01,366:INFO:Creating metrics dataframe
2021-04-03 03:28:01,383:INFO:Uploading results into container
2021-04-03 03:28:01,384:INFO:Uploading model into container now
2021-04-03 03:28:01,384:INFO:create_model_container: 3
2021-04-03 03:28:01,384:INFO:master_model_container: 3
2021-04-03 03:28:01,385:INFO:display_container: 2
2021-04-03 03:28:01,391:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:28:01,391:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:01,635:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:01,635:INFO:Creating metrics dataframe
2021-04-03 03:28:01,662:INFO:Initializing Elastic Net
2021-04-03 03:28:01,663:INFO:Total runtime is 0.028926742076873777 minutes
2021-04-03 03:28:01,679:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:01,679:INFO:Initializing create_model()
2021-04-03 03:28:01,679:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:01,680:INFO:Checking exceptions
2021-04-03 03:28:01,680:INFO:Importing libraries
2021-04-03 03:28:01,680:INFO:Copying training dataset
2021-04-03 03:28:01,681:INFO:Defining folds
2021-04-03 03:28:01,682:INFO:Declaring metric variables
2021-04-03 03:28:01,704:INFO:Importing untrained model
2021-04-03 03:28:01,713:INFO:Elastic Net Imported succesfully
2021-04-03 03:28:01,738:INFO:Starting cross validation
2021-04-03 03:28:01,740:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:01,915:INFO:Calculating mean and std
2021-04-03 03:28:01,917:INFO:Creating metrics dataframe
2021-04-03 03:28:01,928:INFO:Uploading results into container
2021-04-03 03:28:01,928:INFO:Uploading model into container now
2021-04-03 03:28:01,928:INFO:create_model_container: 4
2021-04-03 03:28:01,929:INFO:master_model_container: 4
2021-04-03 03:28:01,929:INFO:display_container: 2
2021-04-03 03:28:01,931:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 03:28:01,932:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:02,133:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:02,133:INFO:Creating metrics dataframe
2021-04-03 03:28:02,164:INFO:Initializing Least Angle Regression
2021-04-03 03:28:02,165:INFO:Total runtime is 0.03729328314463297 minutes
2021-04-03 03:28:02,181:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:02,182:INFO:Initializing create_model()
2021-04-03 03:28:02,182:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:02,182:INFO:Checking exceptions
2021-04-03 03:28:02,182:INFO:Importing libraries
2021-04-03 03:28:02,182:INFO:Copying training dataset
2021-04-03 03:28:02,184:INFO:Defining folds
2021-04-03 03:28:02,185:INFO:Declaring metric variables
2021-04-03 03:28:02,202:INFO:Importing untrained model
2021-04-03 03:28:02,217:INFO:Least Angle Regression Imported succesfully
2021-04-03 03:28:02,250:INFO:Starting cross validation
2021-04-03 03:28:02,251:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:04,425:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-03 03:28:04,425:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 03:28:04,426:INFO:Initializing create_model()
2021-04-03 03:28:04,426:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:04,426:INFO:Checking exceptions
2021-04-03 03:28:04,426:INFO:Importing libraries
2021-04-03 03:28:04,426:INFO:Copying training dataset
2021-04-03 03:28:04,427:INFO:Defining folds
2021-04-03 03:28:04,427:INFO:Declaring metric variables
2021-04-03 03:28:04,435:INFO:Importing untrained model
2021-04-03 03:28:04,450:INFO:Least Angle Regression Imported succesfully
2021-04-03 03:28:04,480:INFO:Starting cross validation
2021-04-03 03:28:04,482:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:12,487:ERROR:create_model() for lar raised an exception:
2021-04-03 03:28:12,489:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 03:28:12,489:INFO:Initializing Lasso Least Angle Regression
2021-04-03 03:28:12,489:INFO:Total runtime is 0.20936057964960736 minutes
2021-04-03 03:28:12,499:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:12,499:INFO:Initializing create_model()
2021-04-03 03:28:12,500:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:12,500:INFO:Checking exceptions
2021-04-03 03:28:12,500:INFO:Importing libraries
2021-04-03 03:28:12,500:INFO:Copying training dataset
2021-04-03 03:28:12,501:INFO:Defining folds
2021-04-03 03:28:12,501:INFO:Declaring metric variables
2021-04-03 03:28:12,512:INFO:Importing untrained model
2021-04-03 03:28:12,527:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-03 03:28:12,554:INFO:Starting cross validation
2021-04-03 03:28:12,556:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:19,061:INFO:Calculating mean and std
2021-04-03 03:28:19,062:INFO:Creating metrics dataframe
2021-04-03 03:28:19,067:INFO:Uploading results into container
2021-04-03 03:28:19,067:INFO:Uploading model into container now
2021-04-03 03:28:19,068:INFO:create_model_container: 5
2021-04-03 03:28:19,068:INFO:master_model_container: 5
2021-04-03 03:28:19,068:INFO:display_container: 2
2021-04-03 03:28:19,069:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-03 03:28:19,069:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:19,186:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:19,186:INFO:Creating metrics dataframe
2021-04-03 03:28:19,208:INFO:Initializing Orthogonal Matching Pursuit
2021-04-03 03:28:19,208:INFO:Total runtime is 0.32134867111841836 minutes
2021-04-03 03:28:19,221:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:19,222:INFO:Initializing create_model()
2021-04-03 03:28:19,223:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:19,223:INFO:Checking exceptions
2021-04-03 03:28:19,223:INFO:Importing libraries
2021-04-03 03:28:19,223:INFO:Copying training dataset
2021-04-03 03:28:19,224:INFO:Defining folds
2021-04-03 03:28:19,225:INFO:Declaring metric variables
2021-04-03 03:28:19,236:INFO:Importing untrained model
2021-04-03 03:28:19,258:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-03 03:28:19,291:INFO:Starting cross validation
2021-04-03 03:28:19,292:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:19,416:INFO:Calculating mean and std
2021-04-03 03:28:19,418:INFO:Creating metrics dataframe
2021-04-03 03:28:19,427:INFO:Uploading results into container
2021-04-03 03:28:19,427:INFO:Uploading model into container now
2021-04-03 03:28:19,427:INFO:create_model_container: 6
2021-04-03 03:28:19,428:INFO:master_model_container: 6
2021-04-03 03:28:19,428:INFO:display_container: 2
2021-04-03 03:28:19,429:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-03 03:28:19,429:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:19,545:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:19,546:INFO:Creating metrics dataframe
2021-04-03 03:28:19,577:INFO:Initializing Bayesian Ridge
2021-04-03 03:28:19,577:INFO:Total runtime is 0.3274980266888936 minutes
2021-04-03 03:28:19,589:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:19,589:INFO:Initializing create_model()
2021-04-03 03:28:19,590:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:19,590:INFO:Checking exceptions
2021-04-03 03:28:19,591:INFO:Importing libraries
2021-04-03 03:28:19,591:INFO:Copying training dataset
2021-04-03 03:28:19,593:INFO:Defining folds
2021-04-03 03:28:19,593:INFO:Declaring metric variables
2021-04-03 03:28:19,609:INFO:Importing untrained model
2021-04-03 03:28:19,632:INFO:Bayesian Ridge Imported succesfully
2021-04-03 03:28:19,653:INFO:Starting cross validation
2021-04-03 03:28:19,655:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:19,764:INFO:Calculating mean and std
2021-04-03 03:28:19,766:INFO:Creating metrics dataframe
2021-04-03 03:28:19,771:INFO:Uploading results into container
2021-04-03 03:28:19,771:INFO:Uploading model into container now
2021-04-03 03:28:19,772:INFO:create_model_container: 7
2021-04-03 03:28:19,772:INFO:master_model_container: 7
2021-04-03 03:28:19,772:INFO:display_container: 2
2021-04-03 03:28:19,775:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:28:19,775:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:19,909:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:19,909:INFO:Creating metrics dataframe
2021-04-03 03:28:19,966:INFO:Initializing Passive Aggressive Regressor
2021-04-03 03:28:19,966:INFO:Total runtime is 0.3339758237202962 minutes
2021-04-03 03:28:19,986:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:19,986:INFO:Initializing create_model()
2021-04-03 03:28:19,987:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:19,987:INFO:Checking exceptions
2021-04-03 03:28:19,987:INFO:Importing libraries
2021-04-03 03:28:19,987:INFO:Copying training dataset
2021-04-03 03:28:19,990:INFO:Defining folds
2021-04-03 03:28:19,991:INFO:Declaring metric variables
2021-04-03 03:28:20,003:INFO:Importing untrained model
2021-04-03 03:28:20,015:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-03 03:28:20,041:INFO:Starting cross validation
2021-04-03 03:28:20,042:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:20,299:INFO:Calculating mean and std
2021-04-03 03:28:20,302:INFO:Creating metrics dataframe
2021-04-03 03:28:20,312:INFO:Uploading results into container
2021-04-03 03:28:20,312:INFO:Uploading model into container now
2021-04-03 03:28:20,312:INFO:create_model_container: 8
2021-04-03 03:28:20,313:INFO:master_model_container: 8
2021-04-03 03:28:20,313:INFO:display_container: 2
2021-04-03 03:28:20,315:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:28:20,316:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:20,459:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:20,459:INFO:Creating metrics dataframe
2021-04-03 03:28:20,498:INFO:Initializing Huber Regressor
2021-04-03 03:28:20,498:INFO:Total runtime is 0.3428357720375061 minutes
2021-04-03 03:28:20,510:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:20,512:INFO:Initializing create_model()
2021-04-03 03:28:20,512:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:20,513:INFO:Checking exceptions
2021-04-03 03:28:20,513:INFO:Importing libraries
2021-04-03 03:28:20,513:INFO:Copying training dataset
2021-04-03 03:28:20,516:INFO:Defining folds
2021-04-03 03:28:20,516:INFO:Declaring metric variables
2021-04-03 03:28:20,531:INFO:Importing untrained model
2021-04-03 03:28:20,544:INFO:Huber Regressor Imported succesfully
2021-04-03 03:28:20,578:INFO:Starting cross validation
2021-04-03 03:28:20,578:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:20,780:INFO:Calculating mean and std
2021-04-03 03:28:20,781:INFO:Creating metrics dataframe
2021-04-03 03:28:20,786:INFO:Uploading results into container
2021-04-03 03:28:20,786:INFO:Uploading model into container now
2021-04-03 03:28:20,787:INFO:create_model_container: 9
2021-04-03 03:28:20,787:INFO:master_model_container: 9
2021-04-03 03:28:20,787:INFO:display_container: 2
2021-04-03 03:28:20,789:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 03:28:20,789:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:20,905:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:20,906:INFO:Creating metrics dataframe
2021-04-03 03:28:20,936:INFO:Initializing K Neighbors Regressor
2021-04-03 03:28:20,936:INFO:Total runtime is 0.35014067888259887 minutes
2021-04-03 03:28:20,951:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:20,952:INFO:Initializing create_model()
2021-04-03 03:28:20,952:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:20,952:INFO:Checking exceptions
2021-04-03 03:28:20,952:INFO:Importing libraries
2021-04-03 03:28:20,953:INFO:Copying training dataset
2021-04-03 03:28:20,954:INFO:Defining folds
2021-04-03 03:28:20,955:INFO:Declaring metric variables
2021-04-03 03:28:20,967:INFO:Importing untrained model
2021-04-03 03:28:20,981:INFO:K Neighbors Regressor Imported succesfully
2021-04-03 03:28:21,018:INFO:Starting cross validation
2021-04-03 03:28:21,019:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:21,166:INFO:Calculating mean and std
2021-04-03 03:28:21,167:INFO:Creating metrics dataframe
2021-04-03 03:28:21,172:INFO:Uploading results into container
2021-04-03 03:28:21,173:INFO:Uploading model into container now
2021-04-03 03:28:21,173:INFO:create_model_container: 10
2021-04-03 03:28:21,173:INFO:master_model_container: 10
2021-04-03 03:28:21,174:INFO:display_container: 2
2021-04-03 03:28:21,176:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-03 03:28:21,176:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:21,299:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:21,300:INFO:Creating metrics dataframe
2021-04-03 03:28:21,335:INFO:Initializing Decision Tree Regressor
2021-04-03 03:28:21,335:INFO:Total runtime is 0.35679239829381304 minutes
2021-04-03 03:28:21,349:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:21,350:INFO:Initializing create_model()
2021-04-03 03:28:21,350:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:21,350:INFO:Checking exceptions
2021-04-03 03:28:21,350:INFO:Importing libraries
2021-04-03 03:28:21,350:INFO:Copying training dataset
2021-04-03 03:28:21,352:INFO:Defining folds
2021-04-03 03:28:21,353:INFO:Declaring metric variables
2021-04-03 03:28:21,373:INFO:Importing untrained model
2021-04-03 03:28:21,394:INFO:Decision Tree Regressor Imported succesfully
2021-04-03 03:28:21,418:INFO:Starting cross validation
2021-04-03 03:28:21,419:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:21,737:INFO:Calculating mean and std
2021-04-03 03:28:21,739:INFO:Creating metrics dataframe
2021-04-03 03:28:21,746:INFO:Uploading results into container
2021-04-03 03:28:21,747:INFO:Uploading model into container now
2021-04-03 03:28:21,747:INFO:create_model_container: 11
2021-04-03 03:28:21,747:INFO:master_model_container: 11
2021-04-03 03:28:21,747:INFO:display_container: 2
2021-04-03 03:28:21,750:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-03 03:28:21,750:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:21,896:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:21,896:INFO:Creating metrics dataframe
2021-04-03 03:28:21,927:INFO:Initializing Random Forest Regressor
2021-04-03 03:28:21,928:INFO:Total runtime is 0.3666838963826497 minutes
2021-04-03 03:28:21,946:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:21,946:INFO:Initializing create_model()
2021-04-03 03:28:21,946:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:21,947:INFO:Checking exceptions
2021-04-03 03:28:21,947:INFO:Importing libraries
2021-04-03 03:28:21,947:INFO:Copying training dataset
2021-04-03 03:28:21,948:INFO:Defining folds
2021-04-03 03:28:21,950:INFO:Declaring metric variables
2021-04-03 03:28:21,973:INFO:Importing untrained model
2021-04-03 03:28:21,984:INFO:Random Forest Regressor Imported succesfully
2021-04-03 03:28:22,012:INFO:Starting cross validation
2021-04-03 03:28:22,012:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:23,719:INFO:Calculating mean and std
2021-04-03 03:28:23,720:INFO:Creating metrics dataframe
2021-04-03 03:28:23,730:INFO:Uploading results into container
2021-04-03 03:28:23,732:INFO:Uploading model into container now
2021-04-03 03:28:23,732:INFO:create_model_container: 12
2021-04-03 03:28:23,732:INFO:master_model_container: 12
2021-04-03 03:28:23,732:INFO:display_container: 2
2021-04-03 03:28:23,737:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 03:28:23,737:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:23,875:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:23,875:INFO:Creating metrics dataframe
2021-04-03 03:28:23,925:INFO:Initializing Extra Trees Regressor
2021-04-03 03:28:23,925:INFO:Total runtime is 0.3999541163444519 minutes
2021-04-03 03:28:23,940:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:23,941:INFO:Initializing create_model()
2021-04-03 03:28:23,941:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:23,941:INFO:Checking exceptions
2021-04-03 03:28:23,941:INFO:Importing libraries
2021-04-03 03:28:23,941:INFO:Copying training dataset
2021-04-03 03:28:23,942:INFO:Defining folds
2021-04-03 03:28:23,942:INFO:Declaring metric variables
2021-04-03 03:28:23,970:INFO:Importing untrained model
2021-04-03 03:28:23,994:INFO:Extra Trees Regressor Imported succesfully
2021-04-03 03:28:24,036:INFO:Starting cross validation
2021-04-03 03:28:24,038:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:25,532:INFO:Calculating mean and std
2021-04-03 03:28:25,534:INFO:Creating metrics dataframe
2021-04-03 03:28:25,543:INFO:Uploading results into container
2021-04-03 03:28:25,544:INFO:Uploading model into container now
2021-04-03 03:28:25,544:INFO:create_model_container: 13
2021-04-03 03:28:25,544:INFO:master_model_container: 13
2021-04-03 03:28:25,545:INFO:display_container: 2
2021-04-03 03:28:25,549:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 03:28:25,549:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:25,685:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:25,685:INFO:Creating metrics dataframe
2021-04-03 03:28:25,752:INFO:Initializing AdaBoost Regressor
2021-04-03 03:28:25,755:INFO:Total runtime is 0.4304648399353027 minutes
2021-04-03 03:28:25,777:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:25,778:INFO:Initializing create_model()
2021-04-03 03:28:25,779:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:25,779:INFO:Checking exceptions
2021-04-03 03:28:25,779:INFO:Importing libraries
2021-04-03 03:28:25,779:INFO:Copying training dataset
2021-04-03 03:28:25,782:INFO:Defining folds
2021-04-03 03:28:25,782:INFO:Declaring metric variables
2021-04-03 03:28:25,798:INFO:Importing untrained model
2021-04-03 03:28:25,813:INFO:AdaBoost Regressor Imported succesfully
2021-04-03 03:28:25,850:INFO:Starting cross validation
2021-04-03 03:28:25,851:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:26,451:INFO:Calculating mean and std
2021-04-03 03:28:26,453:INFO:Creating metrics dataframe
2021-04-03 03:28:26,465:INFO:Uploading results into container
2021-04-03 03:28:26,466:INFO:Uploading model into container now
2021-04-03 03:28:26,466:INFO:create_model_container: 14
2021-04-03 03:28:26,467:INFO:master_model_container: 14
2021-04-03 03:28:26,467:INFO:display_container: 2
2021-04-03 03:28:26,469:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-03 03:28:26,469:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:26,637:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:26,637:INFO:Creating metrics dataframe
2021-04-03 03:28:26,705:INFO:Initializing Gradient Boosting Regressor
2021-04-03 03:28:26,706:INFO:Total runtime is 0.4463095943133036 minutes
2021-04-03 03:28:26,724:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:26,725:INFO:Initializing create_model()
2021-04-03 03:28:26,725:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:26,725:INFO:Checking exceptions
2021-04-03 03:28:26,725:INFO:Importing libraries
2021-04-03 03:28:26,726:INFO:Copying training dataset
2021-04-03 03:28:26,727:INFO:Defining folds
2021-04-03 03:28:26,728:INFO:Declaring metric variables
2021-04-03 03:28:26,740:INFO:Importing untrained model
2021-04-03 03:28:26,759:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 03:28:26,799:INFO:Starting cross validation
2021-04-03 03:28:26,800:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:27,202:INFO:Calculating mean and std
2021-04-03 03:28:27,203:INFO:Creating metrics dataframe
2021-04-03 03:28:27,209:INFO:Uploading results into container
2021-04-03 03:28:27,209:INFO:Uploading model into container now
2021-04-03 03:28:27,210:INFO:create_model_container: 15
2021-04-03 03:28:27,210:INFO:master_model_container: 15
2021-04-03 03:28:27,210:INFO:display_container: 2
2021-04-03 03:28:27,213:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:28:27,214:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:27,375:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:27,375:INFO:Creating metrics dataframe
2021-04-03 03:28:27,411:INFO:Initializing Extreme Gradient Boosting
2021-04-03 03:28:27,411:INFO:Total runtime is 0.45805214643478387 minutes
2021-04-03 03:28:27,435:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:27,436:INFO:Initializing create_model()
2021-04-03 03:28:27,436:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:27,437:INFO:Checking exceptions
2021-04-03 03:28:27,437:INFO:Importing libraries
2021-04-03 03:28:27,437:INFO:Copying training dataset
2021-04-03 03:28:27,439:INFO:Defining folds
2021-04-03 03:28:27,439:INFO:Declaring metric variables
2021-04-03 03:28:27,458:INFO:Importing untrained model
2021-04-03 03:28:27,476:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 03:28:27,516:INFO:Starting cross validation
2021-04-03 03:28:27,518:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:30,689:INFO:Calculating mean and std
2021-04-03 03:28:30,691:INFO:Creating metrics dataframe
2021-04-03 03:28:30,701:INFO:Uploading results into container
2021-04-03 03:28:30,701:INFO:Uploading model into container now
2021-04-03 03:28:30,702:INFO:create_model_container: 16
2021-04-03 03:28:30,702:INFO:master_model_container: 16
2021-04-03 03:28:30,702:INFO:display_container: 2
2021-04-03 03:28:30,709:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 03:28:30,709:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:30,835:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:30,835:INFO:Creating metrics dataframe
2021-04-03 03:28:30,862:INFO:Initializing Light Gradient Boosting Machine
2021-04-03 03:28:30,862:INFO:Total runtime is 0.5155780514081318 minutes
2021-04-03 03:28:30,873:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:30,874:INFO:Initializing create_model()
2021-04-03 03:28:30,874:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF57BEB0>, kwargs={})
2021-04-03 03:28:30,874:INFO:Checking exceptions
2021-04-03 03:28:30,874:INFO:Importing libraries
2021-04-03 03:28:30,874:INFO:Copying training dataset
2021-04-03 03:28:30,875:INFO:Defining folds
2021-04-03 03:28:30,876:INFO:Declaring metric variables
2021-04-03 03:28:30,885:INFO:Importing untrained model
2021-04-03 03:28:30,900:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-03 03:28:30,935:INFO:Starting cross validation
2021-04-03 03:28:30,937:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:31,943:INFO:Calculating mean and std
2021-04-03 03:28:31,945:INFO:Creating metrics dataframe
2021-04-03 03:28:31,956:INFO:Uploading results into container
2021-04-03 03:28:31,956:INFO:Uploading model into container now
2021-04-03 03:28:31,956:INFO:create_model_container: 17
2021-04-03 03:28:31,956:INFO:master_model_container: 17
2021-04-03 03:28:31,956:INFO:display_container: 2
2021-04-03 03:28:31,959:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-03 03:28:31,960:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:32,084:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:32,084:INFO:Creating metrics dataframe
2021-04-03 03:28:32,138:INFO:Initializing create_model()
2021-04-03 03:28:32,139:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:28:32,139:INFO:Checking exceptions
2021-04-03 03:28:32,139:INFO:Importing libraries
2021-04-03 03:28:32,139:INFO:Copying training dataset
2021-04-03 03:28:32,140:INFO:Defining folds
2021-04-03 03:28:32,140:INFO:Declaring metric variables
2021-04-03 03:28:32,140:INFO:Importing untrained model
2021-04-03 03:28:32,140:INFO:Declaring custom model
2021-04-03 03:28:32,141:INFO:Bayesian Ridge Imported succesfully
2021-04-03 03:28:32,141:INFO:Cross validation set to False
2021-04-03 03:28:32,142:INFO:Fitting Model
2021-04-03 03:28:32,152:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:28:32,153:INFO:create_models() succesfully completed......................................
2021-04-03 03:28:32,278:INFO:Creating MLFlow logs
2021-04-03 03:28:32,298:INFO:Model: Bayesian Ridge
2021-04-03 03:28:32,348:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 03:28:32,494:INFO:Initializing predict_model()
2021-04-03 03:28:32,494:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:28:32,494:INFO:Checking exceptions
2021-04-03 03:28:32,494:INFO:Preloading libraries
2021-04-03 03:28:32,768:INFO:Creating MLFlow logs
2021-04-03 03:28:32,781:INFO:Model: Ridge Regression
2021-04-03 03:28:32,830:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 03:28:33,082:INFO:Creating MLFlow logs
2021-04-03 03:28:33,098:INFO:Model: Linear Regression
2021-04-03 03:28:33,148:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 03:28:33,465:INFO:Creating MLFlow logs
2021-04-03 03:28:33,478:INFO:Model: Huber Regressor
2021-04-03 03:28:33,534:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 03:28:33,868:INFO:Creating MLFlow logs
2021-04-03 03:28:33,880:INFO:Model: Random Forest Regressor
2021-04-03 03:28:33,925:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 03:28:34,195:INFO:Creating MLFlow logs
2021-04-03 03:28:34,206:INFO:Model: AdaBoost Regressor
2021-04-03 03:28:34,254:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-03 03:28:34,510:INFO:Creating MLFlow logs
2021-04-03 03:28:34,521:INFO:Model: Extra Trees Regressor
2021-04-03 03:28:34,567:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 03:28:34,852:INFO:Creating MLFlow logs
2021-04-03 03:28:34,868:INFO:Model: Gradient Boosting Regressor
2021-04-03 03:28:34,925:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:28:35,238:INFO:Creating MLFlow logs
2021-04-03 03:28:35,250:INFO:Model: Light Gradient Boosting Machine
2021-04-03 03:28:35,297:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-03 03:28:35,584:INFO:Creating MLFlow logs
2021-04-03 03:28:35,601:INFO:Model: Extreme Gradient Boosting
2021-04-03 03:28:35,646:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-03 03:28:35,960:INFO:Creating MLFlow logs
2021-04-03 03:28:35,970:INFO:Model: Decision Tree Regressor
2021-04-03 03:28:36,035:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-03 03:28:36,335:INFO:Creating MLFlow logs
2021-04-03 03:28:36,349:INFO:Model: Orthogonal Matching Pursuit
2021-04-03 03:28:36,407:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-03 03:28:36,716:INFO:Creating MLFlow logs
2021-04-03 03:28:36,727:INFO:Model: K Neighbors Regressor
2021-04-03 03:28:36,767:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-03 03:28:37,024:INFO:Creating MLFlow logs
2021-04-03 03:28:37,039:INFO:Model: Passive Aggressive Regressor
2021-04-03 03:28:37,089:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:28:37,412:INFO:Creating MLFlow logs
2021-04-03 03:28:37,424:INFO:Model: Elastic Net
2021-04-03 03:28:37,476:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 03:28:37,731:INFO:Creating MLFlow logs
2021-04-03 03:28:37,743:INFO:Model: Lasso Regression
2021-04-03 03:28:37,801:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 03:28:38,060:INFO:Creating MLFlow logs
2021-04-03 03:28:38,073:INFO:Model: Least Angle Regression
2021-04-03 03:28:38,142:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-03 03:28:38,464:INFO:create_model_container: 17
2021-04-03 03:28:38,464:INFO:master_model_container: 17
2021-04-03 03:28:38,464:INFO:display_container: 2
2021-04-03 03:28:38,470:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:28:38,470:INFO:compare_models() succesfully completed......................................
2021-04-03 03:28:38,493:INFO:Initializing create_model()
2021-04-03 03:28:38,493:INFO:create_model(estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-03 03:28:38,494:INFO:Checking exceptions
2021-04-03 03:28:38,494:INFO:Preparing display monitor
2021-04-03 03:28:38,530:INFO:Importing libraries
2021-04-03 03:28:38,530:INFO:Copying training dataset
2021-04-03 03:28:38,532:INFO:Defining folds
2021-04-03 03:28:38,532:INFO:Declaring metric variables
2021-04-03 03:28:38,544:INFO:Importing untrained model
2021-04-03 03:28:38,562:INFO:Linear Regression Imported succesfully
2021-04-03 03:28:38,602:INFO:Starting cross validation
2021-04-03 03:28:38,604:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:38,830:INFO:Calculating mean and std
2021-04-03 03:28:38,836:INFO:Creating metrics dataframe
2021-04-03 03:28:38,922:INFO:Finalizing model
2021-04-03 03:28:38,938:INFO:Creating MLFlow logs
2021-04-03 03:28:38,986:INFO:Model: Linear Regression
2021-04-03 03:28:39,060:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 03:28:39,274:INFO:Initializing predict_model()
2021-04-03 03:28:39,274:INFO:predict_model(estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False)), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:28:39,275:INFO:Checking exceptions
2021-04-03 03:28:39,276:INFO:Preloading libraries
2021-04-03 03:28:39,779:INFO:Uploading results into container
2021-04-03 03:28:39,779:INFO:Uploading model into container now
2021-04-03 03:28:39,816:INFO:create_model_container: 18
2021-04-03 03:28:39,817:INFO:master_model_container: 18
2021-04-03 03:28:39,817:INFO:display_container: 3
2021-04-03 03:28:39,818:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 03:28:39,818:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:40,002:INFO:Initializing tune_model()
2021-04-03 03:28:40,002:INFO:tune_model(estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False)), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-03 03:28:40,003:INFO:Checking exceptions
2021-04-03 03:28:40,003:INFO:Preparing display monitor
2021-04-03 03:28:40,046:INFO:Copying training dataset
2021-04-03 03:28:40,047:INFO:Checking base model
2021-04-03 03:28:40,047:INFO:Base model : Linear Regression
2021-04-03 03:28:40,067:INFO:Declaring metric variables
2021-04-03 03:28:40,084:INFO:Defining Hyperparameters
2021-04-03 03:28:40,085:INFO:10 is bigger than total combinations 4, setting search algorithm to grid
2021-04-03 03:28:40,251:INFO:Tuning with n_jobs=-1
2021-04-03 03:28:40,251:INFO:Initializing GridSearchCV
2021-04-03 03:28:40,655:INFO:best_params: {'actual_estimator__fit_intercept': False, 'actual_estimator__normalize': True}
2021-04-03 03:28:40,657:INFO:Hyperparameter search completed
2021-04-03 03:28:40,657:INFO:SubProcess create_model() called ==================================
2021-04-03 03:28:40,659:INFO:Initializing create_model()
2021-04-03 03:28:40,660:INFO:create_model(estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False)), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBAD3340>, kwargs={'fit_intercept': False, 'normalize': True})
2021-04-03 03:28:40,660:INFO:Checking exceptions
2021-04-03 03:28:40,660:INFO:Importing libraries
2021-04-03 03:28:40,660:INFO:Copying training dataset
2021-04-03 03:28:40,662:INFO:Defining folds
2021-04-03 03:28:40,663:INFO:Declaring metric variables
2021-04-03 03:28:40,682:INFO:Importing untrained model
2021-04-03 03:28:40,682:INFO:Declaring custom model
2021-04-03 03:28:40,695:INFO:Linear Regression Imported succesfully
2021-04-03 03:28:40,718:INFO:Starting cross validation
2021-04-03 03:28:40,718:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:40,810:INFO:Calculating mean and std
2021-04-03 03:28:40,811:INFO:Creating metrics dataframe
2021-04-03 03:28:40,839:INFO:Finalizing model
2021-04-03 03:28:40,847:INFO:Uploading results into container
2021-04-03 03:28:40,847:INFO:Uploading model into container now
2021-04-03 03:28:40,848:INFO:create_model_container: 19
2021-04-03 03:28:40,848:INFO:master_model_container: 19
2021-04-03 03:28:40,848:INFO:display_container: 4
2021-04-03 03:28:40,849:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True))
2021-04-03 03:28:40,849:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:40,965:INFO:SubProcess create_model() end ==================================
2021-04-03 03:28:40,966:INFO:Creating MLFlow logs
2021-04-03 03:28:40,986:INFO:Model: Linear Regression
2021-04-03 03:28:41,028:INFO:logged params: {'copy_X': True, 'fit_intercept': False, 'n_jobs': -1, 'normalize': True}
2021-04-03 03:28:41,210:INFO:Initializing predict_model()
2021-04-03 03:28:41,210:INFO:predict_model(estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:28:41,210:INFO:Checking exceptions
2021-04-03 03:28:41,210:INFO:Preloading libraries
2021-04-03 03:28:41,541:INFO:create_model_container: 19
2021-04-03 03:28:41,541:INFO:master_model_container: 19
2021-04-03 03:28:41,541:INFO:display_container: 4
2021-04-03 03:28:41,542:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True))
2021-04-03 03:28:41,542:INFO:tune_model() succesfully completed......................................
2021-04-03 03:28:41,658:INFO:Initializing plot_model()
2021-04-03 03:28:41,658:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:28:41,659:INFO:Checking exceptions
2021-04-03 03:28:41,659:INFO:Preparing display monitor
2021-04-03 03:28:41,669:INFO:Preloading libraries
2021-04-03 03:28:41,670:INFO:Copying training dataset
2021-04-03 03:28:41,671:INFO:Copying test dataset
2021-04-03 03:28:41,671:INFO:Plot type: residuals
2021-04-03 03:28:41,718:INFO:Fitting Model
2021-04-03 03:28:41,749:INFO:Scoring test/hold-out set
2021-04-03 03:28:42,351:INFO:Visual Rendered Successfully
2021-04-03 03:28:42,454:INFO:plot_model() succesfully completed......................................
2021-04-03 03:28:42,468:INFO:Initializing plot_model()
2021-04-03 03:28:42,468:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:28:42,468:INFO:Checking exceptions
2021-04-03 03:28:42,469:INFO:Preparing display monitor
2021-04-03 03:28:42,479:INFO:Preloading libraries
2021-04-03 03:28:42,482:INFO:Copying training dataset
2021-04-03 03:28:42,483:INFO:Copying test dataset
2021-04-03 03:28:42,483:INFO:Plot type: error
2021-04-03 03:28:42,486:INFO:Fitting Model
2021-04-03 03:28:42,488:INFO:Scoring test/hold-out set
2021-04-03 03:28:42,868:INFO:Visual Rendered Successfully
2021-04-03 03:28:42,958:INFO:plot_model() succesfully completed......................................
2021-04-03 03:28:42,966:INFO:Initializing plot_model()
2021-04-03 03:28:42,966:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:28:42,966:INFO:Checking exceptions
2021-04-03 03:28:42,967:INFO:Preparing display monitor
2021-04-03 03:28:42,975:INFO:Preloading libraries
2021-04-03 03:28:42,978:INFO:Copying training dataset
2021-04-03 03:28:42,979:INFO:Copying test dataset
2021-04-03 03:28:42,980:INFO:Plot type: feature
2021-04-03 03:28:43,217:INFO:Visual Rendered Successfully
2021-04-03 03:28:43,311:INFO:plot_model() succesfully completed......................................
2021-04-03 03:28:43,345:INFO:Initializing evaluate_model()
2021-04-03 03:28:43,345:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-03 03:28:43,373:INFO:Initializing plot_model()
2021-04-03 03:28:43,374:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:28:43,375:INFO:Checking exceptions
2021-04-03 03:28:43,375:INFO:Preparing display monitor
2021-04-03 03:28:43,386:INFO:Preloading libraries
2021-04-03 03:28:43,390:INFO:Copying training dataset
2021-04-03 03:28:43,391:INFO:Copying test dataset
2021-04-03 03:28:43,392:INFO:Plot type: parameter
2021-04-03 03:28:43,402:INFO:Visual Rendered Successfully
2021-04-03 03:28:43,506:INFO:plot_model() succesfully completed......................................
2021-04-03 03:28:43,533:INFO:Initializing automl()
2021-04-03 03:28:43,533:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-03 03:28:43,537:INFO:Model Selection Basis : CV Results on Training set
2021-04-03 03:28:43,545:INFO:Initializing create_model()
2021-04-03 03:28:43,545:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:28:43,545:INFO:Checking exceptions
2021-04-03 03:28:43,546:INFO:Importing libraries
2021-04-03 03:28:43,546:INFO:Copying training dataset
2021-04-03 03:28:43,546:INFO:Defining folds
2021-04-03 03:28:43,546:INFO:Declaring metric variables
2021-04-03 03:28:43,546:INFO:Importing untrained model
2021-04-03 03:28:43,547:INFO:Declaring custom model
2021-04-03 03:28:43,549:INFO:Bayesian Ridge Imported succesfully
2021-04-03 03:28:43,550:INFO:Cross validation set to False
2021-04-03 03:28:43,550:INFO:Fitting Model
2021-04-03 03:28:43,562:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:28:43,562:INFO:create_models() succesfully completed......................................
2021-04-03 03:28:43,660:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:28:43,660:INFO:automl() succesfully completed......................................
2021-04-03 03:28:43,673:INFO:Initializing predict_model()
2021-04-03 03:28:43,673:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:28:43,673:INFO:Checking exceptions
2021-04-03 03:28:43,673:INFO:Preloading libraries
2021-04-03 03:28:43,674:INFO:Preparing display monitor
2021-04-03 03:28:43,813:INFO:Initializing finalize_model()
2021-04-03 03:28:43,814:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-03 03:28:43,815:INFO:Finalizing PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:28:43,816:INFO:Initializing create_model()
2021-04-03 03:28:43,816:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:28:43,816:INFO:Checking exceptions
2021-04-03 03:28:43,816:INFO:Importing libraries
2021-04-03 03:28:43,816:INFO:Copying training dataset
2021-04-03 03:28:43,816:INFO:Defining folds
2021-04-03 03:28:43,817:INFO:Declaring metric variables
2021-04-03 03:28:43,817:INFO:Importing untrained model
2021-04-03 03:28:43,817:INFO:Declaring custom model
2021-04-03 03:28:43,818:INFO:Bayesian Ridge Imported succesfully
2021-04-03 03:28:43,818:INFO:Starting cross validation
2021-04-03 03:28:43,818:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:28:44,065:INFO:Calculating mean and std
2021-04-03 03:28:44,065:INFO:Creating metrics dataframe
2021-04-03 03:28:44,072:INFO:Finalizing model
2021-04-03 03:28:44,080:INFO:Uploading results into container
2021-04-03 03:28:44,080:INFO:Uploading model into container now
2021-04-03 03:28:44,080:INFO:create_model_container: 20
2021-04-03 03:28:44,080:INFO:master_model_container: 20
2021-04-03 03:28:44,080:INFO:display_container: 6
2021-04-03 03:28:44,081:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:28:44,082:INFO:create_model() succesfully completed......................................
2021-04-03 03:28:44,174:INFO:Creating MLFlow logs
2021-04-03 03:28:44,176:INFO:Model: Bayesian Ridge
2021-04-03 03:28:44,209:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 03:28:44,345:INFO:Initializing predict_model()
2021-04-03 03:28:44,345:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:28:44,346:INFO:Checking exceptions
2021-04-03 03:28:44,346:INFO:Preloading libraries
2021-04-03 03:28:44,623:INFO:create_model_container: 20
2021-04-03 03:28:44,624:INFO:master_model_container: 20
2021-04-03 03:28:44,624:INFO:display_container: 5
2021-04-03 03:28:44,625:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:28:44,625:INFO:finalize_model() succesfully completed......................................
2021-04-03 03:28:44,735:INFO:Initializing predict_model()
2021-04-03 03:28:44,735:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:28:44,735:INFO:Checking exceptions
2021-04-03 03:28:44,736:INFO:Preloading libraries
2021-04-03 03:28:44,736:INFO:Preparing display monitor
2021-04-03 03:28:44,893:INFO:Initializing predict_model()
2021-04-03 03:28:44,894:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:28:44,894:INFO:Checking exceptions
2021-04-03 03:28:44,894:INFO:Preloading libraries
2021-04-03 03:28:44,895:INFO:Preparing display monitor
2021-04-03 03:28:45,111:INFO:Initializing save_model()
2021-04-03 03:28:45,111:INFO:save_model(model=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), model_name=saved_models/best_3rd_model_to_predict_CollegeEnrollmentRate_LR, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2021-04-03 03:28:45,111:INFO:Adding model into prep_pipe
2021-04-03 03:28:45,164:INFO:saved_models/best_3rd_model_to_predict_CollegeEnrollmentRate_LR.pkl saved in current working directory
2021-04-03 03:28:45,181:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                                                 lambda_init=None, n_iter=300,
                                                 normalize=False,
                                                 power_transformer_method='box-cox',
                                                 power_transformer_standardize=True,
                                                 regressor=BayesianRidge(alpha_1=1e-06,
                                                                         alpha_2=1e-06,
                                                                         alpha_init=None,
                                                                         compute_score=False,
                                                                         copy_X=True,
                                                                         fit_intercept=True,
                                                                         lambda_1=1e-06,
                                                                         lambda_2=1e-06,
                                                                         lambda_init=None,
                                                                         n_iter=300,
                                                                         normalize=False,
                                                                         tol=0.001,
                                                                         verbose=False),
                                                 tol=0.001, verbose=False)]],
         verbose=False)
2021-04-03 03:28:45,181:INFO:save_model() succesfully completed......................................
2021-04-03 03:28:45,473:INFO:PyCaret Supervised Module
2021-04-03 03:28:45,474:INFO:ML Usecase: regression
2021-04-03 03:28:45,474:INFO:version 2.3.0
2021-04-03 03:28:45,474:INFO:Initializing setup()
2021-04-03 03:28:45,474:INFO:setup(target=College Enrollment Rate, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 03:28:45,474:INFO:Checking environment
2021-04-03 03:28:45,474:INFO:python_version: 3.9.1
2021-04-03 03:28:45,475:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 03:28:45,475:INFO:machine: AMD64
2021-04-03 03:28:45,475:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 03:28:45,478:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 03:28:45,479:INFO:Checking libraries
2021-04-03 03:28:45,479:INFO:pd==1.2.2
2021-04-03 03:28:45,479:INFO:numpy==1.19.5
2021-04-03 03:28:45,479:INFO:sklearn==0.23.2
2021-04-03 03:28:45,479:INFO:lightgbm==3.1.1
2021-04-03 03:28:45,481:WARNING:catboost not found
2021-04-03 03:28:45,481:INFO:xgboost==1.3.3
2021-04-03 03:28:45,482:INFO:mlflow==1.14.1
2021-04-03 03:28:45,482:INFO:Checking Exceptions
2021-04-03 03:28:45,482:INFO:Declaring global variables
2021-04-03 03:28:45,482:INFO:USI: 32a6
2021-04-03 03:28:45,483:INFO:pycaret_globals: {'fold_shuffle_param', 'transform_target_method_param', 'gpu_param', 'master_model_container', 'transform_target_param', '_all_metrics', '_ml_usecase', 'exp_name_log', 'fix_imbalance_param', 'fold_param', 'imputation_classifier', '_all_models', 'X', '_all_models_internal', 'stratify_param', 'imputation_regressor', 'fix_imbalance_method_param', 'display_container', 'X_train', 'fold_generator', 'X_test', 'fold_groups_param', 'pycaret_globals', 'seed', '_available_plots', 'logging_param', 'experiment__', 'y_train', 'n_jobs_param', 'USI', 'y_test', 'y', 'html_param', 'log_plots_param', 'data_before_preprocess', 'create_model_container', 'iterative_imputation_iters_param', '_gpu_n_jobs_param', '_internal_pipeline', 'target_param', 'prep_pipe'}
2021-04-03 03:28:45,483:INFO:Preparing display monitor
2021-04-03 03:28:45,483:INFO:Preparing display monitor
2021-04-03 03:28:45,526:INFO:Importing libraries
2021-04-03 03:28:45,527:INFO:Copying data for preprocessing
2021-04-03 03:28:45,547:INFO:Declaring preprocessing parameters
2021-04-03 03:28:45,550:INFO:Creating preprocessing pipeline
2021-04-03 03:28:45,564:INFO:Preprocessing pipeline created successfully
2021-04-03 03:28:45,564:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 03:28:45,565:INFO:Creating global containers
2021-04-03 03:28:45,565:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 03:31:09,402:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 03:31:09,531:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 03:31:09,531:INFO:Creating grid variables
2021-04-03 03:31:09,549:INFO:Logging experiment in MLFlow
2021-04-03 03:31:09,553:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-03 03:31:09,555:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-03 03:31:09,703:INFO:SubProcess save_model() called ==================================
2021-04-03 03:31:09,717:INFO:Initializing save_model()
2021-04-03 03:31:09,717:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 03:31:09,717:INFO:Adding model into prep_pipe
2021-04-03 03:31:09,718:WARNING:Only Model saved as it was a pipeline.
2021-04-03 03:31:09,737:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 03:31:09,742:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 03:31:09,742:INFO:save_model() succesfully completed......................................
2021-04-03 03:31:09,833:INFO:SubProcess save_model() end ==================================
2021-04-03 03:31:09,912:INFO:create_model_container: 0
2021-04-03 03:31:09,913:INFO:master_model_container: 0
2021-04-03 03:31:09,913:INFO:display_container: 1
2021-04-03 03:31:09,921:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 03:31:09,921:INFO:setup() succesfully completed......................................
2021-04-03 03:31:10,039:INFO:Initializing compare_models()
2021-04-03 03:31:10,039:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-03 03:31:10,039:INFO:Checking exceptions
2021-04-03 03:31:10,040:INFO:Preparing display monitor
2021-04-03 03:31:10,040:INFO:Preparing display monitor
2021-04-03 03:31:10,087:INFO:Initializing Linear Regression
2021-04-03 03:31:10,087:INFO:Total runtime is 0.0 minutes
2021-04-03 03:31:10,105:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:10,106:INFO:Initializing create_model()
2021-04-03 03:31:10,106:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:10,106:INFO:Checking exceptions
2021-04-03 03:31:10,107:INFO:Importing libraries
2021-04-03 03:31:10,107:INFO:Copying training dataset
2021-04-03 03:31:10,107:INFO:Defining folds
2021-04-03 03:31:10,108:INFO:Declaring metric variables
2021-04-03 03:31:10,125:INFO:Importing untrained model
2021-04-03 03:31:10,139:INFO:Linear Regression Imported succesfully
2021-04-03 03:31:10,175:INFO:Starting cross validation
2021-04-03 03:31:10,176:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:10,436:INFO:Calculating mean and std
2021-04-03 03:31:10,437:INFO:Creating metrics dataframe
2021-04-03 03:31:10,447:INFO:Uploading results into container
2021-04-03 03:31:10,447:INFO:Uploading model into container now
2021-04-03 03:31:10,447:INFO:create_model_container: 1
2021-04-03 03:31:10,448:INFO:master_model_container: 1
2021-04-03 03:31:10,448:INFO:display_container: 2
2021-04-03 03:31:10,449:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 03:31:10,449:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:10,607:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:10,607:INFO:Creating metrics dataframe
2021-04-03 03:31:10,655:INFO:Initializing Lasso Regression
2021-04-03 03:31:10,656:INFO:Total runtime is 0.009484732151031494 minutes
2021-04-03 03:31:10,672:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:10,673:INFO:Initializing create_model()
2021-04-03 03:31:10,674:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:10,674:INFO:Checking exceptions
2021-04-03 03:31:10,674:INFO:Importing libraries
2021-04-03 03:31:10,674:INFO:Copying training dataset
2021-04-03 03:31:10,676:INFO:Defining folds
2021-04-03 03:31:10,676:INFO:Declaring metric variables
2021-04-03 03:31:10,697:INFO:Importing untrained model
2021-04-03 03:31:10,735:INFO:Lasso Regression Imported succesfully
2021-04-03 03:31:10,789:INFO:Starting cross validation
2021-04-03 03:31:10,791:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:10,934:INFO:Calculating mean and std
2021-04-03 03:31:10,935:INFO:Creating metrics dataframe
2021-04-03 03:31:10,942:INFO:Uploading results into container
2021-04-03 03:31:10,943:INFO:Uploading model into container now
2021-04-03 03:31:10,943:INFO:create_model_container: 2
2021-04-03 03:31:10,943:INFO:master_model_container: 2
2021-04-03 03:31:10,944:INFO:display_container: 2
2021-04-03 03:31:10,946:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 03:31:10,947:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:11,097:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:11,098:INFO:Creating metrics dataframe
2021-04-03 03:31:11,128:INFO:Initializing Ridge Regression
2021-04-03 03:31:11,128:INFO:Total runtime is 0.017352143923441567 minutes
2021-04-03 03:31:11,144:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:11,145:INFO:Initializing create_model()
2021-04-03 03:31:11,146:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:11,146:INFO:Checking exceptions
2021-04-03 03:31:11,147:INFO:Importing libraries
2021-04-03 03:31:11,147:INFO:Copying training dataset
2021-04-03 03:31:11,150:INFO:Defining folds
2021-04-03 03:31:11,150:INFO:Declaring metric variables
2021-04-03 03:31:11,168:INFO:Importing untrained model
2021-04-03 03:31:11,199:INFO:Ridge Regression Imported succesfully
2021-04-03 03:31:11,240:INFO:Starting cross validation
2021-04-03 03:31:11,241:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:11,362:INFO:Calculating mean and std
2021-04-03 03:31:11,364:INFO:Creating metrics dataframe
2021-04-03 03:31:11,373:INFO:Uploading results into container
2021-04-03 03:31:11,373:INFO:Uploading model into container now
2021-04-03 03:31:11,373:INFO:create_model_container: 3
2021-04-03 03:31:11,375:INFO:master_model_container: 3
2021-04-03 03:31:11,375:INFO:display_container: 2
2021-04-03 03:31:11,377:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 03:31:11,377:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:11,505:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:11,505:INFO:Creating metrics dataframe
2021-04-03 03:31:11,539:INFO:Initializing Elastic Net
2021-04-03 03:31:11,539:INFO:Total runtime is 0.024202048778533932 minutes
2021-04-03 03:31:11,565:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:11,566:INFO:Initializing create_model()
2021-04-03 03:31:11,566:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:11,566:INFO:Checking exceptions
2021-04-03 03:31:11,566:INFO:Importing libraries
2021-04-03 03:31:11,567:INFO:Copying training dataset
2021-04-03 03:31:11,568:INFO:Defining folds
2021-04-03 03:31:11,568:INFO:Declaring metric variables
2021-04-03 03:31:11,580:INFO:Importing untrained model
2021-04-03 03:31:11,596:INFO:Elastic Net Imported succesfully
2021-04-03 03:31:11,630:INFO:Starting cross validation
2021-04-03 03:31:11,631:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:11,931:INFO:Calculating mean and std
2021-04-03 03:31:11,933:INFO:Creating metrics dataframe
2021-04-03 03:31:11,943:INFO:Uploading results into container
2021-04-03 03:31:11,944:INFO:Uploading model into container now
2021-04-03 03:31:11,944:INFO:create_model_container: 4
2021-04-03 03:31:11,944:INFO:master_model_container: 4
2021-04-03 03:31:11,945:INFO:display_container: 2
2021-04-03 03:31:11,947:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 03:31:11,948:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:12,098:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:12,098:INFO:Creating metrics dataframe
2021-04-03 03:31:12,134:INFO:Initializing Least Angle Regression
2021-04-03 03:31:12,135:INFO:Total runtime is 0.03413480122884114 minutes
2021-04-03 03:31:12,154:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:12,155:INFO:Initializing create_model()
2021-04-03 03:31:12,155:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:12,155:INFO:Checking exceptions
2021-04-03 03:31:12,155:INFO:Importing libraries
2021-04-03 03:31:12,155:INFO:Copying training dataset
2021-04-03 03:31:12,156:INFO:Defining folds
2021-04-03 03:31:12,156:INFO:Declaring metric variables
2021-04-03 03:31:12,166:INFO:Importing untrained model
2021-04-03 03:31:12,175:INFO:Least Angle Regression Imported succesfully
2021-04-03 03:31:12,202:INFO:Starting cross validation
2021-04-03 03:31:12,203:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:15,134:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-03 03:31:15,135:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 03:31:15,135:INFO:Initializing create_model()
2021-04-03 03:31:15,135:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:15,135:INFO:Checking exceptions
2021-04-03 03:31:15,135:INFO:Importing libraries
2021-04-03 03:31:15,136:INFO:Copying training dataset
2021-04-03 03:31:15,137:INFO:Defining folds
2021-04-03 03:31:15,137:INFO:Declaring metric variables
2021-04-03 03:31:15,159:INFO:Importing untrained model
2021-04-03 03:31:15,179:INFO:Least Angle Regression Imported succesfully
2021-04-03 03:31:15,217:INFO:Starting cross validation
2021-04-03 03:31:15,217:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:23,467:ERROR:create_model() for lar raised an exception:
2021-04-03 03:31:23,470:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 03:31:23,471:INFO:Initializing Lasso Least Angle Regression
2021-04-03 03:31:23,471:INFO:Total runtime is 0.22307218313217161 minutes
2021-04-03 03:31:23,490:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:23,491:INFO:Initializing create_model()
2021-04-03 03:31:23,491:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:23,491:INFO:Checking exceptions
2021-04-03 03:31:23,491:INFO:Importing libraries
2021-04-03 03:31:23,491:INFO:Copying training dataset
2021-04-03 03:31:23,493:INFO:Defining folds
2021-04-03 03:31:23,493:INFO:Declaring metric variables
2021-04-03 03:31:23,508:INFO:Importing untrained model
2021-04-03 03:31:23,526:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-03 03:31:23,559:INFO:Starting cross validation
2021-04-03 03:31:23,560:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:30,244:INFO:Calculating mean and std
2021-04-03 03:31:30,245:INFO:Creating metrics dataframe
2021-04-03 03:31:30,251:INFO:Uploading results into container
2021-04-03 03:31:30,251:INFO:Uploading model into container now
2021-04-03 03:31:30,251:INFO:create_model_container: 5
2021-04-03 03:31:30,251:INFO:master_model_container: 5
2021-04-03 03:31:30,252:INFO:display_container: 2
2021-04-03 03:31:30,253:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-03 03:31:30,253:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:30,356:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:30,356:INFO:Creating metrics dataframe
2021-04-03 03:31:30,374:INFO:Initializing Orthogonal Matching Pursuit
2021-04-03 03:31:30,375:INFO:Total runtime is 0.3381429155667623 minutes
2021-04-03 03:31:30,388:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:30,388:INFO:Initializing create_model()
2021-04-03 03:31:30,388:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:30,389:INFO:Checking exceptions
2021-04-03 03:31:30,389:INFO:Importing libraries
2021-04-03 03:31:30,389:INFO:Copying training dataset
2021-04-03 03:31:30,390:INFO:Defining folds
2021-04-03 03:31:30,390:INFO:Declaring metric variables
2021-04-03 03:31:30,406:INFO:Importing untrained model
2021-04-03 03:31:30,420:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-03 03:31:30,455:INFO:Starting cross validation
2021-04-03 03:31:30,456:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:30,553:INFO:Calculating mean and std
2021-04-03 03:31:30,555:INFO:Creating metrics dataframe
2021-04-03 03:31:30,566:INFO:Uploading results into container
2021-04-03 03:31:30,566:INFO:Uploading model into container now
2021-04-03 03:31:30,566:INFO:create_model_container: 6
2021-04-03 03:31:30,566:INFO:master_model_container: 6
2021-04-03 03:31:30,567:INFO:display_container: 2
2021-04-03 03:31:30,567:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-03 03:31:30,568:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:30,684:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:30,684:INFO:Creating metrics dataframe
2021-04-03 03:31:30,717:INFO:Initializing Bayesian Ridge
2021-04-03 03:31:30,717:INFO:Total runtime is 0.34383563200632733 minutes
2021-04-03 03:31:30,730:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:30,731:INFO:Initializing create_model()
2021-04-03 03:31:30,731:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:30,731:INFO:Checking exceptions
2021-04-03 03:31:30,731:INFO:Importing libraries
2021-04-03 03:31:30,732:INFO:Copying training dataset
2021-04-03 03:31:30,733:INFO:Defining folds
2021-04-03 03:31:30,734:INFO:Declaring metric variables
2021-04-03 03:31:30,743:INFO:Importing untrained model
2021-04-03 03:31:30,766:INFO:Bayesian Ridge Imported succesfully
2021-04-03 03:31:30,793:INFO:Starting cross validation
2021-04-03 03:31:30,793:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:30,882:INFO:Calculating mean and std
2021-04-03 03:31:30,884:INFO:Creating metrics dataframe
2021-04-03 03:31:30,892:INFO:Uploading results into container
2021-04-03 03:31:30,892:INFO:Uploading model into container now
2021-04-03 03:31:30,893:INFO:create_model_container: 7
2021-04-03 03:31:30,893:INFO:master_model_container: 7
2021-04-03 03:31:30,893:INFO:display_container: 2
2021-04-03 03:31:30,895:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:31:30,896:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:31,018:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:31,018:INFO:Creating metrics dataframe
2021-04-03 03:31:31,055:INFO:Initializing Passive Aggressive Regressor
2021-04-03 03:31:31,055:INFO:Total runtime is 0.34948052565256754 minutes
2021-04-03 03:31:31,066:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:31,066:INFO:Initializing create_model()
2021-04-03 03:31:31,067:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:31,067:INFO:Checking exceptions
2021-04-03 03:31:31,067:INFO:Importing libraries
2021-04-03 03:31:31,067:INFO:Copying training dataset
2021-04-03 03:31:31,068:INFO:Defining folds
2021-04-03 03:31:31,068:INFO:Declaring metric variables
2021-04-03 03:31:31,078:INFO:Importing untrained model
2021-04-03 03:31:31,094:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-03 03:31:31,119:INFO:Starting cross validation
2021-04-03 03:31:31,120:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:31,230:INFO:Calculating mean and std
2021-04-03 03:31:31,232:INFO:Creating metrics dataframe
2021-04-03 03:31:31,241:INFO:Uploading results into container
2021-04-03 03:31:31,241:INFO:Uploading model into container now
2021-04-03 03:31:31,242:INFO:create_model_container: 8
2021-04-03 03:31:31,242:INFO:master_model_container: 8
2021-04-03 03:31:31,243:INFO:display_container: 2
2021-04-03 03:31:31,245:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:31:31,246:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:31,422:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:31,422:INFO:Creating metrics dataframe
2021-04-03 03:31:31,448:INFO:Initializing Huber Regressor
2021-04-03 03:31:31,448:INFO:Total runtime is 0.3560154438018799 minutes
2021-04-03 03:31:31,470:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:31,471:INFO:Initializing create_model()
2021-04-03 03:31:31,472:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:31,472:INFO:Checking exceptions
2021-04-03 03:31:31,472:INFO:Importing libraries
2021-04-03 03:31:31,472:INFO:Copying training dataset
2021-04-03 03:31:31,474:INFO:Defining folds
2021-04-03 03:31:31,474:INFO:Declaring metric variables
2021-04-03 03:31:31,487:INFO:Importing untrained model
2021-04-03 03:31:31,498:INFO:Huber Regressor Imported succesfully
2021-04-03 03:31:31,524:INFO:Starting cross validation
2021-04-03 03:31:31,524:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:31,791:INFO:Calculating mean and std
2021-04-03 03:31:31,793:INFO:Creating metrics dataframe
2021-04-03 03:31:31,802:INFO:Uploading results into container
2021-04-03 03:31:31,802:INFO:Uploading model into container now
2021-04-03 03:31:31,802:INFO:create_model_container: 9
2021-04-03 03:31:31,803:INFO:master_model_container: 9
2021-04-03 03:31:31,803:INFO:display_container: 2
2021-04-03 03:31:31,805:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 03:31:31,805:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:31,934:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:31,935:INFO:Creating metrics dataframe
2021-04-03 03:31:31,967:INFO:Initializing K Neighbors Regressor
2021-04-03 03:31:31,968:INFO:Total runtime is 0.3646841049194336 minutes
2021-04-03 03:31:31,980:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:31,980:INFO:Initializing create_model()
2021-04-03 03:31:31,980:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:31,980:INFO:Checking exceptions
2021-04-03 03:31:31,980:INFO:Importing libraries
2021-04-03 03:31:31,981:INFO:Copying training dataset
2021-04-03 03:31:31,985:INFO:Defining folds
2021-04-03 03:31:31,985:INFO:Declaring metric variables
2021-04-03 03:31:32,005:INFO:Importing untrained model
2021-04-03 03:31:32,019:INFO:K Neighbors Regressor Imported succesfully
2021-04-03 03:31:32,039:INFO:Starting cross validation
2021-04-03 03:31:32,040:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:32,170:INFO:Calculating mean and std
2021-04-03 03:31:32,172:INFO:Creating metrics dataframe
2021-04-03 03:31:32,183:INFO:Uploading results into container
2021-04-03 03:31:32,185:INFO:Uploading model into container now
2021-04-03 03:31:32,185:INFO:create_model_container: 10
2021-04-03 03:31:32,185:INFO:master_model_container: 10
2021-04-03 03:31:32,185:INFO:display_container: 2
2021-04-03 03:31:32,186:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-03 03:31:32,186:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:32,293:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:32,294:INFO:Creating metrics dataframe
2021-04-03 03:31:32,322:INFO:Initializing Decision Tree Regressor
2021-04-03 03:31:32,323:INFO:Total runtime is 0.3706150015195211 minutes
2021-04-03 03:31:32,339:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:32,340:INFO:Initializing create_model()
2021-04-03 03:31:32,340:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:32,340:INFO:Checking exceptions
2021-04-03 03:31:32,340:INFO:Importing libraries
2021-04-03 03:31:32,340:INFO:Copying training dataset
2021-04-03 03:31:32,342:INFO:Defining folds
2021-04-03 03:31:32,342:INFO:Declaring metric variables
2021-04-03 03:31:32,366:INFO:Importing untrained model
2021-04-03 03:31:32,375:INFO:Decision Tree Regressor Imported succesfully
2021-04-03 03:31:32,400:INFO:Starting cross validation
2021-04-03 03:31:32,401:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:32,541:INFO:Calculating mean and std
2021-04-03 03:31:32,544:INFO:Creating metrics dataframe
2021-04-03 03:31:32,555:INFO:Uploading results into container
2021-04-03 03:31:32,555:INFO:Uploading model into container now
2021-04-03 03:31:32,555:INFO:create_model_container: 11
2021-04-03 03:31:32,556:INFO:master_model_container: 11
2021-04-03 03:31:32,556:INFO:display_container: 2
2021-04-03 03:31:32,558:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-03 03:31:32,558:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:32,723:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:32,723:INFO:Creating metrics dataframe
2021-04-03 03:31:32,752:INFO:Initializing Random Forest Regressor
2021-04-03 03:31:32,753:INFO:Total runtime is 0.37777071793874106 minutes
2021-04-03 03:31:32,773:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:32,773:INFO:Initializing create_model()
2021-04-03 03:31:32,773:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:32,773:INFO:Checking exceptions
2021-04-03 03:31:32,773:INFO:Importing libraries
2021-04-03 03:31:32,774:INFO:Copying training dataset
2021-04-03 03:31:32,775:INFO:Defining folds
2021-04-03 03:31:32,775:INFO:Declaring metric variables
2021-04-03 03:31:32,790:INFO:Importing untrained model
2021-04-03 03:31:32,802:INFO:Random Forest Regressor Imported succesfully
2021-04-03 03:31:32,830:INFO:Starting cross validation
2021-04-03 03:31:32,831:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:34,009:INFO:Calculating mean and std
2021-04-03 03:31:34,011:INFO:Creating metrics dataframe
2021-04-03 03:31:34,019:INFO:Uploading results into container
2021-04-03 03:31:34,019:INFO:Uploading model into container now
2021-04-03 03:31:34,020:INFO:create_model_container: 12
2021-04-03 03:31:34,020:INFO:master_model_container: 12
2021-04-03 03:31:34,020:INFO:display_container: 2
2021-04-03 03:31:34,024:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 03:31:34,024:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:34,173:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:34,173:INFO:Creating metrics dataframe
2021-04-03 03:31:34,211:INFO:Initializing Extra Trees Regressor
2021-04-03 03:31:34,211:INFO:Total runtime is 0.40207535425821944 minutes
2021-04-03 03:31:34,227:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:34,227:INFO:Initializing create_model()
2021-04-03 03:31:34,227:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:34,227:INFO:Checking exceptions
2021-04-03 03:31:34,227:INFO:Importing libraries
2021-04-03 03:31:34,228:INFO:Copying training dataset
2021-04-03 03:31:34,229:INFO:Defining folds
2021-04-03 03:31:34,229:INFO:Declaring metric variables
2021-04-03 03:31:34,240:INFO:Importing untrained model
2021-04-03 03:31:34,262:INFO:Extra Trees Regressor Imported succesfully
2021-04-03 03:31:34,289:INFO:Starting cross validation
2021-04-03 03:31:34,290:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:35,287:INFO:Calculating mean and std
2021-04-03 03:31:35,289:INFO:Creating metrics dataframe
2021-04-03 03:31:35,295:INFO:Uploading results into container
2021-04-03 03:31:35,295:INFO:Uploading model into container now
2021-04-03 03:31:35,296:INFO:create_model_container: 13
2021-04-03 03:31:35,296:INFO:master_model_container: 13
2021-04-03 03:31:35,296:INFO:display_container: 2
2021-04-03 03:31:35,298:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 03:31:35,299:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:35,445:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:35,445:INFO:Creating metrics dataframe
2021-04-03 03:31:35,487:INFO:Initializing AdaBoost Regressor
2021-04-03 03:31:35,487:INFO:Total runtime is 0.42334190607070926 minutes
2021-04-03 03:31:35,501:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:35,502:INFO:Initializing create_model()
2021-04-03 03:31:35,502:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:35,502:INFO:Checking exceptions
2021-04-03 03:31:35,502:INFO:Importing libraries
2021-04-03 03:31:35,502:INFO:Copying training dataset
2021-04-03 03:31:35,503:INFO:Defining folds
2021-04-03 03:31:35,503:INFO:Declaring metric variables
2021-04-03 03:31:35,513:INFO:Importing untrained model
2021-04-03 03:31:35,528:INFO:AdaBoost Regressor Imported succesfully
2021-04-03 03:31:35,566:INFO:Starting cross validation
2021-04-03 03:31:35,567:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:35,946:INFO:Calculating mean and std
2021-04-03 03:31:35,949:INFO:Creating metrics dataframe
2021-04-03 03:31:35,958:INFO:Uploading results into container
2021-04-03 03:31:35,958:INFO:Uploading model into container now
2021-04-03 03:31:35,958:INFO:create_model_container: 14
2021-04-03 03:31:35,958:INFO:master_model_container: 14
2021-04-03 03:31:35,959:INFO:display_container: 2
2021-04-03 03:31:35,960:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-03 03:31:35,960:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:36,090:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:36,090:INFO:Creating metrics dataframe
2021-04-03 03:31:36,123:INFO:Initializing Gradient Boosting Regressor
2021-04-03 03:31:36,123:INFO:Total runtime is 0.43393467267354335 minutes
2021-04-03 03:31:36,135:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:36,135:INFO:Initializing create_model()
2021-04-03 03:31:36,136:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:36,136:INFO:Checking exceptions
2021-04-03 03:31:36,136:INFO:Importing libraries
2021-04-03 03:31:36,136:INFO:Copying training dataset
2021-04-03 03:31:36,137:INFO:Defining folds
2021-04-03 03:31:36,137:INFO:Declaring metric variables
2021-04-03 03:31:36,151:INFO:Importing untrained model
2021-04-03 03:31:36,171:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 03:31:36,195:INFO:Starting cross validation
2021-04-03 03:31:36,196:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:36,644:INFO:Calculating mean and std
2021-04-03 03:31:36,646:INFO:Creating metrics dataframe
2021-04-03 03:31:36,655:INFO:Uploading results into container
2021-04-03 03:31:36,655:INFO:Uploading model into container now
2021-04-03 03:31:36,656:INFO:create_model_container: 15
2021-04-03 03:31:36,656:INFO:master_model_container: 15
2021-04-03 03:31:36,656:INFO:display_container: 2
2021-04-03 03:31:36,659:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 03:31:36,660:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:36,776:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:36,776:INFO:Creating metrics dataframe
2021-04-03 03:31:36,803:INFO:Initializing Extreme Gradient Boosting
2021-04-03 03:31:36,804:INFO:Total runtime is 0.44529169797897344 minutes
2021-04-03 03:31:36,822:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:36,822:INFO:Initializing create_model()
2021-04-03 03:31:36,822:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:36,823:INFO:Checking exceptions
2021-04-03 03:31:36,823:INFO:Importing libraries
2021-04-03 03:31:36,823:INFO:Copying training dataset
2021-04-03 03:31:36,826:INFO:Defining folds
2021-04-03 03:31:36,826:INFO:Declaring metric variables
2021-04-03 03:31:36,841:INFO:Importing untrained model
2021-04-03 03:31:36,852:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 03:31:36,876:INFO:Starting cross validation
2021-04-03 03:31:36,877:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:39,544:INFO:Calculating mean and std
2021-04-03 03:31:39,546:INFO:Creating metrics dataframe
2021-04-03 03:31:39,555:INFO:Uploading results into container
2021-04-03 03:31:39,555:INFO:Uploading model into container now
2021-04-03 03:31:39,556:INFO:create_model_container: 16
2021-04-03 03:31:39,556:INFO:master_model_container: 16
2021-04-03 03:31:39,556:INFO:display_container: 2
2021-04-03 03:31:39,562:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 03:31:39,562:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:39,691:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:39,691:INFO:Creating metrics dataframe
2021-04-03 03:31:39,725:INFO:Initializing Light Gradient Boosting Machine
2021-04-03 03:31:39,725:INFO:Total runtime is 0.49397044976552335 minutes
2021-04-03 03:31:39,737:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:39,738:INFO:Initializing create_model()
2021-04-03 03:31:39,738:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBA6DAC0>, kwargs={})
2021-04-03 03:31:39,738:INFO:Checking exceptions
2021-04-03 03:31:39,738:INFO:Importing libraries
2021-04-03 03:31:39,738:INFO:Copying training dataset
2021-04-03 03:31:39,740:INFO:Defining folds
2021-04-03 03:31:39,740:INFO:Declaring metric variables
2021-04-03 03:31:39,754:INFO:Importing untrained model
2021-04-03 03:31:39,769:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-03 03:31:39,806:INFO:Starting cross validation
2021-04-03 03:31:39,806:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:40,799:INFO:Calculating mean and std
2021-04-03 03:31:40,801:INFO:Creating metrics dataframe
2021-04-03 03:31:40,810:INFO:Uploading results into container
2021-04-03 03:31:40,810:INFO:Uploading model into container now
2021-04-03 03:31:40,810:INFO:create_model_container: 17
2021-04-03 03:31:40,810:INFO:master_model_container: 17
2021-04-03 03:31:40,811:INFO:display_container: 2
2021-04-03 03:31:40,815:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-03 03:31:40,815:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:40,940:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:40,940:INFO:Creating metrics dataframe
2021-04-03 03:31:40,994:INFO:Initializing create_model()
2021-04-03 03:31:40,994:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:31:40,995:INFO:Checking exceptions
2021-04-03 03:31:40,995:INFO:Importing libraries
2021-04-03 03:31:40,995:INFO:Copying training dataset
2021-04-03 03:31:40,996:INFO:Defining folds
2021-04-03 03:31:40,996:INFO:Declaring metric variables
2021-04-03 03:31:40,996:INFO:Importing untrained model
2021-04-03 03:31:40,996:INFO:Declaring custom model
2021-04-03 03:31:40,998:INFO:Bayesian Ridge Imported succesfully
2021-04-03 03:31:40,999:INFO:Cross validation set to False
2021-04-03 03:31:40,999:INFO:Fitting Model
2021-04-03 03:31:41,008:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:31:41,008:INFO:create_models() succesfully completed......................................
2021-04-03 03:31:41,139:INFO:Creating MLFlow logs
2021-04-03 03:31:41,156:INFO:Model: Bayesian Ridge
2021-04-03 03:31:41,220:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 03:31:41,391:INFO:Initializing predict_model()
2021-04-03 03:31:41,391:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:31:41,391:INFO:Checking exceptions
2021-04-03 03:31:41,391:INFO:Preloading libraries
2021-04-03 03:31:41,677:INFO:Creating MLFlow logs
2021-04-03 03:31:41,692:INFO:Model: Ridge Regression
2021-04-03 03:31:41,739:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 03:31:42,001:INFO:Creating MLFlow logs
2021-04-03 03:31:42,014:INFO:Model: Linear Regression
2021-04-03 03:31:42,053:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 03:31:42,326:INFO:Creating MLFlow logs
2021-04-03 03:31:42,340:INFO:Model: Huber Regressor
2021-04-03 03:31:42,403:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 03:31:42,705:INFO:Creating MLFlow logs
2021-04-03 03:31:42,719:INFO:Model: Random Forest Regressor
2021-04-03 03:31:42,766:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 03:31:43,028:INFO:Creating MLFlow logs
2021-04-03 03:31:43,041:INFO:Model: AdaBoost Regressor
2021-04-03 03:31:43,097:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-03 03:31:43,365:INFO:Creating MLFlow logs
2021-04-03 03:31:43,377:INFO:Model: Extra Trees Regressor
2021-04-03 03:31:43,422:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 03:31:43,733:INFO:Creating MLFlow logs
2021-04-03 03:31:43,745:INFO:Model: Gradient Boosting Regressor
2021-04-03 03:31:43,795:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:31:44,114:INFO:Creating MLFlow logs
2021-04-03 03:31:44,130:INFO:Model: Light Gradient Boosting Machine
2021-04-03 03:31:44,178:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-03 03:31:44,475:INFO:Creating MLFlow logs
2021-04-03 03:31:44,489:INFO:Model: Extreme Gradient Boosting
2021-04-03 03:31:44,552:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-03 03:31:44,893:INFO:Creating MLFlow logs
2021-04-03 03:31:44,904:INFO:Model: Decision Tree Regressor
2021-04-03 03:31:44,955:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-03 03:31:45,242:INFO:Creating MLFlow logs
2021-04-03 03:31:45,270:INFO:Model: Orthogonal Matching Pursuit
2021-04-03 03:31:45,335:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-03 03:31:45,608:INFO:Creating MLFlow logs
2021-04-03 03:31:45,622:INFO:Model: K Neighbors Regressor
2021-04-03 03:31:45,694:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-03 03:31:45,972:INFO:Creating MLFlow logs
2021-04-03 03:31:45,988:INFO:Model: Passive Aggressive Regressor
2021-04-03 03:31:46,044:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 03:31:46,317:INFO:Creating MLFlow logs
2021-04-03 03:31:46,329:INFO:Model: Elastic Net
2021-04-03 03:31:46,388:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 03:31:46,729:INFO:Creating MLFlow logs
2021-04-03 03:31:46,741:INFO:Model: Lasso Regression
2021-04-03 03:31:46,800:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 03:31:47,054:INFO:Creating MLFlow logs
2021-04-03 03:31:47,065:INFO:Model: Least Angle Regression
2021-04-03 03:31:47,110:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-03 03:31:47,457:INFO:create_model_container: 17
2021-04-03 03:31:47,457:INFO:master_model_container: 17
2021-04-03 03:31:47,457:INFO:display_container: 2
2021-04-03 03:31:47,459:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 03:31:47,459:INFO:compare_models() succesfully completed......................................
2021-04-03 03:31:47,479:INFO:Initializing create_model()
2021-04-03 03:31:47,480:INFO:create_model(estimator=huber, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-03 03:31:47,480:INFO:Checking exceptions
2021-04-03 03:31:47,481:INFO:Preparing display monitor
2021-04-03 03:31:47,520:INFO:Importing libraries
2021-04-03 03:31:47,521:INFO:Copying training dataset
2021-04-03 03:31:47,523:INFO:Defining folds
2021-04-03 03:31:47,524:INFO:Declaring metric variables
2021-04-03 03:31:47,536:INFO:Importing untrained model
2021-04-03 03:31:47,547:INFO:Huber Regressor Imported succesfully
2021-04-03 03:31:47,583:INFO:Starting cross validation
2021-04-03 03:31:47,585:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:48,054:INFO:Calculating mean and std
2021-04-03 03:31:48,056:INFO:Creating metrics dataframe
2021-04-03 03:31:48,076:INFO:Finalizing model
2021-04-03 03:31:48,135:INFO:Creating MLFlow logs
2021-04-03 03:31:48,154:INFO:Model: Huber Regressor
2021-04-03 03:31:48,216:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 03:31:48,364:INFO:Initializing predict_model()
2021-04-03 03:31:48,364:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:31:48,364:INFO:Checking exceptions
2021-04-03 03:31:48,364:INFO:Preloading libraries
2021-04-03 03:31:48,729:INFO:Uploading results into container
2021-04-03 03:31:48,729:INFO:Uploading model into container now
2021-04-03 03:31:48,766:INFO:create_model_container: 18
2021-04-03 03:31:48,767:INFO:master_model_container: 18
2021-04-03 03:31:48,768:INFO:display_container: 3
2021-04-03 03:31:48,771:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 03:31:48,771:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:48,943:INFO:Initializing tune_model()
2021-04-03 03:31:48,943:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-03 03:31:48,943:INFO:Checking exceptions
2021-04-03 03:31:48,944:INFO:Preparing display monitor
2021-04-03 03:31:48,987:INFO:Copying training dataset
2021-04-03 03:31:48,988:INFO:Checking base model
2021-04-03 03:31:48,989:INFO:Base model : Huber Regressor
2021-04-03 03:31:49,004:INFO:Declaring metric variables
2021-04-03 03:31:49,020:INFO:Defining Hyperparameters
2021-04-03 03:31:49,136:INFO:Tuning with n_jobs=-1
2021-04-03 03:31:49,136:INFO:Initializing RandomizedSearchCV
2021-04-03 03:31:50,494:INFO:best_params: {'actual_estimator__fit_intercept': False, 'actual_estimator__epsilon': 1.9, 'actual_estimator__alpha': 0.1}
2021-04-03 03:31:50,495:INFO:Hyperparameter search completed
2021-04-03 03:31:50,495:INFO:SubProcess create_model() called ==================================
2021-04-03 03:31:50,497:INFO:Initializing create_model()
2021-04-03 03:31:50,497:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FF67BAC0>, kwargs={'fit_intercept': False, 'epsilon': 1.9, 'alpha': 0.1})
2021-04-03 03:31:50,497:INFO:Checking exceptions
2021-04-03 03:31:50,497:INFO:Importing libraries
2021-04-03 03:31:50,497:INFO:Copying training dataset
2021-04-03 03:31:50,499:INFO:Defining folds
2021-04-03 03:31:50,499:INFO:Declaring metric variables
2021-04-03 03:31:50,510:INFO:Importing untrained model
2021-04-03 03:31:50,510:INFO:Declaring custom model
2021-04-03 03:31:50,529:INFO:Huber Regressor Imported succesfully
2021-04-03 03:31:50,561:INFO:Starting cross validation
2021-04-03 03:31:50,562:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:50,915:INFO:Calculating mean and std
2021-04-03 03:31:50,917:INFO:Creating metrics dataframe
2021-04-03 03:31:50,938:INFO:Finalizing model
2021-04-03 03:31:50,982:INFO:Uploading results into container
2021-04-03 03:31:50,982:INFO:Uploading model into container now
2021-04-03 03:31:50,982:INFO:create_model_container: 19
2021-04-03 03:31:50,982:INFO:master_model_container: 19
2021-04-03 03:31:50,982:INFO:display_container: 4
2021-04-03 03:31:50,984:INFO:PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 03:31:50,984:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:51,115:INFO:SubProcess create_model() end ==================================
2021-04-03 03:31:51,116:INFO:Creating MLFlow logs
2021-04-03 03:31:51,141:INFO:Model: Huber Regressor
2021-04-03 03:31:51,191:INFO:logged params: {'alpha': 0.1, 'epsilon': 1.9, 'fit_intercept': False, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 03:31:51,359:INFO:Initializing predict_model()
2021-04-03 03:31:51,359:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:31:51,359:INFO:Checking exceptions
2021-04-03 03:31:51,359:INFO:Preloading libraries
2021-04-03 03:31:51,735:INFO:create_model_container: 19
2021-04-03 03:31:51,736:INFO:master_model_container: 19
2021-04-03 03:31:51,736:INFO:display_container: 4
2021-04-03 03:31:51,736:INFO:PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 03:31:51,737:INFO:tune_model() succesfully completed......................................
2021-04-03 03:31:51,860:INFO:Initializing plot_model()
2021-04-03 03:31:51,861:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:31:51,861:INFO:Checking exceptions
2021-04-03 03:31:51,862:INFO:Preparing display monitor
2021-04-03 03:31:51,873:INFO:Preloading libraries
2021-04-03 03:31:51,876:INFO:Copying training dataset
2021-04-03 03:31:51,876:INFO:Copying test dataset
2021-04-03 03:31:51,876:INFO:Plot type: residuals
2021-04-03 03:31:51,927:INFO:Fitting Model
2021-04-03 03:31:51,970:INFO:Scoring test/hold-out set
2021-04-03 03:31:52,610:INFO:Visual Rendered Successfully
2021-04-03 03:31:52,705:INFO:plot_model() succesfully completed......................................
2021-04-03 03:31:52,721:INFO:Initializing plot_model()
2021-04-03 03:31:52,722:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:31:52,722:INFO:Checking exceptions
2021-04-03 03:31:52,722:INFO:Preparing display monitor
2021-04-03 03:31:52,739:INFO:Preloading libraries
2021-04-03 03:31:52,740:INFO:Copying training dataset
2021-04-03 03:31:52,741:INFO:Copying test dataset
2021-04-03 03:31:52,741:INFO:Plot type: error
2021-04-03 03:31:52,743:INFO:Fitting Model
2021-04-03 03:31:52,744:INFO:Scoring test/hold-out set
2021-04-03 03:31:53,147:INFO:Visual Rendered Successfully
2021-04-03 03:31:53,267:INFO:plot_model() succesfully completed......................................
2021-04-03 03:31:53,278:INFO:Initializing plot_model()
2021-04-03 03:31:53,278:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:31:53,278:INFO:Checking exceptions
2021-04-03 03:31:53,279:INFO:Preparing display monitor
2021-04-03 03:31:53,288:INFO:Preloading libraries
2021-04-03 03:31:53,292:INFO:Copying training dataset
2021-04-03 03:31:53,293:INFO:Copying test dataset
2021-04-03 03:31:53,293:INFO:Plot type: feature
2021-04-03 03:31:53,534:INFO:Visual Rendered Successfully
2021-04-03 03:31:53,633:INFO:plot_model() succesfully completed......................................
2021-04-03 03:31:53,672:INFO:Initializing evaluate_model()
2021-04-03 03:31:53,672:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-03 03:31:53,700:INFO:Initializing plot_model()
2021-04-03 03:31:53,701:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 03:31:53,701:INFO:Checking exceptions
2021-04-03 03:31:53,702:INFO:Preparing display monitor
2021-04-03 03:31:53,712:INFO:Preloading libraries
2021-04-03 03:31:53,716:INFO:Copying training dataset
2021-04-03 03:31:53,718:INFO:Copying test dataset
2021-04-03 03:31:53,719:INFO:Plot type: parameter
2021-04-03 03:31:53,728:INFO:Visual Rendered Successfully
2021-04-03 03:31:53,831:INFO:plot_model() succesfully completed......................................
2021-04-03 03:31:53,843:INFO:Initializing automl()
2021-04-03 03:31:53,843:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-03 03:31:53,844:INFO:Model Selection Basis : CV Results on Training set
2021-04-03 03:31:53,850:INFO:Initializing create_model()
2021-04-03 03:31:53,850:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:31:53,850:INFO:Checking exceptions
2021-04-03 03:31:53,850:INFO:Importing libraries
2021-04-03 03:31:53,851:INFO:Copying training dataset
2021-04-03 03:31:53,851:INFO:Defining folds
2021-04-03 03:31:53,851:INFO:Declaring metric variables
2021-04-03 03:31:53,852:INFO:Importing untrained model
2021-04-03 03:31:53,852:INFO:Declaring custom model
2021-04-03 03:31:53,854:INFO:Huber Regressor Imported succesfully
2021-04-03 03:31:53,854:INFO:Cross validation set to False
2021-04-03 03:31:53,854:INFO:Fitting Model
2021-04-03 03:31:53,903:INFO:PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 03:31:53,903:INFO:create_models() succesfully completed......................................
2021-04-03 03:31:54,016:INFO:PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 03:31:54,016:INFO:automl() succesfully completed......................................
2021-04-03 03:31:54,031:INFO:Initializing predict_model()
2021-04-03 03:31:54,031:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:31:54,032:INFO:Checking exceptions
2021-04-03 03:31:54,032:INFO:Preloading libraries
2021-04-03 03:31:54,032:INFO:Preparing display monitor
2021-04-03 03:31:54,203:INFO:Initializing finalize_model()
2021-04-03 03:31:54,203:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-03 03:31:54,205:INFO:Finalizing PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 03:31:54,207:INFO:Initializing create_model()
2021-04-03 03:31:54,207:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 03:31:54,207:INFO:Checking exceptions
2021-04-03 03:31:54,207:INFO:Importing libraries
2021-04-03 03:31:54,208:INFO:Copying training dataset
2021-04-03 03:31:54,208:INFO:Defining folds
2021-04-03 03:31:54,208:INFO:Declaring metric variables
2021-04-03 03:31:54,208:INFO:Importing untrained model
2021-04-03 03:31:54,209:INFO:Declaring custom model
2021-04-03 03:31:54,210:INFO:Huber Regressor Imported succesfully
2021-04-03 03:31:54,210:INFO:Starting cross validation
2021-04-03 03:31:54,211:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 03:31:54,562:INFO:Calculating mean and std
2021-04-03 03:31:54,563:INFO:Creating metrics dataframe
2021-04-03 03:31:54,567:INFO:Finalizing model
2021-04-03 03:31:54,609:INFO:Uploading results into container
2021-04-03 03:31:54,609:INFO:Uploading model into container now
2021-04-03 03:31:54,609:INFO:create_model_container: 20
2021-04-03 03:31:54,609:INFO:master_model_container: 20
2021-04-03 03:31:54,609:INFO:display_container: 6
2021-04-03 03:31:54,611:INFO:PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 03:31:54,611:INFO:create_model() succesfully completed......................................
2021-04-03 03:31:54,708:INFO:Creating MLFlow logs
2021-04-03 03:31:54,710:INFO:Model: Huber Regressor
2021-04-03 03:31:54,754:INFO:logged params: {'alpha': 0.1, 'epsilon': 1.9, 'fit_intercept': False, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 03:31:54,865:INFO:Initializing predict_model()
2021-04-03 03:31:54,865:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 03:31:54,866:INFO:Checking exceptions
2021-04-03 03:31:54,866:INFO:Preloading libraries
2021-04-03 03:31:55,150:INFO:create_model_container: 20
2021-04-03 03:31:55,151:INFO:master_model_container: 20
2021-04-03 03:31:55,151:INFO:display_container: 5
2021-04-03 03:31:55,153:INFO:PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 03:31:55,154:INFO:finalize_model() succesfully completed......................................
2021-04-03 03:31:55,286:INFO:Initializing predict_model()
2021-04-03 03:31:55,287:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:31:55,287:INFO:Checking exceptions
2021-04-03 03:31:55,287:INFO:Preloading libraries
2021-04-03 03:31:55,287:INFO:Preparing display monitor
2021-04-03 03:31:55,488:INFO:Initializing predict_model()
2021-04-03 03:31:55,488:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 03:31:55,488:INFO:Checking exceptions
2021-04-03 03:31:55,489:INFO:Preloading libraries
2021-04-03 03:31:55,489:INFO:Preparing display monitor
2021-04-03 03:31:55,771:INFO:Initializing save_model()
2021-04-03 03:31:55,771:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), model_name=saved_models/best_4th_model_to_predict_CollegeEnrollmentRate_Huber, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2021-04-03 03:31:55,771:INFO:Adding model into prep_pipe
2021-04-03 03:31:55,806:INFO:saved_models/best_4th_model_to_predict_CollegeEnrollmentRate_Huber.pkl saved in current working directory
2021-04-03 03:31:55,819:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                 PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                                 fit_intercept=True,
                                                 max_iter=None, normalize=False,
                                                 power_transformer_method='box-cox',
                                                 power_transformer_standardize=True,
                                                 random_state=786,
                                                 regressor=Ridge(alpha=1.0,
                                                                 copy_X=True,
                                                                 fit_intercept=True,
                                                                 max_iter=None,
                                                                 normalize=False,
                                                                 random_state=786,
                                                                 solver='auto',
                                                                 tol=0.001),
                                                 solver='auto', tol=0.001)]],
         verbose=False)
2021-04-03 03:31:55,820:INFO:save_model() succesfully completed......................................
2021-04-03 04:10:26,609:INFO:PyCaret Supervised Module
2021-04-03 04:10:26,610:INFO:ML Usecase: regression
2021-04-03 04:10:26,610:INFO:version 2.3.0
2021-04-03 04:10:26,610:INFO:Initializing setup()
2021-04-03 04:10:26,610:INFO:setup(target=Median income, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 04:10:26,610:INFO:Checking environment
2021-04-03 04:10:26,610:INFO:python_version: 3.9.1
2021-04-03 04:10:26,610:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 04:10:26,610:INFO:machine: AMD64
2021-04-03 04:10:26,610:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 04:10:26,612:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 04:10:26,612:INFO:Checking libraries
2021-04-03 04:10:26,613:INFO:pd==1.2.2
2021-04-03 04:10:26,613:INFO:numpy==1.19.5
2021-04-03 04:10:26,613:INFO:sklearn==0.23.2
2021-04-03 04:10:26,613:INFO:lightgbm==3.1.1
2021-04-03 04:10:26,614:WARNING:catboost not found
2021-04-03 04:10:26,615:INFO:xgboost==1.3.3
2021-04-03 04:10:26,617:INFO:mlflow==1.14.1
2021-04-03 04:10:26,618:INFO:Checking Exceptions
2021-04-03 04:10:26,619:INFO:Declaring global variables
2021-04-03 04:10:26,619:INFO:USI: 73c4
2021-04-03 04:10:26,619:INFO:pycaret_globals: {'fold_shuffle_param', 'transform_target_method_param', 'gpu_param', 'master_model_container', 'transform_target_param', '_all_metrics', '_ml_usecase', 'exp_name_log', 'fix_imbalance_param', 'fold_param', 'imputation_classifier', '_all_models', 'X', '_all_models_internal', 'stratify_param', 'imputation_regressor', 'fix_imbalance_method_param', 'display_container', 'X_train', 'fold_generator', 'X_test', 'fold_groups_param', 'pycaret_globals', 'seed', '_available_plots', 'logging_param', 'experiment__', 'y_train', 'n_jobs_param', 'USI', 'y_test', 'y', 'html_param', 'log_plots_param', 'data_before_preprocess', 'create_model_container', 'iterative_imputation_iters_param', '_gpu_n_jobs_param', '_internal_pipeline', 'target_param', 'prep_pipe'}
2021-04-03 04:10:26,619:INFO:Preparing display monitor
2021-04-03 04:10:26,620:INFO:Preparing display monitor
2021-04-03 04:10:26,640:INFO:Importing libraries
2021-04-03 04:10:26,642:INFO:Copying data for preprocessing
2021-04-03 04:10:26,659:INFO:Declaring preprocessing parameters
2021-04-03 04:10:26,661:INFO:Creating preprocessing pipeline
2021-04-03 04:10:26,672:INFO:Preprocessing pipeline created successfully
2021-04-03 04:10:26,673:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 04:10:26,673:INFO:Creating global containers
2021-04-03 04:10:26,673:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 04:10:29,391:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 04:10:29,537:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 04:10:29,538:INFO:Creating grid variables
2021-04-03 04:10:29,561:INFO:Logging experiment in MLFlow
2021-04-03 04:10:29,565:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-03 04:10:29,566:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-03 04:10:29,773:INFO:SubProcess save_model() called ==================================
2021-04-03 04:10:29,789:INFO:Initializing save_model()
2021-04-03 04:10:29,790:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 04:10:29,790:INFO:Adding model into prep_pipe
2021-04-03 04:10:29,793:WARNING:Only Model saved as it was a pipeline.
2021-04-03 04:10:29,821:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 04:10:29,828:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 04:10:29,828:INFO:save_model() succesfully completed......................................
2021-04-03 04:10:29,947:INFO:SubProcess save_model() end ==================================
2021-04-03 04:10:30,069:INFO:create_model_container: 0
2021-04-03 04:10:30,069:INFO:master_model_container: 0
2021-04-03 04:10:30,069:INFO:display_container: 1
2021-04-03 04:10:30,075:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 04:10:30,075:INFO:setup() succesfully completed......................................
2021-04-03 04:10:30,233:INFO:Initializing compare_models()
2021-04-03 04:10:30,234:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-03 04:10:30,234:INFO:Checking exceptions
2021-04-03 04:10:30,234:INFO:Preparing display monitor
2021-04-03 04:10:30,235:INFO:Preparing display monitor
2021-04-03 04:10:30,303:INFO:Initializing Linear Regression
2021-04-03 04:10:30,304:INFO:Total runtime is 1.4861424763997396e-05 minutes
2021-04-03 04:10:30,323:INFO:SubProcess create_model() called ==================================
2021-04-03 04:10:30,324:INFO:Initializing create_model()
2021-04-03 04:10:30,325:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:10:30,325:INFO:Checking exceptions
2021-04-03 04:10:30,325:INFO:Importing libraries
2021-04-03 04:10:30,325:INFO:Copying training dataset
2021-04-03 04:10:30,327:INFO:Defining folds
2021-04-03 04:10:30,327:INFO:Declaring metric variables
2021-04-03 04:10:30,346:INFO:Importing untrained model
2021-04-03 04:10:30,371:INFO:Linear Regression Imported succesfully
2021-04-03 04:10:30,407:INFO:Starting cross validation
2021-04-03 04:10:30,408:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:10:39,959:INFO:Calculating mean and std
2021-04-03 04:10:39,961:INFO:Creating metrics dataframe
2021-04-03 04:10:39,968:INFO:Uploading results into container
2021-04-03 04:10:39,968:INFO:Uploading model into container now
2021-04-03 04:10:39,968:INFO:create_model_container: 1
2021-04-03 04:10:39,968:INFO:master_model_container: 1
2021-04-03 04:10:39,969:INFO:display_container: 2
2021-04-03 04:10:39,969:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 04:10:39,969:INFO:create_model() succesfully completed......................................
2021-04-03 04:10:40,111:INFO:SubProcess create_model() end ==================================
2021-04-03 04:10:40,111:INFO:Creating metrics dataframe
2021-04-03 04:10:40,136:INFO:Initializing Lasso Regression
2021-04-03 04:10:40,136:INFO:Total runtime is 0.1638798991839091 minutes
2021-04-03 04:10:40,147:INFO:SubProcess create_model() called ==================================
2021-04-03 04:10:40,148:INFO:Initializing create_model()
2021-04-03 04:10:40,149:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:10:40,149:INFO:Checking exceptions
2021-04-03 04:10:40,150:INFO:Importing libraries
2021-04-03 04:10:40,152:INFO:Copying training dataset
2021-04-03 04:10:40,155:INFO:Defining folds
2021-04-03 04:10:40,156:INFO:Declaring metric variables
2021-04-03 04:10:40,171:INFO:Importing untrained model
2021-04-03 04:10:40,192:INFO:Lasso Regression Imported succesfully
2021-04-03 04:10:40,233:INFO:Starting cross validation
2021-04-03 04:10:40,235:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:10:40,367:INFO:Calculating mean and std
2021-04-03 04:10:40,370:INFO:Creating metrics dataframe
2021-04-03 04:10:40,380:INFO:Uploading results into container
2021-04-03 04:10:40,380:INFO:Uploading model into container now
2021-04-03 04:10:40,380:INFO:create_model_container: 2
2021-04-03 04:10:40,380:INFO:master_model_container: 2
2021-04-03 04:10:40,381:INFO:display_container: 2
2021-04-03 04:10:40,385:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 04:10:40,386:INFO:create_model() succesfully completed......................................
2021-04-03 04:10:40,545:INFO:SubProcess create_model() end ==================================
2021-04-03 04:10:40,545:INFO:Creating metrics dataframe
2021-04-03 04:10:40,594:INFO:Initializing Ridge Regression
2021-04-03 04:10:40,595:INFO:Total runtime is 0.17154099543889365 minutes
2021-04-03 04:10:40,607:INFO:SubProcess create_model() called ==================================
2021-04-03 04:10:40,607:INFO:Initializing create_model()
2021-04-03 04:10:40,608:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:10:40,608:INFO:Checking exceptions
2021-04-03 04:10:40,608:INFO:Importing libraries
2021-04-03 04:10:40,608:INFO:Copying training dataset
2021-04-03 04:10:40,609:INFO:Defining folds
2021-04-03 04:10:40,609:INFO:Declaring metric variables
2021-04-03 04:10:40,627:INFO:Importing untrained model
2021-04-03 04:10:40,644:INFO:Ridge Regression Imported succesfully
2021-04-03 04:10:40,697:INFO:Starting cross validation
2021-04-03 04:10:40,698:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:10:40,875:INFO:Calculating mean and std
2021-04-03 04:10:40,877:INFO:Creating metrics dataframe
2021-04-03 04:10:40,894:INFO:Uploading results into container
2021-04-03 04:10:40,894:INFO:Uploading model into container now
2021-04-03 04:10:40,895:INFO:create_model_container: 3
2021-04-03 04:10:40,895:INFO:master_model_container: 3
2021-04-03 04:10:40,895:INFO:display_container: 2
2021-04-03 04:10:40,896:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 04:10:40,897:INFO:create_model() succesfully completed......................................
2021-04-03 04:10:41,161:INFO:SubProcess create_model() end ==================================
2021-04-03 04:10:41,161:INFO:Creating metrics dataframe
2021-04-03 04:10:41,200:INFO:Initializing Elastic Net
2021-04-03 04:10:41,205:INFO:Total runtime is 0.18166060447692872 minutes
2021-04-03 04:10:41,227:INFO:SubProcess create_model() called ==================================
2021-04-03 04:10:41,227:INFO:Initializing create_model()
2021-04-03 04:10:41,227:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:10:41,228:INFO:Checking exceptions
2021-04-03 04:10:41,228:INFO:Importing libraries
2021-04-03 04:10:41,228:INFO:Copying training dataset
2021-04-03 04:10:41,229:INFO:Defining folds
2021-04-03 04:10:41,230:INFO:Declaring metric variables
2021-04-03 04:10:41,242:INFO:Importing untrained model
2021-04-03 04:10:41,268:INFO:Elastic Net Imported succesfully
2021-04-03 04:10:41,309:INFO:Starting cross validation
2021-04-03 04:10:41,310:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:10:41,542:INFO:Calculating mean and std
2021-04-03 04:10:41,544:INFO:Creating metrics dataframe
2021-04-03 04:10:41,558:INFO:Uploading results into container
2021-04-03 04:10:41,558:INFO:Uploading model into container now
2021-04-03 04:10:41,559:INFO:create_model_container: 4
2021-04-03 04:10:41,559:INFO:master_model_container: 4
2021-04-03 04:10:41,559:INFO:display_container: 2
2021-04-03 04:10:41,561:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 04:10:41,561:INFO:create_model() succesfully completed......................................
2021-04-03 04:10:41,765:INFO:SubProcess create_model() end ==================================
2021-04-03 04:10:41,766:INFO:Creating metrics dataframe
2021-04-03 04:10:41,807:INFO:Initializing Least Angle Regression
2021-04-03 04:10:41,807:INFO:Total runtime is 0.1917380968729655 minutes
2021-04-03 04:10:41,826:INFO:SubProcess create_model() called ==================================
2021-04-03 04:10:41,827:INFO:Initializing create_model()
2021-04-03 04:10:41,827:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:10:41,828:INFO:Checking exceptions
2021-04-03 04:10:41,828:INFO:Importing libraries
2021-04-03 04:10:41,828:INFO:Copying training dataset
2021-04-03 04:10:41,829:INFO:Defining folds
2021-04-03 04:10:41,829:INFO:Declaring metric variables
2021-04-03 04:10:41,842:INFO:Importing untrained model
2021-04-03 04:10:41,869:INFO:Least Angle Regression Imported succesfully
2021-04-03 04:10:41,913:INFO:Starting cross validation
2021-04-03 04:10:41,914:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:10:43,445:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-03 04:10:43,446:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 04:10:43,446:INFO:Initializing create_model()
2021-04-03 04:10:43,447:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:10:43,447:INFO:Checking exceptions
2021-04-03 04:10:43,447:INFO:Importing libraries
2021-04-03 04:10:43,447:INFO:Copying training dataset
2021-04-03 04:10:43,449:INFO:Defining folds
2021-04-03 04:10:43,451:INFO:Declaring metric variables
2021-04-03 04:10:43,475:INFO:Importing untrained model
2021-04-03 04:10:43,495:INFO:Least Angle Regression Imported succesfully
2021-04-03 04:10:43,539:INFO:Starting cross validation
2021-04-03 04:10:43,540:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:10:54,972:ERROR:create_model() for lar raised an exception:
2021-04-03 04:10:54,973:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 04:10:54,973:INFO:Initializing Lasso Least Angle Regression
2021-04-03 04:10:54,973:INFO:Total runtime is 0.411165448029836 minutes
2021-04-03 04:10:54,984:INFO:SubProcess create_model() called ==================================
2021-04-03 04:10:54,987:INFO:Initializing create_model()
2021-04-03 04:10:54,987:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:10:54,988:INFO:Checking exceptions
2021-04-03 04:10:54,988:INFO:Importing libraries
2021-04-03 04:10:54,988:INFO:Copying training dataset
2021-04-03 04:10:54,991:INFO:Defining folds
2021-04-03 04:10:54,991:INFO:Declaring metric variables
2021-04-03 04:10:55,009:INFO:Importing untrained model
2021-04-03 04:10:55,028:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-03 04:10:55,068:INFO:Starting cross validation
2021-04-03 04:10:55,069:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:11:03,994:INFO:Calculating mean and std
2021-04-03 04:11:03,995:INFO:Creating metrics dataframe
2021-04-03 04:11:04,006:INFO:Uploading results into container
2021-04-03 04:11:04,007:INFO:Uploading model into container now
2021-04-03 04:11:04,007:INFO:create_model_container: 5
2021-04-03 04:11:04,007:INFO:master_model_container: 5
2021-04-03 04:11:04,007:INFO:display_container: 2
2021-04-03 04:11:04,009:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-03 04:11:04,009:INFO:create_model() succesfully completed......................................
2021-04-03 04:11:04,164:INFO:SubProcess create_model() end ==================================
2021-04-03 04:11:04,164:INFO:Creating metrics dataframe
2021-04-03 04:11:04,188:INFO:Initializing Orthogonal Matching Pursuit
2021-04-03 04:11:04,189:INFO:Total runtime is 0.5647587855656941 minutes
2021-04-03 04:11:04,205:INFO:SubProcess create_model() called ==================================
2021-04-03 04:11:04,206:INFO:Initializing create_model()
2021-04-03 04:11:04,206:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:11:04,206:INFO:Checking exceptions
2021-04-03 04:11:04,207:INFO:Importing libraries
2021-04-03 04:11:04,207:INFO:Copying training dataset
2021-04-03 04:11:04,208:INFO:Defining folds
2021-04-03 04:11:04,208:INFO:Declaring metric variables
2021-04-03 04:11:04,229:INFO:Importing untrained model
2021-04-03 04:11:04,244:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-03 04:11:04,295:INFO:Starting cross validation
2021-04-03 04:11:04,297:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:11:04,432:INFO:Calculating mean and std
2021-04-03 04:11:04,437:INFO:Creating metrics dataframe
2021-04-03 04:11:04,442:INFO:Uploading results into container
2021-04-03 04:11:04,442:INFO:Uploading model into container now
2021-04-03 04:11:04,443:INFO:create_model_container: 6
2021-04-03 04:11:04,443:INFO:master_model_container: 6
2021-04-03 04:11:04,443:INFO:display_container: 2
2021-04-03 04:11:04,444:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-03 04:11:04,444:INFO:create_model() succesfully completed......................................
2021-04-03 04:11:04,599:INFO:SubProcess create_model() end ==================================
2021-04-03 04:11:04,599:INFO:Creating metrics dataframe
2021-04-03 04:11:04,630:INFO:Initializing Bayesian Ridge
2021-04-03 04:11:04,631:INFO:Total runtime is 0.5721305330594381 minutes
2021-04-03 04:11:04,655:INFO:SubProcess create_model() called ==================================
2021-04-03 04:11:04,657:INFO:Initializing create_model()
2021-04-03 04:11:04,659:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:11:04,659:INFO:Checking exceptions
2021-04-03 04:11:04,659:INFO:Importing libraries
2021-04-03 04:11:04,659:INFO:Copying training dataset
2021-04-03 04:11:04,661:INFO:Defining folds
2021-04-03 04:11:04,661:INFO:Declaring metric variables
2021-04-03 04:11:04,679:INFO:Importing untrained model
2021-04-03 04:11:04,700:INFO:Bayesian Ridge Imported succesfully
2021-04-03 04:11:04,726:INFO:Starting cross validation
2021-04-03 04:11:04,728:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:11:04,872:INFO:Calculating mean and std
2021-04-03 04:11:04,873:INFO:Creating metrics dataframe
2021-04-03 04:11:04,878:INFO:Uploading results into container
2021-04-03 04:11:04,879:INFO:Uploading model into container now
2021-04-03 04:11:04,881:INFO:create_model_container: 7
2021-04-03 04:11:04,887:INFO:master_model_container: 7
2021-04-03 04:11:04,887:INFO:display_container: 2
2021-04-03 04:11:04,890:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 04:11:04,890:INFO:create_model() succesfully completed......................................
2021-04-03 04:11:05,049:INFO:SubProcess create_model() end ==================================
2021-04-03 04:11:05,049:INFO:Creating metrics dataframe
2021-04-03 04:11:05,094:INFO:Initializing Passive Aggressive Regressor
2021-04-03 04:11:05,095:INFO:Total runtime is 0.5798448920249939 minutes
2021-04-03 04:11:05,111:INFO:SubProcess create_model() called ==================================
2021-04-03 04:11:05,112:INFO:Initializing create_model()
2021-04-03 04:11:05,112:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:11:05,112:INFO:Checking exceptions
2021-04-03 04:11:05,113:INFO:Importing libraries
2021-04-03 04:11:05,113:INFO:Copying training dataset
2021-04-03 04:11:05,114:INFO:Defining folds
2021-04-03 04:11:05,115:INFO:Declaring metric variables
2021-04-03 04:11:05,143:INFO:Importing untrained model
2021-04-03 04:11:05,163:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-03 04:11:05,206:INFO:Starting cross validation
2021-04-03 04:11:05,220:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:11:05,603:INFO:Calculating mean and std
2021-04-03 04:11:05,605:INFO:Creating metrics dataframe
2021-04-03 04:11:05,623:INFO:Uploading results into container
2021-04-03 04:11:05,624:INFO:Uploading model into container now
2021-04-03 04:11:05,624:INFO:create_model_container: 8
2021-04-03 04:11:05,624:INFO:master_model_container: 8
2021-04-03 04:11:05,625:INFO:display_container: 2
2021-04-03 04:11:05,627:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 04:11:05,628:INFO:create_model() succesfully completed......................................
2021-04-03 04:11:05,853:INFO:SubProcess create_model() end ==================================
2021-04-03 04:11:05,853:INFO:Creating metrics dataframe
2021-04-03 04:11:05,907:INFO:Initializing Huber Regressor
2021-04-03 04:11:05,907:INFO:Total runtime is 0.5933965682983399 minutes
2021-04-03 04:11:05,926:INFO:SubProcess create_model() called ==================================
2021-04-03 04:11:05,927:INFO:Initializing create_model()
2021-04-03 04:11:05,927:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:11:05,927:INFO:Checking exceptions
2021-04-03 04:11:05,927:INFO:Importing libraries
2021-04-03 04:11:05,927:INFO:Copying training dataset
2021-04-03 04:11:05,929:INFO:Defining folds
2021-04-03 04:11:05,929:INFO:Declaring metric variables
2021-04-03 04:11:05,948:INFO:Importing untrained model
2021-04-03 04:11:05,972:INFO:Huber Regressor Imported succesfully
2021-04-03 04:11:06,001:INFO:Starting cross validation
2021-04-03 04:11:06,003:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:11:06,293:INFO:Calculating mean and std
2021-04-03 04:11:06,295:INFO:Creating metrics dataframe
2021-04-03 04:11:06,299:INFO:Uploading results into container
2021-04-03 04:11:06,300:INFO:Uploading model into container now
2021-04-03 04:11:06,301:INFO:create_model_container: 9
2021-04-03 04:11:06,303:INFO:master_model_container: 9
2021-04-03 04:11:06,304:INFO:display_container: 2
2021-04-03 04:11:06,307:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 04:11:06,308:INFO:create_model() succesfully completed......................................
2021-04-03 04:11:06,482:INFO:SubProcess create_model() end ==================================
2021-04-03 04:11:06,482:INFO:Creating metrics dataframe
2021-04-03 04:11:06,533:INFO:Initializing K Neighbors Regressor
2021-04-03 04:11:06,534:INFO:Total runtime is 0.6038585940996806 minutes
2021-04-03 04:11:06,549:INFO:SubProcess create_model() called ==================================
2021-04-03 04:11:06,551:INFO:Initializing create_model()
2021-04-03 04:11:06,553:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:11:06,554:INFO:Checking exceptions
2021-04-03 04:11:06,554:INFO:Importing libraries
2021-04-03 04:11:06,554:INFO:Copying training dataset
2021-04-03 04:11:06,556:INFO:Defining folds
2021-04-03 04:11:06,557:INFO:Declaring metric variables
2021-04-03 04:11:06,577:INFO:Importing untrained model
2021-04-03 04:11:06,603:INFO:K Neighbors Regressor Imported succesfully
2021-04-03 04:11:06,657:INFO:Starting cross validation
2021-04-03 04:11:06,660:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:11:07,108:INFO:Calculating mean and std
2021-04-03 04:11:07,109:INFO:Creating metrics dataframe
2021-04-03 04:11:07,113:INFO:Uploading results into container
2021-04-03 04:11:07,113:INFO:Uploading model into container now
2021-04-03 04:11:07,114:INFO:create_model_container: 10
2021-04-03 04:11:07,114:INFO:master_model_container: 10
2021-04-03 04:11:07,114:INFO:display_container: 2
2021-04-03 04:11:07,115:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-03 04:11:07,115:INFO:create_model() succesfully completed......................................
2021-04-03 04:11:07,307:INFO:SubProcess create_model() end ==================================
2021-04-03 04:11:07,307:INFO:Creating metrics dataframe
2021-04-03 04:11:07,344:INFO:Initializing Decision Tree Regressor
2021-04-03 04:11:07,344:INFO:Total runtime is 0.6173559506734212 minutes
2021-04-03 04:11:07,366:INFO:SubProcess create_model() called ==================================
2021-04-03 04:11:07,368:INFO:Initializing create_model()
2021-04-03 04:11:07,368:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:11:07,368:INFO:Checking exceptions
2021-04-03 04:11:07,369:INFO:Importing libraries
2021-04-03 04:11:07,369:INFO:Copying training dataset
2021-04-03 04:11:07,370:INFO:Defining folds
2021-04-03 04:11:07,371:INFO:Declaring metric variables
2021-04-03 04:11:07,390:INFO:Importing untrained model
2021-04-03 04:11:07,423:INFO:Decision Tree Regressor Imported succesfully
2021-04-03 04:11:07,465:INFO:Starting cross validation
2021-04-03 04:11:07,469:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:11:07,634:INFO:Calculating mean and std
2021-04-03 04:11:07,637:INFO:Creating metrics dataframe
2021-04-03 04:11:07,644:INFO:Uploading results into container
2021-04-03 04:11:07,645:INFO:Uploading model into container now
2021-04-03 04:11:07,646:INFO:create_model_container: 11
2021-04-03 04:11:07,646:INFO:master_model_container: 11
2021-04-03 04:11:07,646:INFO:display_container: 2
2021-04-03 04:11:07,650:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-03 04:11:07,650:INFO:create_model() succesfully completed......................................
2021-04-03 04:11:07,827:INFO:SubProcess create_model() end ==================================
2021-04-03 04:11:07,827:INFO:Creating metrics dataframe
2021-04-03 04:11:07,868:INFO:Initializing Random Forest Regressor
2021-04-03 04:11:07,869:INFO:Total runtime is 0.6261056820551554 minutes
2021-04-03 04:11:07,893:INFO:SubProcess create_model() called ==================================
2021-04-03 04:11:07,894:INFO:Initializing create_model()
2021-04-03 04:11:07,894:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:11:07,894:INFO:Checking exceptions
2021-04-03 04:11:07,894:INFO:Importing libraries
2021-04-03 04:11:07,894:INFO:Copying training dataset
2021-04-03 04:11:07,895:INFO:Defining folds
2021-04-03 04:11:07,896:INFO:Declaring metric variables
2021-04-03 04:11:07,907:INFO:Importing untrained model
2021-04-03 04:11:07,920:INFO:Random Forest Regressor Imported succesfully
2021-04-03 04:11:07,962:INFO:Starting cross validation
2021-04-03 04:11:07,963:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:11:09,545:INFO:Calculating mean and std
2021-04-03 04:11:09,546:INFO:Creating metrics dataframe
2021-04-03 04:11:09,555:INFO:Uploading results into container
2021-04-03 04:11:09,555:INFO:Uploading model into container now
2021-04-03 04:11:09,556:INFO:create_model_container: 12
2021-04-03 04:11:09,556:INFO:master_model_container: 12
2021-04-03 04:11:09,556:INFO:display_container: 2
2021-04-03 04:11:09,561:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 04:11:09,561:INFO:create_model() succesfully completed......................................
2021-04-03 04:11:09,712:INFO:SubProcess create_model() end ==================================
2021-04-03 04:11:09,712:INFO:Creating metrics dataframe
2021-04-03 04:11:09,746:INFO:Initializing Extra Trees Regressor
2021-04-03 04:11:09,746:INFO:Total runtime is 0.657388969262441 minutes
2021-04-03 04:11:09,771:INFO:SubProcess create_model() called ==================================
2021-04-03 04:11:09,772:INFO:Initializing create_model()
2021-04-03 04:11:09,772:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:11:09,772:INFO:Checking exceptions
2021-04-03 04:11:09,773:INFO:Importing libraries
2021-04-03 04:11:09,773:INFO:Copying training dataset
2021-04-03 04:11:09,775:INFO:Defining folds
2021-04-03 04:11:09,775:INFO:Declaring metric variables
2021-04-03 04:11:09,794:INFO:Importing untrained model
2021-04-03 04:11:09,808:INFO:Extra Trees Regressor Imported succesfully
2021-04-03 04:11:09,838:INFO:Starting cross validation
2021-04-03 04:11:09,839:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:11:11,021:INFO:Calculating mean and std
2021-04-03 04:11:11,022:INFO:Creating metrics dataframe
2021-04-03 04:11:11,027:INFO:Uploading results into container
2021-04-03 04:11:11,028:INFO:Uploading model into container now
2021-04-03 04:11:11,028:INFO:create_model_container: 13
2021-04-03 04:11:11,028:INFO:master_model_container: 13
2021-04-03 04:11:11,028:INFO:display_container: 2
2021-04-03 04:11:11,030:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 04:11:11,030:INFO:create_model() succesfully completed......................................
2021-04-03 04:11:11,171:INFO:SubProcess create_model() end ==================================
2021-04-03 04:11:11,171:INFO:Creating metrics dataframe
2021-04-03 04:11:11,217:INFO:Initializing AdaBoost Regressor
2021-04-03 04:11:11,217:INFO:Total runtime is 0.68189857006073 minutes
2021-04-03 04:11:11,238:INFO:SubProcess create_model() called ==================================
2021-04-03 04:11:11,239:INFO:Initializing create_model()
2021-04-03 04:11:11,239:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:11:11,239:INFO:Checking exceptions
2021-04-03 04:11:11,239:INFO:Importing libraries
2021-04-03 04:11:11,239:INFO:Copying training dataset
2021-04-03 04:11:11,240:INFO:Defining folds
2021-04-03 04:11:11,241:INFO:Declaring metric variables
2021-04-03 04:11:11,256:INFO:Importing untrained model
2021-04-03 04:11:11,281:INFO:AdaBoost Regressor Imported succesfully
2021-04-03 04:11:11,313:INFO:Starting cross validation
2021-04-03 04:11:11,313:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:11:11,907:INFO:Calculating mean and std
2021-04-03 04:11:11,908:INFO:Creating metrics dataframe
2021-04-03 04:11:11,916:INFO:Uploading results into container
2021-04-03 04:11:11,917:INFO:Uploading model into container now
2021-04-03 04:11:11,917:INFO:create_model_container: 14
2021-04-03 04:11:11,918:INFO:master_model_container: 14
2021-04-03 04:11:11,919:INFO:display_container: 2
2021-04-03 04:11:11,922:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-03 04:11:11,922:INFO:create_model() succesfully completed......................................
2021-04-03 04:11:12,073:INFO:SubProcess create_model() end ==================================
2021-04-03 04:11:12,073:INFO:Creating metrics dataframe
2021-04-03 04:11:12,110:INFO:Initializing Gradient Boosting Regressor
2021-04-03 04:11:12,110:INFO:Total runtime is 0.696779191493988 minutes
2021-04-03 04:11:12,127:INFO:SubProcess create_model() called ==================================
2021-04-03 04:11:12,127:INFO:Initializing create_model()
2021-04-03 04:11:12,127:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:11:12,128:INFO:Checking exceptions
2021-04-03 04:11:12,128:INFO:Importing libraries
2021-04-03 04:11:12,128:INFO:Copying training dataset
2021-04-03 04:11:12,130:INFO:Defining folds
2021-04-03 04:11:12,130:INFO:Declaring metric variables
2021-04-03 04:11:12,149:INFO:Importing untrained model
2021-04-03 04:11:12,169:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 04:11:12,194:INFO:Starting cross validation
2021-04-03 04:11:12,195:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:11:12,659:INFO:Calculating mean and std
2021-04-03 04:11:12,661:INFO:Creating metrics dataframe
2021-04-03 04:11:12,668:INFO:Uploading results into container
2021-04-03 04:11:12,668:INFO:Uploading model into container now
2021-04-03 04:11:12,668:INFO:create_model_container: 15
2021-04-03 04:11:12,669:INFO:master_model_container: 15
2021-04-03 04:11:12,669:INFO:display_container: 2
2021-04-03 04:11:12,674:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 04:11:12,674:INFO:create_model() succesfully completed......................................
2021-04-03 04:11:12,813:INFO:SubProcess create_model() end ==================================
2021-04-03 04:11:12,813:INFO:Creating metrics dataframe
2021-04-03 04:11:12,865:INFO:Initializing Extreme Gradient Boosting
2021-04-03 04:11:12,865:INFO:Total runtime is 0.7093681931495667 minutes
2021-04-03 04:11:12,887:INFO:SubProcess create_model() called ==================================
2021-04-03 04:11:12,889:INFO:Initializing create_model()
2021-04-03 04:11:12,889:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:11:12,889:INFO:Checking exceptions
2021-04-03 04:11:12,890:INFO:Importing libraries
2021-04-03 04:11:12,890:INFO:Copying training dataset
2021-04-03 04:11:12,891:INFO:Defining folds
2021-04-03 04:11:12,891:INFO:Declaring metric variables
2021-04-03 04:11:12,906:INFO:Importing untrained model
2021-04-03 04:11:12,936:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 04:11:12,973:INFO:Starting cross validation
2021-04-03 04:11:12,973:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:11:16,476:INFO:Calculating mean and std
2021-04-03 04:11:16,478:INFO:Creating metrics dataframe
2021-04-03 04:11:16,488:INFO:Uploading results into container
2021-04-03 04:11:16,488:INFO:Uploading model into container now
2021-04-03 04:11:16,489:INFO:create_model_container: 16
2021-04-03 04:11:16,489:INFO:master_model_container: 16
2021-04-03 04:11:16,489:INFO:display_container: 2
2021-04-03 04:11:16,496:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 04:11:16,497:INFO:create_model() succesfully completed......................................
2021-04-03 04:11:16,631:INFO:SubProcess create_model() end ==================================
2021-04-03 04:11:16,632:INFO:Creating metrics dataframe
2021-04-03 04:11:16,672:INFO:Initializing Light Gradient Boosting Machine
2021-04-03 04:11:16,672:INFO:Total runtime is 0.7728124459584554 minutes
2021-04-03 04:11:16,688:INFO:SubProcess create_model() called ==================================
2021-04-03 04:11:16,688:INFO:Initializing create_model()
2021-04-03 04:11:16,689:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238F8067130>, kwargs={})
2021-04-03 04:11:16,689:INFO:Checking exceptions
2021-04-03 04:11:16,689:INFO:Importing libraries
2021-04-03 04:11:16,689:INFO:Copying training dataset
2021-04-03 04:11:16,691:INFO:Defining folds
2021-04-03 04:11:16,691:INFO:Declaring metric variables
2021-04-03 04:11:16,705:INFO:Importing untrained model
2021-04-03 04:11:16,716:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-03 04:11:16,757:INFO:Starting cross validation
2021-04-03 04:11:16,758:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:11:18,098:INFO:Calculating mean and std
2021-04-03 04:11:18,101:INFO:Creating metrics dataframe
2021-04-03 04:11:18,111:INFO:Uploading results into container
2021-04-03 04:11:18,112:INFO:Uploading model into container now
2021-04-03 04:11:18,112:INFO:create_model_container: 17
2021-04-03 04:11:18,112:INFO:master_model_container: 17
2021-04-03 04:11:18,112:INFO:display_container: 2
2021-04-03 04:11:18,116:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-03 04:11:18,116:INFO:create_model() succesfully completed......................................
2021-04-03 04:11:18,308:INFO:SubProcess create_model() end ==================================
2021-04-03 04:11:18,309:INFO:Creating metrics dataframe
2021-04-03 04:11:18,414:INFO:Initializing create_model()
2021-04-03 04:11:18,415:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 04:11:18,415:INFO:Checking exceptions
2021-04-03 04:11:18,415:INFO:Importing libraries
2021-04-03 04:11:18,415:INFO:Copying training dataset
2021-04-03 04:11:18,416:INFO:Defining folds
2021-04-03 04:11:18,416:INFO:Declaring metric variables
2021-04-03 04:11:18,416:INFO:Importing untrained model
2021-04-03 04:11:18,416:INFO:Declaring custom model
2021-04-03 04:11:18,422:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 04:11:18,423:INFO:Cross validation set to False
2021-04-03 04:11:18,423:INFO:Fitting Model
2021-04-03 04:11:18,571:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 04:11:18,572:INFO:create_models() succesfully completed......................................
2021-04-03 04:11:18,746:INFO:Creating MLFlow logs
2021-04-03 04:11:18,772:INFO:Model: Gradient Boosting Regressor
2021-04-03 04:11:18,847:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 04:11:19,099:INFO:Initializing predict_model()
2021-04-03 04:11:19,100:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 04:11:19,100:INFO:Checking exceptions
2021-04-03 04:11:19,100:INFO:Preloading libraries
2021-04-03 04:11:19,536:INFO:Creating MLFlow logs
2021-04-03 04:11:19,548:INFO:Model: Extreme Gradient Boosting
2021-04-03 04:11:19,635:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-03 04:11:20,138:INFO:Creating MLFlow logs
2021-04-03 04:11:20,163:INFO:Model: Random Forest Regressor
2021-04-03 04:11:20,326:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 04:11:20,836:INFO:Creating MLFlow logs
2021-04-03 04:11:20,850:INFO:Model: Decision Tree Regressor
2021-04-03 04:11:20,909:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-03 04:11:21,299:INFO:Creating MLFlow logs
2021-04-03 04:11:21,314:INFO:Model: Extra Trees Regressor
2021-04-03 04:11:21,407:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 04:11:21,795:INFO:Creating MLFlow logs
2021-04-03 04:11:21,809:INFO:Model: Light Gradient Boosting Machine
2021-04-03 04:11:21,873:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-03 04:11:22,211:INFO:Creating MLFlow logs
2021-04-03 04:11:22,230:INFO:Model: AdaBoost Regressor
2021-04-03 04:11:22,374:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-03 04:11:22,791:INFO:Creating MLFlow logs
2021-04-03 04:11:22,807:INFO:Model: Huber Regressor
2021-04-03 04:11:22,880:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 04:11:23,269:INFO:Creating MLFlow logs
2021-04-03 04:11:23,282:INFO:Model: K Neighbors Regressor
2021-04-03 04:11:23,374:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-03 04:11:23,859:INFO:Creating MLFlow logs
2021-04-03 04:11:23,871:INFO:Model: Ridge Regression
2021-04-03 04:11:23,926:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 04:11:24,269:INFO:Creating MLFlow logs
2021-04-03 04:11:24,283:INFO:Model: Linear Regression
2021-04-03 04:11:24,344:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 04:11:24,691:INFO:Creating MLFlow logs
2021-04-03 04:11:24,707:INFO:Model: Bayesian Ridge
2021-04-03 04:11:24,788:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 04:11:25,163:INFO:Creating MLFlow logs
2021-04-03 04:11:25,175:INFO:Model: Orthogonal Matching Pursuit
2021-04-03 04:11:25,237:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-03 04:11:25,611:INFO:Creating MLFlow logs
2021-04-03 04:11:25,629:INFO:Model: Lasso Regression
2021-04-03 04:11:25,715:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 04:11:26,146:INFO:Creating MLFlow logs
2021-04-03 04:11:26,164:INFO:Model: Elastic Net
2021-04-03 04:11:26,229:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 04:11:26,698:INFO:Creating MLFlow logs
2021-04-03 04:11:26,712:INFO:Model: Least Angle Regression
2021-04-03 04:11:26,775:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-03 04:11:27,140:INFO:Creating MLFlow logs
2021-04-03 04:11:27,161:INFO:Model: Passive Aggressive Regressor
2021-04-03 04:11:27,263:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 04:11:27,738:INFO:create_model_container: 17
2021-04-03 04:11:27,738:INFO:master_model_container: 17
2021-04-03 04:11:27,738:INFO:display_container: 2
2021-04-03 04:11:27,741:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 04:11:27,741:INFO:compare_models() succesfully completed......................................
2021-04-03 04:11:33,091:INFO:Initializing create_model()
2021-04-03 04:11:33,091:INFO:create_model(estimator=gbr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-03 04:11:33,092:INFO:Checking exceptions
2021-04-03 04:11:33,092:INFO:Preparing display monitor
2021-04-03 04:11:33,132:INFO:Importing libraries
2021-04-03 04:11:33,133:INFO:Copying training dataset
2021-04-03 04:11:33,137:INFO:Defining folds
2021-04-03 04:11:33,137:INFO:Declaring metric variables
2021-04-03 04:11:33,152:INFO:Importing untrained model
2021-04-03 04:11:33,176:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 04:11:33,231:INFO:Starting cross validation
2021-04-03 04:11:33,237:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:11:34,109:INFO:Calculating mean and std
2021-04-03 04:11:34,111:INFO:Creating metrics dataframe
2021-04-03 04:11:34,163:INFO:Finalizing model
2021-04-03 04:11:34,333:INFO:Creating MLFlow logs
2021-04-03 04:11:34,409:INFO:Model: Gradient Boosting Regressor
2021-04-03 04:11:34,479:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 04:11:34,827:INFO:Initializing predict_model()
2021-04-03 04:11:34,827:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 04:11:34,828:INFO:Checking exceptions
2021-04-03 04:11:34,828:INFO:Preloading libraries
2021-04-03 04:11:35,446:INFO:Uploading results into container
2021-04-03 04:11:35,446:INFO:Uploading model into container now
2021-04-03 04:11:35,491:INFO:create_model_container: 18
2021-04-03 04:11:35,492:INFO:master_model_container: 18
2021-04-03 04:11:35,493:INFO:display_container: 3
2021-04-03 04:11:35,499:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 04:11:35,500:INFO:create_model() succesfully completed......................................
2021-04-03 04:11:45,117:INFO:Initializing tune_model()
2021-04-03 04:11:45,117:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-03 04:11:45,117:INFO:Checking exceptions
2021-04-03 04:11:45,117:INFO:Preparing display monitor
2021-04-03 04:11:45,151:INFO:Copying training dataset
2021-04-03 04:11:45,153:INFO:Checking base model
2021-04-03 04:11:45,156:INFO:Base model : Gradient Boosting Regressor
2021-04-03 04:11:45,175:INFO:Declaring metric variables
2021-04-03 04:11:45,188:INFO:Defining Hyperparameters
2021-04-03 04:11:45,397:INFO:Tuning with n_jobs=-1
2021-04-03 04:11:45,397:INFO:Initializing RandomizedSearchCV
2021-04-03 04:11:49,575:INFO:best_params: {'actual_estimator__subsample': 0.85, 'actual_estimator__n_estimators': 50, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 1, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 5, 'actual_estimator__learning_rate': 0.1}
2021-04-03 04:11:49,576:INFO:Hyperparameter search completed
2021-04-03 04:11:49,576:INFO:SubProcess create_model() called ==================================
2021-04-03 04:11:49,578:INFO:Initializing create_model()
2021-04-03 04:11:49,579:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x00000238FBE10520>, kwargs={'subsample': 0.85, 'n_estimators': 50, 'min_samples_split': 7, 'min_samples_leaf': 1, 'min_impurity_decrease': 0.05, 'max_features': 'log2', 'max_depth': 5, 'learning_rate': 0.1})
2021-04-03 04:11:49,579:INFO:Checking exceptions
2021-04-03 04:11:49,579:INFO:Importing libraries
2021-04-03 04:11:49,579:INFO:Copying training dataset
2021-04-03 04:11:49,580:INFO:Defining folds
2021-04-03 04:11:49,580:INFO:Declaring metric variables
2021-04-03 04:11:49,613:INFO:Importing untrained model
2021-04-03 04:11:49,613:INFO:Declaring custom model
2021-04-03 04:11:49,656:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 04:11:49,717:INFO:Starting cross validation
2021-04-03 04:11:49,718:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:11:50,064:INFO:Calculating mean and std
2021-04-03 04:11:50,066:INFO:Creating metrics dataframe
2021-04-03 04:11:50,099:INFO:Finalizing model
2021-04-03 04:11:50,172:INFO:Uploading results into container
2021-04-03 04:11:50,173:INFO:Uploading model into container now
2021-04-03 04:11:50,173:INFO:create_model_container: 19
2021-04-03 04:11:50,173:INFO:master_model_container: 19
2021-04-03 04:11:50,173:INFO:display_container: 4
2021-04-03 04:11:50,176:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 04:11:50,176:INFO:create_model() succesfully completed......................................
2021-04-03 04:11:50,340:INFO:SubProcess create_model() end ==================================
2021-04-03 04:11:50,340:INFO:Creating MLFlow logs
2021-04-03 04:11:50,371:INFO:Model: Gradient Boosting Regressor
2021-04-03 04:11:50,427:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 5, 'max_features': 'log2', 'max_leaf_nodes': None, 'min_impurity_decrease': 0.05, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 7, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 50, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 0.85, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 04:11:50,774:INFO:Initializing predict_model()
2021-04-03 04:11:50,775:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 04:11:50,775:INFO:Checking exceptions
2021-04-03 04:11:50,775:INFO:Preloading libraries
2021-04-03 04:11:51,349:INFO:create_model_container: 19
2021-04-03 04:11:51,349:INFO:master_model_container: 19
2021-04-03 04:11:51,349:INFO:display_container: 4
2021-04-03 04:11:51,356:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 04:11:51,356:INFO:tune_model() succesfully completed......................................
2021-04-03 04:11:54,943:INFO:Initializing plot_model()
2021-04-03 04:11:54,943:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 04:11:54,943:INFO:Checking exceptions
2021-04-03 04:11:54,943:INFO:Preparing display monitor
2021-04-03 04:11:54,954:INFO:Preloading libraries
2021-04-03 04:11:54,971:INFO:Copying training dataset
2021-04-03 04:11:54,971:INFO:Copying test dataset
2021-04-03 04:11:54,971:INFO:Plot type: residuals
2021-04-03 04:11:55,014:INFO:Fitting Model
2021-04-03 04:11:55,064:INFO:Scoring test/hold-out set
2021-04-03 04:11:55,784:INFO:Visual Rendered Successfully
2021-04-03 04:11:55,937:INFO:plot_model() succesfully completed......................................
2021-04-03 04:11:59,176:INFO:Initializing plot_model()
2021-04-03 04:11:59,177:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 04:11:59,177:INFO:Checking exceptions
2021-04-03 04:11:59,177:INFO:Preparing display monitor
2021-04-03 04:11:59,184:INFO:Preloading libraries
2021-04-03 04:11:59,204:INFO:Copying training dataset
2021-04-03 04:11:59,205:INFO:Copying test dataset
2021-04-03 04:11:59,205:INFO:Plot type: error
2021-04-03 04:11:59,208:INFO:Fitting Model
2021-04-03 04:11:59,209:INFO:Scoring test/hold-out set
2021-04-03 04:11:59,632:INFO:Visual Rendered Successfully
2021-04-03 04:11:59,781:INFO:plot_model() succesfully completed......................................
2021-04-03 04:12:03,327:INFO:Initializing plot_model()
2021-04-03 04:12:03,328:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 04:12:03,328:INFO:Checking exceptions
2021-04-03 04:12:03,329:INFO:Preparing display monitor
2021-04-03 04:12:03,344:INFO:Preloading libraries
2021-04-03 04:12:03,360:INFO:Copying training dataset
2021-04-03 04:12:03,361:INFO:Copying test dataset
2021-04-03 04:12:03,362:INFO:Plot type: feature
2021-04-03 04:12:03,365:WARNING:No coef_ found. Trying feature_importances_
2021-04-03 04:12:03,694:INFO:Visual Rendered Successfully
2021-04-03 04:12:03,812:INFO:plot_model() succesfully completed......................................
2021-04-03 04:12:07,517:INFO:Initializing evaluate_model()
2021-04-03 04:12:07,517:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-03 04:12:07,558:INFO:Initializing plot_model()
2021-04-03 04:12:07,559:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 04:12:07,559:INFO:Checking exceptions
2021-04-03 04:12:07,559:INFO:Preparing display monitor
2021-04-03 04:12:07,573:INFO:Preloading libraries
2021-04-03 04:12:07,597:INFO:Copying training dataset
2021-04-03 04:12:07,598:INFO:Copying test dataset
2021-04-03 04:12:07,598:INFO:Plot type: parameter
2021-04-03 04:12:07,615:INFO:Visual Rendered Successfully
2021-04-03 04:12:07,749:INFO:plot_model() succesfully completed......................................
2021-04-03 04:12:11,109:INFO:Initializing automl()
2021-04-03 04:12:11,109:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-03 04:12:11,109:INFO:Model Selection Basis : CV Results on Training set
2021-04-03 04:12:11,114:INFO:Initializing create_model()
2021-04-03 04:12:11,114:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 04:12:11,115:INFO:Checking exceptions
2021-04-03 04:12:11,115:INFO:Importing libraries
2021-04-03 04:12:11,115:INFO:Copying training dataset
2021-04-03 04:12:11,116:INFO:Defining folds
2021-04-03 04:12:11,116:INFO:Declaring metric variables
2021-04-03 04:12:11,116:INFO:Importing untrained model
2021-04-03 04:12:11,116:INFO:Declaring custom model
2021-04-03 04:12:11,119:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 04:12:11,122:INFO:Cross validation set to False
2021-04-03 04:12:11,122:INFO:Fitting Model
2021-04-03 04:12:11,205:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 04:12:11,205:INFO:create_models() succesfully completed......................................
2021-04-03 04:12:11,345:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 04:12:11,345:INFO:automl() succesfully completed......................................
2021-04-03 04:12:12,250:INFO:Initializing predict_model()
2021-04-03 04:12:12,251:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 04:12:12,251:INFO:Checking exceptions
2021-04-03 04:12:12,251:INFO:Preloading libraries
2021-04-03 04:12:12,251:INFO:Preparing display monitor
2021-04-03 04:12:16,179:INFO:Initializing finalize_model()
2021-04-03 04:12:16,179:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-03 04:12:16,181:INFO:Finalizing PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 04:12:16,184:INFO:Initializing create_model()
2021-04-03 04:12:16,184:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 04:12:16,184:INFO:Checking exceptions
2021-04-03 04:12:16,184:INFO:Importing libraries
2021-04-03 04:12:16,184:INFO:Copying training dataset
2021-04-03 04:12:16,185:INFO:Defining folds
2021-04-03 04:12:16,185:INFO:Declaring metric variables
2021-04-03 04:12:16,185:INFO:Importing untrained model
2021-04-03 04:12:16,185:INFO:Declaring custom model
2021-04-03 04:12:16,190:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 04:12:16,190:INFO:Starting cross validation
2021-04-03 04:12:16,191:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 04:12:16,832:INFO:Calculating mean and std
2021-04-03 04:12:16,832:INFO:Creating metrics dataframe
2021-04-03 04:12:16,843:INFO:Finalizing model
2021-04-03 04:12:16,972:INFO:Uploading results into container
2021-04-03 04:12:16,972:INFO:Uploading model into container now
2021-04-03 04:12:16,972:INFO:create_model_container: 20
2021-04-03 04:12:16,972:INFO:master_model_container: 20
2021-04-03 04:12:16,972:INFO:display_container: 6
2021-04-03 04:12:16,973:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 04:12:16,973:INFO:create_model() succesfully completed......................................
2021-04-03 04:12:17,119:INFO:Creating MLFlow logs
2021-04-03 04:12:17,127:INFO:Model: Gradient Boosting Regressor
2021-04-03 04:12:17,173:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 04:12:17,474:INFO:Initializing predict_model()
2021-04-03 04:12:17,474:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 04:12:17,474:INFO:Checking exceptions
2021-04-03 04:12:17,474:INFO:Preloading libraries
2021-04-03 04:12:18,002:INFO:create_model_container: 20
2021-04-03 04:12:18,002:INFO:master_model_container: 20
2021-04-03 04:12:18,002:INFO:display_container: 5
2021-04-03 04:12:18,008:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 04:12:18,008:INFO:finalize_model() succesfully completed......................................
2021-04-03 04:12:23,116:INFO:Initializing predict_model()
2021-04-03 04:12:23,117:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 04:12:23,117:INFO:Checking exceptions
2021-04-03 04:12:23,118:INFO:Preloading libraries
2021-04-03 04:12:23,118:INFO:Preparing display monitor
2021-04-03 04:12:27,342:INFO:Initializing predict_model()
2021-04-03 04:12:27,343:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 04:12:27,344:INFO:Checking exceptions
2021-04-03 04:12:27,344:INFO:Preloading libraries
2021-04-03 04:12:27,344:INFO:Preparing display monitor
2021-04-03 04:12:32,508:INFO:Initializing save_model()
2021-04-03 04:12:32,508:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), model_name=saved_models/best_model_to_predict_median_income_gbr, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2021-04-03 04:12:32,508:INFO:Adding model into prep_pipe
2021-04-03 04:12:32,546:INFO:saved_models/best_model_to_predict_median_income_gbr.pkl saved in current working directory
2021-04-03 04:12:32,564:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                                                                                     min_impurity_decrease=0.0,
                                                                                     min_impurity_split=None,
                                                                                     min_samples_leaf=1,
                                                                                     min_samples_split=2,
                                                                                     min_weight_fraction_leaf=0.0,
                                                                                     n_estimators=100,
                                                                                     n_iter_no_change=None,
                                                                                     presort='deprecated',
                                                                                     random_state=786,
                                                                                     subsample=1.0,
                                                                                     tol=0.0001,
                                                                                     validation_fraction=0.1,
                                                                                     verbose=0,
                                                                                     warm_start=False),
                                                 subsample=1.0, tol=0.0001,
                                                 validation_fraction=0.1,
                                                 verbose=0,
                                                 warm_start=False)]],
         verbose=False)
2021-04-03 04:12:32,565:INFO:save_model() succesfully completed......................................
2021-04-03 18:00:36,790:INFO:PyCaret Supervised Module
2021-04-03 18:00:36,790:INFO:ML Usecase: regression
2021-04-03 18:00:36,790:INFO:version 2.3.0
2021-04-03 18:00:36,790:INFO:Initializing setup()
2021-04-03 18:00:36,790:INFO:setup(target=Median income, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 18:00:36,791:INFO:Checking environment
2021-04-03 18:00:36,791:INFO:python_version: 3.9.1
2021-04-03 18:00:36,791:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 18:00:36,792:INFO:machine: AMD64
2021-04-03 18:00:36,792:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 18:00:36,794:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 18:00:36,794:INFO:Checking libraries
2021-04-03 18:00:36,794:INFO:pd==1.2.2
2021-04-03 18:00:36,794:INFO:numpy==1.19.5
2021-04-03 18:00:36,794:INFO:sklearn==0.23.2
2021-04-03 18:00:36,794:INFO:lightgbm==3.1.1
2021-04-03 18:00:36,795:WARNING:catboost not found
2021-04-03 18:00:37,219:INFO:xgboost==1.3.3
2021-04-03 18:00:37,636:INFO:mlflow==1.14.1
2021-04-03 18:00:37,636:INFO:Checking Exceptions
2021-04-03 18:00:37,636:INFO:Declaring global variables
2021-04-03 18:00:37,636:INFO:USI: 4803
2021-04-03 18:00:37,636:INFO:pycaret_globals: {'exp_name_log', '_all_models_internal', 'fold_shuffle_param', '_all_models', 'prep_pipe', 'seed', 'fix_imbalance_method_param', 'pycaret_globals', 'fold_generator', 'X', '_available_plots', 'fold_groups_param', 'logging_param', 'create_model_container', '_gpu_n_jobs_param', 'target_param', 'log_plots_param', 'iterative_imputation_iters_param', 'experiment__', 'fold_param', 'X_test', 'imputation_regressor', '_ml_usecase', 'imputation_classifier', 'data_before_preprocess', 'n_jobs_param', 'html_param', 'transform_target_method_param', 'fix_imbalance_param', '_all_metrics', '_internal_pipeline', 'gpu_param', 'transform_target_param', 'y_train', 'X_train', 'USI', 'y_test', 'y', 'master_model_container', 'display_container', 'stratify_param'}
2021-04-03 18:00:37,636:INFO:Preparing display monitor
2021-04-03 18:00:37,637:INFO:Preparing display monitor
2021-04-03 18:00:37,656:INFO:Importing libraries
2021-04-03 18:00:37,656:INFO:Copying data for preprocessing
2021-04-03 18:00:37,669:INFO:Declaring preprocessing parameters
2021-04-03 18:00:37,672:INFO:Creating preprocessing pipeline
2021-04-03 18:00:37,679:INFO:Preprocessing pipeline created successfully
2021-04-03 18:00:37,679:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 18:00:37,679:INFO:Creating global containers
2021-04-03 18:00:37,681:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 18:00:43,468:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 18:00:43,600:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 18:00:43,601:INFO:Creating grid variables
2021-04-03 18:00:43,623:INFO:Logging experiment in MLFlow
2021-04-03 18:00:43,641:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-03 18:00:43,730:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-03 18:00:44,115:INFO:SubProcess save_model() called ==================================
2021-04-03 18:00:44,133:INFO:Initializing save_model()
2021-04-03 18:00:44,133:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 18:00:44,134:INFO:Adding model into prep_pipe
2021-04-03 18:00:44,135:WARNING:Only Model saved as it was a pipeline.
2021-04-03 18:00:44,159:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 18:00:44,166:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 18:00:44,167:INFO:save_model() succesfully completed......................................
2021-04-03 18:00:44,270:INFO:SubProcess save_model() end ==================================
2021-04-03 18:00:44,445:INFO:create_model_container: 0
2021-04-03 18:00:44,445:INFO:master_model_container: 0
2021-04-03 18:00:44,445:INFO:display_container: 1
2021-04-03 18:00:44,462:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 18:00:44,462:INFO:setup() succesfully completed......................................
2021-04-03 18:01:07,293:INFO:Initializing compare_models()
2021-04-03 18:01:07,293:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-03 18:01:07,294:INFO:Checking exceptions
2021-04-03 18:01:07,294:INFO:Preparing display monitor
2021-04-03 18:01:07,295:INFO:Preparing display monitor
2021-04-03 18:01:07,337:INFO:Initializing Linear Regression
2021-04-03 18:01:07,337:INFO:Total runtime is 0.0 minutes
2021-04-03 18:01:07,349:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:07,350:INFO:Initializing create_model()
2021-04-03 18:01:07,350:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:07,350:INFO:Checking exceptions
2021-04-03 18:01:07,350:INFO:Importing libraries
2021-04-03 18:01:07,350:INFO:Copying training dataset
2021-04-03 18:01:07,353:INFO:Defining folds
2021-04-03 18:01:07,354:INFO:Declaring metric variables
2021-04-03 18:01:07,364:INFO:Importing untrained model
2021-04-03 18:01:07,377:INFO:Linear Regression Imported succesfully
2021-04-03 18:01:07,404:INFO:Starting cross validation
2021-04-03 18:01:07,414:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:13,801:INFO:Calculating mean and std
2021-04-03 18:01:13,803:INFO:Creating metrics dataframe
2021-04-03 18:01:13,811:INFO:Uploading results into container
2021-04-03 18:01:13,812:INFO:Uploading model into container now
2021-04-03 18:01:13,812:INFO:create_model_container: 1
2021-04-03 18:01:13,812:INFO:master_model_container: 1
2021-04-03 18:01:13,813:INFO:display_container: 2
2021-04-03 18:01:13,814:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 18:01:13,815:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:13,924:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:13,924:INFO:Creating metrics dataframe
2021-04-03 18:01:13,944:INFO:Initializing Lasso Regression
2021-04-03 18:01:13,944:INFO:Total runtime is 0.11013115644454956 minutes
2021-04-03 18:01:13,958:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:13,959:INFO:Initializing create_model()
2021-04-03 18:01:13,959:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:13,959:INFO:Checking exceptions
2021-04-03 18:01:13,959:INFO:Importing libraries
2021-04-03 18:01:13,959:INFO:Copying training dataset
2021-04-03 18:01:13,961:INFO:Defining folds
2021-04-03 18:01:13,961:INFO:Declaring metric variables
2021-04-03 18:01:13,979:INFO:Importing untrained model
2021-04-03 18:01:13,998:INFO:Lasso Regression Imported succesfully
2021-04-03 18:01:14,030:INFO:Starting cross validation
2021-04-03 18:01:14,032:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:14,151:INFO:Calculating mean and std
2021-04-03 18:01:14,153:INFO:Creating metrics dataframe
2021-04-03 18:01:14,160:INFO:Uploading results into container
2021-04-03 18:01:14,160:INFO:Uploading model into container now
2021-04-03 18:01:14,160:INFO:create_model_container: 2
2021-04-03 18:01:14,161:INFO:master_model_container: 2
2021-04-03 18:01:14,161:INFO:display_container: 2
2021-04-03 18:01:14,163:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 18:01:14,163:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:14,268:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:14,269:INFO:Creating metrics dataframe
2021-04-03 18:01:14,294:INFO:Initializing Ridge Regression
2021-04-03 18:01:14,294:INFO:Total runtime is 0.1159627358118693 minutes
2021-04-03 18:01:14,308:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:14,309:INFO:Initializing create_model()
2021-04-03 18:01:14,309:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:14,309:INFO:Checking exceptions
2021-04-03 18:01:14,310:INFO:Importing libraries
2021-04-03 18:01:14,310:INFO:Copying training dataset
2021-04-03 18:01:14,312:INFO:Defining folds
2021-04-03 18:01:14,312:INFO:Declaring metric variables
2021-04-03 18:01:14,331:INFO:Importing untrained model
2021-04-03 18:01:14,345:INFO:Ridge Regression Imported succesfully
2021-04-03 18:01:14,377:INFO:Starting cross validation
2021-04-03 18:01:14,377:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:14,468:INFO:Calculating mean and std
2021-04-03 18:01:14,472:INFO:Creating metrics dataframe
2021-04-03 18:01:14,478:INFO:Uploading results into container
2021-04-03 18:01:14,478:INFO:Uploading model into container now
2021-04-03 18:01:14,478:INFO:create_model_container: 3
2021-04-03 18:01:14,479:INFO:master_model_container: 3
2021-04-03 18:01:14,479:INFO:display_container: 2
2021-04-03 18:01:14,479:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 18:01:14,480:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:14,600:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:14,600:INFO:Creating metrics dataframe
2021-04-03 18:01:14,627:INFO:Initializing Elastic Net
2021-04-03 18:01:14,628:INFO:Total runtime is 0.12151728868484497 minutes
2021-04-03 18:01:14,644:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:14,647:INFO:Initializing create_model()
2021-04-03 18:01:14,647:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:14,647:INFO:Checking exceptions
2021-04-03 18:01:14,647:INFO:Importing libraries
2021-04-03 18:01:14,647:INFO:Copying training dataset
2021-04-03 18:01:14,649:INFO:Defining folds
2021-04-03 18:01:14,650:INFO:Declaring metric variables
2021-04-03 18:01:14,667:INFO:Importing untrained model
2021-04-03 18:01:14,677:INFO:Elastic Net Imported succesfully
2021-04-03 18:01:14,708:INFO:Starting cross validation
2021-04-03 18:01:14,708:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:14,826:INFO:Calculating mean and std
2021-04-03 18:01:14,828:INFO:Creating metrics dataframe
2021-04-03 18:01:14,841:INFO:Uploading results into container
2021-04-03 18:01:14,842:INFO:Uploading model into container now
2021-04-03 18:01:14,842:INFO:create_model_container: 4
2021-04-03 18:01:14,843:INFO:master_model_container: 4
2021-04-03 18:01:14,843:INFO:display_container: 2
2021-04-03 18:01:14,846:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 18:01:14,846:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:15,035:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:15,035:INFO:Creating metrics dataframe
2021-04-03 18:01:15,067:INFO:Initializing Least Angle Regression
2021-04-03 18:01:15,067:INFO:Total runtime is 0.12883888483047484 minutes
2021-04-03 18:01:15,081:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:15,081:INFO:Initializing create_model()
2021-04-03 18:01:15,081:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:15,082:INFO:Checking exceptions
2021-04-03 18:01:15,082:INFO:Importing libraries
2021-04-03 18:01:15,082:INFO:Copying training dataset
2021-04-03 18:01:15,083:INFO:Defining folds
2021-04-03 18:01:15,083:INFO:Declaring metric variables
2021-04-03 18:01:15,092:INFO:Importing untrained model
2021-04-03 18:01:15,104:INFO:Least Angle Regression Imported succesfully
2021-04-03 18:01:15,126:INFO:Starting cross validation
2021-04-03 18:01:15,127:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:16,348:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-03 18:01:16,363:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 18:01:16,363:INFO:Initializing create_model()
2021-04-03 18:01:16,363:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:16,363:INFO:Checking exceptions
2021-04-03 18:01:16,363:INFO:Importing libraries
2021-04-03 18:01:16,363:INFO:Copying training dataset
2021-04-03 18:01:16,364:INFO:Defining folds
2021-04-03 18:01:16,364:INFO:Declaring metric variables
2021-04-03 18:01:16,375:INFO:Importing untrained model
2021-04-03 18:01:16,387:INFO:Least Angle Regression Imported succesfully
2021-04-03 18:01:16,423:INFO:Starting cross validation
2021-04-03 18:01:16,424:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:24,159:ERROR:create_model() for lar raised an exception:
2021-04-03 18:01:24,160:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 18:01:24,160:INFO:Initializing Lasso Least Angle Regression
2021-04-03 18:01:24,160:INFO:Total runtime is 0.2803968707720439 minutes
2021-04-03 18:01:24,174:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:24,175:INFO:Initializing create_model()
2021-04-03 18:01:24,175:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:24,175:INFO:Checking exceptions
2021-04-03 18:01:24,175:INFO:Importing libraries
2021-04-03 18:01:24,175:INFO:Copying training dataset
2021-04-03 18:01:24,177:INFO:Defining folds
2021-04-03 18:01:24,177:INFO:Declaring metric variables
2021-04-03 18:01:24,188:INFO:Importing untrained model
2021-04-03 18:01:24,205:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-03 18:01:24,234:INFO:Starting cross validation
2021-04-03 18:01:24,235:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:30,701:INFO:Calculating mean and std
2021-04-03 18:01:30,705:INFO:Creating metrics dataframe
2021-04-03 18:01:30,713:INFO:Uploading results into container
2021-04-03 18:01:30,713:INFO:Uploading model into container now
2021-04-03 18:01:30,714:INFO:create_model_container: 5
2021-04-03 18:01:30,714:INFO:master_model_container: 5
2021-04-03 18:01:30,714:INFO:display_container: 2
2021-04-03 18:01:30,716:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-03 18:01:30,716:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:30,832:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:30,832:INFO:Creating metrics dataframe
2021-04-03 18:01:30,856:INFO:Initializing Orthogonal Matching Pursuit
2021-04-03 18:01:30,856:INFO:Total runtime is 0.3919995943705241 minutes
2021-04-03 18:01:30,868:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:30,873:INFO:Initializing create_model()
2021-04-03 18:01:30,874:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:30,874:INFO:Checking exceptions
2021-04-03 18:01:30,874:INFO:Importing libraries
2021-04-03 18:01:30,874:INFO:Copying training dataset
2021-04-03 18:01:30,876:INFO:Defining folds
2021-04-03 18:01:30,877:INFO:Declaring metric variables
2021-04-03 18:01:30,894:INFO:Importing untrained model
2021-04-03 18:01:30,907:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-03 18:01:30,941:INFO:Starting cross validation
2021-04-03 18:01:30,942:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:31,073:INFO:Calculating mean and std
2021-04-03 18:01:31,078:INFO:Creating metrics dataframe
2021-04-03 18:01:31,087:INFO:Uploading results into container
2021-04-03 18:01:31,088:INFO:Uploading model into container now
2021-04-03 18:01:31,088:INFO:create_model_container: 6
2021-04-03 18:01:31,088:INFO:master_model_container: 6
2021-04-03 18:01:31,089:INFO:display_container: 2
2021-04-03 18:01:31,090:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-03 18:01:31,091:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:31,245:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:31,245:INFO:Creating metrics dataframe
2021-04-03 18:01:31,285:INFO:Initializing Bayesian Ridge
2021-04-03 18:01:31,287:INFO:Total runtime is 0.3991641759872437 minutes
2021-04-03 18:01:31,301:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:31,303:INFO:Initializing create_model()
2021-04-03 18:01:31,304:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:31,304:INFO:Checking exceptions
2021-04-03 18:01:31,304:INFO:Importing libraries
2021-04-03 18:01:31,304:INFO:Copying training dataset
2021-04-03 18:01:31,308:INFO:Defining folds
2021-04-03 18:01:31,308:INFO:Declaring metric variables
2021-04-03 18:01:31,327:INFO:Importing untrained model
2021-04-03 18:01:31,346:INFO:Bayesian Ridge Imported succesfully
2021-04-03 18:01:31,371:INFO:Starting cross validation
2021-04-03 18:01:31,373:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:31,496:INFO:Calculating mean and std
2021-04-03 18:01:31,497:INFO:Creating metrics dataframe
2021-04-03 18:01:31,513:INFO:Uploading results into container
2021-04-03 18:01:31,514:INFO:Uploading model into container now
2021-04-03 18:01:31,514:INFO:create_model_container: 7
2021-04-03 18:01:31,514:INFO:master_model_container: 7
2021-04-03 18:01:31,514:INFO:display_container: 2
2021-04-03 18:01:31,517:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 18:01:31,517:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:31,694:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:31,695:INFO:Creating metrics dataframe
2021-04-03 18:01:31,761:INFO:Initializing Passive Aggressive Regressor
2021-04-03 18:01:31,763:INFO:Total runtime is 0.40710054238637294 minutes
2021-04-03 18:01:31,780:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:31,780:INFO:Initializing create_model()
2021-04-03 18:01:31,781:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:31,781:INFO:Checking exceptions
2021-04-03 18:01:31,781:INFO:Importing libraries
2021-04-03 18:01:31,781:INFO:Copying training dataset
2021-04-03 18:01:31,782:INFO:Defining folds
2021-04-03 18:01:31,783:INFO:Declaring metric variables
2021-04-03 18:01:31,809:INFO:Importing untrained model
2021-04-03 18:01:31,826:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-03 18:01:31,877:INFO:Starting cross validation
2021-04-03 18:01:31,879:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:32,311:INFO:Calculating mean and std
2021-04-03 18:01:32,312:INFO:Creating metrics dataframe
2021-04-03 18:01:32,320:INFO:Uploading results into container
2021-04-03 18:01:32,320:INFO:Uploading model into container now
2021-04-03 18:01:32,320:INFO:create_model_container: 8
2021-04-03 18:01:32,321:INFO:master_model_container: 8
2021-04-03 18:01:32,321:INFO:display_container: 2
2021-04-03 18:01:32,324:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 18:01:32,324:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:32,467:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:32,467:INFO:Creating metrics dataframe
2021-04-03 18:01:32,508:INFO:Initializing Huber Regressor
2021-04-03 18:01:32,508:INFO:Total runtime is 0.41952865918477383 minutes
2021-04-03 18:01:32,527:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:32,528:INFO:Initializing create_model()
2021-04-03 18:01:32,528:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:32,528:INFO:Checking exceptions
2021-04-03 18:01:32,528:INFO:Importing libraries
2021-04-03 18:01:32,529:INFO:Copying training dataset
2021-04-03 18:01:32,530:INFO:Defining folds
2021-04-03 18:01:32,530:INFO:Declaring metric variables
2021-04-03 18:01:32,551:INFO:Importing untrained model
2021-04-03 18:01:32,566:INFO:Huber Regressor Imported succesfully
2021-04-03 18:01:32,594:INFO:Starting cross validation
2021-04-03 18:01:32,596:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:32,821:INFO:Calculating mean and std
2021-04-03 18:01:32,826:INFO:Creating metrics dataframe
2021-04-03 18:01:32,833:INFO:Uploading results into container
2021-04-03 18:01:32,833:INFO:Uploading model into container now
2021-04-03 18:01:32,833:INFO:create_model_container: 9
2021-04-03 18:01:32,833:INFO:master_model_container: 9
2021-04-03 18:01:32,833:INFO:display_container: 2
2021-04-03 18:01:32,835:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 18:01:32,836:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:32,964:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:32,964:INFO:Creating metrics dataframe
2021-04-03 18:01:32,997:INFO:Initializing K Neighbors Regressor
2021-04-03 18:01:32,998:INFO:Total runtime is 0.42768733898798633 minutes
2021-04-03 18:01:33,028:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:33,029:INFO:Initializing create_model()
2021-04-03 18:01:33,029:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:33,030:INFO:Checking exceptions
2021-04-03 18:01:33,030:INFO:Importing libraries
2021-04-03 18:01:33,030:INFO:Copying training dataset
2021-04-03 18:01:33,033:INFO:Defining folds
2021-04-03 18:01:33,034:INFO:Declaring metric variables
2021-04-03 18:01:33,048:INFO:Importing untrained model
2021-04-03 18:01:33,060:INFO:K Neighbors Regressor Imported succesfully
2021-04-03 18:01:33,089:INFO:Starting cross validation
2021-04-03 18:01:33,091:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:33,270:INFO:Calculating mean and std
2021-04-03 18:01:33,272:INFO:Creating metrics dataframe
2021-04-03 18:01:33,279:INFO:Uploading results into container
2021-04-03 18:01:33,279:INFO:Uploading model into container now
2021-04-03 18:01:33,279:INFO:create_model_container: 10
2021-04-03 18:01:33,280:INFO:master_model_container: 10
2021-04-03 18:01:33,280:INFO:display_container: 2
2021-04-03 18:01:33,282:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-03 18:01:33,282:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:33,465:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:33,465:INFO:Creating metrics dataframe
2021-04-03 18:01:33,518:INFO:Initializing Decision Tree Regressor
2021-04-03 18:01:33,518:INFO:Total runtime is 0.43636082013448085 minutes
2021-04-03 18:01:33,532:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:33,533:INFO:Initializing create_model()
2021-04-03 18:01:33,533:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:33,533:INFO:Checking exceptions
2021-04-03 18:01:33,533:INFO:Importing libraries
2021-04-03 18:01:33,533:INFO:Copying training dataset
2021-04-03 18:01:33,535:INFO:Defining folds
2021-04-03 18:01:33,535:INFO:Declaring metric variables
2021-04-03 18:01:33,556:INFO:Importing untrained model
2021-04-03 18:01:33,575:INFO:Decision Tree Regressor Imported succesfully
2021-04-03 18:01:33,612:INFO:Starting cross validation
2021-04-03 18:01:33,613:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:34,018:INFO:Calculating mean and std
2021-04-03 18:01:34,020:INFO:Creating metrics dataframe
2021-04-03 18:01:34,031:INFO:Uploading results into container
2021-04-03 18:01:34,031:INFO:Uploading model into container now
2021-04-03 18:01:34,031:INFO:create_model_container: 11
2021-04-03 18:01:34,032:INFO:master_model_container: 11
2021-04-03 18:01:34,032:INFO:display_container: 2
2021-04-03 18:01:34,035:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-03 18:01:34,035:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:34,261:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:34,261:INFO:Creating metrics dataframe
2021-04-03 18:01:34,301:INFO:Initializing Random Forest Regressor
2021-04-03 18:01:34,301:INFO:Total runtime is 0.44940989017486577 minutes
2021-04-03 18:01:34,323:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:34,324:INFO:Initializing create_model()
2021-04-03 18:01:34,324:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:34,324:INFO:Checking exceptions
2021-04-03 18:01:34,324:INFO:Importing libraries
2021-04-03 18:01:34,324:INFO:Copying training dataset
2021-04-03 18:01:34,326:INFO:Defining folds
2021-04-03 18:01:34,326:INFO:Declaring metric variables
2021-04-03 18:01:34,347:INFO:Importing untrained model
2021-04-03 18:01:34,358:INFO:Random Forest Regressor Imported succesfully
2021-04-03 18:01:34,394:INFO:Starting cross validation
2021-04-03 18:01:34,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:36,083:INFO:Calculating mean and std
2021-04-03 18:01:36,084:INFO:Creating metrics dataframe
2021-04-03 18:01:36,091:INFO:Uploading results into container
2021-04-03 18:01:36,092:INFO:Uploading model into container now
2021-04-03 18:01:36,092:INFO:create_model_container: 12
2021-04-03 18:01:36,092:INFO:master_model_container: 12
2021-04-03 18:01:36,092:INFO:display_container: 2
2021-04-03 18:01:36,093:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 18:01:36,094:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:36,183:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:36,183:INFO:Creating metrics dataframe
2021-04-03 18:01:36,210:INFO:Initializing Extra Trees Regressor
2021-04-03 18:01:36,211:INFO:Total runtime is 0.48124683698018395 minutes
2021-04-03 18:01:36,224:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:36,225:INFO:Initializing create_model()
2021-04-03 18:01:36,225:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:36,225:INFO:Checking exceptions
2021-04-03 18:01:36,225:INFO:Importing libraries
2021-04-03 18:01:36,225:INFO:Copying training dataset
2021-04-03 18:01:36,227:INFO:Defining folds
2021-04-03 18:01:36,227:INFO:Declaring metric variables
2021-04-03 18:01:36,243:INFO:Importing untrained model
2021-04-03 18:01:36,259:INFO:Extra Trees Regressor Imported succesfully
2021-04-03 18:01:36,292:INFO:Starting cross validation
2021-04-03 18:01:36,292:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:37,776:INFO:Calculating mean and std
2021-04-03 18:01:37,779:INFO:Creating metrics dataframe
2021-04-03 18:01:37,796:INFO:Uploading results into container
2021-04-03 18:01:37,796:INFO:Uploading model into container now
2021-04-03 18:01:37,796:INFO:create_model_container: 13
2021-04-03 18:01:37,797:INFO:master_model_container: 13
2021-04-03 18:01:37,797:INFO:display_container: 2
2021-04-03 18:01:37,800:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 18:01:37,801:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:37,983:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:37,983:INFO:Creating metrics dataframe
2021-04-03 18:01:38,008:INFO:Initializing AdaBoost Regressor
2021-04-03 18:01:38,008:INFO:Total runtime is 0.5111995657285054 minutes
2021-04-03 18:01:38,023:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:38,023:INFO:Initializing create_model()
2021-04-03 18:01:38,023:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:38,023:INFO:Checking exceptions
2021-04-03 18:01:38,023:INFO:Importing libraries
2021-04-03 18:01:38,023:INFO:Copying training dataset
2021-04-03 18:01:38,024:INFO:Defining folds
2021-04-03 18:01:38,024:INFO:Declaring metric variables
2021-04-03 18:01:38,034:INFO:Importing untrained model
2021-04-03 18:01:38,051:INFO:AdaBoost Regressor Imported succesfully
2021-04-03 18:01:38,098:INFO:Starting cross validation
2021-04-03 18:01:38,099:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:38,707:INFO:Calculating mean and std
2021-04-03 18:01:38,708:INFO:Creating metrics dataframe
2021-04-03 18:01:38,713:INFO:Uploading results into container
2021-04-03 18:01:38,713:INFO:Uploading model into container now
2021-04-03 18:01:38,714:INFO:create_model_container: 14
2021-04-03 18:01:38,714:INFO:master_model_container: 14
2021-04-03 18:01:38,714:INFO:display_container: 2
2021-04-03 18:01:38,715:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-03 18:01:38,715:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:38,813:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:38,813:INFO:Creating metrics dataframe
2021-04-03 18:01:38,836:INFO:Initializing Gradient Boosting Regressor
2021-04-03 18:01:38,837:INFO:Total runtime is 0.5250123977661133 minutes
2021-04-03 18:01:38,848:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:38,849:INFO:Initializing create_model()
2021-04-03 18:01:38,849:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:38,849:INFO:Checking exceptions
2021-04-03 18:01:38,849:INFO:Importing libraries
2021-04-03 18:01:38,849:INFO:Copying training dataset
2021-04-03 18:01:38,850:INFO:Defining folds
2021-04-03 18:01:38,851:INFO:Declaring metric variables
2021-04-03 18:01:38,867:INFO:Importing untrained model
2021-04-03 18:01:38,884:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 18:01:38,917:INFO:Starting cross validation
2021-04-03 18:01:38,917:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:39,323:INFO:Calculating mean and std
2021-04-03 18:01:39,324:INFO:Creating metrics dataframe
2021-04-03 18:01:39,331:INFO:Uploading results into container
2021-04-03 18:01:39,331:INFO:Uploading model into container now
2021-04-03 18:01:39,332:INFO:create_model_container: 15
2021-04-03 18:01:39,332:INFO:master_model_container: 15
2021-04-03 18:01:39,332:INFO:display_container: 2
2021-04-03 18:01:39,334:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 18:01:39,334:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:39,480:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:39,480:INFO:Creating metrics dataframe
2021-04-03 18:01:39,512:INFO:Initializing Extreme Gradient Boosting
2021-04-03 18:01:39,512:INFO:Total runtime is 0.5362502813339234 minutes
2021-04-03 18:01:39,525:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:39,526:INFO:Initializing create_model()
2021-04-03 18:01:39,526:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:39,526:INFO:Checking exceptions
2021-04-03 18:01:39,526:INFO:Importing libraries
2021-04-03 18:01:39,526:INFO:Copying training dataset
2021-04-03 18:01:39,528:INFO:Defining folds
2021-04-03 18:01:39,528:INFO:Declaring metric variables
2021-04-03 18:01:39,542:INFO:Importing untrained model
2021-04-03 18:01:39,561:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 18:01:39,600:INFO:Starting cross validation
2021-04-03 18:01:39,602:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:42,036:INFO:Calculating mean and std
2021-04-03 18:01:42,039:INFO:Creating metrics dataframe
2021-04-03 18:01:42,046:INFO:Uploading results into container
2021-04-03 18:01:42,046:INFO:Uploading model into container now
2021-04-03 18:01:42,047:INFO:create_model_container: 16
2021-04-03 18:01:42,047:INFO:master_model_container: 16
2021-04-03 18:01:42,047:INFO:display_container: 2
2021-04-03 18:01:42,055:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 18:01:42,055:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:42,170:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:42,171:INFO:Creating metrics dataframe
2021-04-03 18:01:42,197:INFO:Initializing Light Gradient Boosting Machine
2021-04-03 18:01:42,197:INFO:Total runtime is 0.5810159047444662 minutes
2021-04-03 18:01:42,210:INFO:SubProcess create_model() called ==================================
2021-04-03 18:01:42,210:INFO:Initializing create_model()
2021-04-03 18:01:42,210:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07BE8400>, kwargs={})
2021-04-03 18:01:42,210:INFO:Checking exceptions
2021-04-03 18:01:42,210:INFO:Importing libraries
2021-04-03 18:01:42,210:INFO:Copying training dataset
2021-04-03 18:01:42,211:INFO:Defining folds
2021-04-03 18:01:42,211:INFO:Declaring metric variables
2021-04-03 18:01:42,225:INFO:Importing untrained model
2021-04-03 18:01:42,244:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-03 18:01:42,282:INFO:Starting cross validation
2021-04-03 18:01:42,283:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:43,101:INFO:Calculating mean and std
2021-04-03 18:01:43,104:INFO:Creating metrics dataframe
2021-04-03 18:01:43,115:INFO:Uploading results into container
2021-04-03 18:01:43,115:INFO:Uploading model into container now
2021-04-03 18:01:43,116:INFO:create_model_container: 17
2021-04-03 18:01:43,116:INFO:master_model_container: 17
2021-04-03 18:01:43,116:INFO:display_container: 2
2021-04-03 18:01:43,122:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-03 18:01:43,122:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:43,256:INFO:SubProcess create_model() end ==================================
2021-04-03 18:01:43,256:INFO:Creating metrics dataframe
2021-04-03 18:01:43,319:INFO:Initializing create_model()
2021-04-03 18:01:43,320:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 18:01:43,320:INFO:Checking exceptions
2021-04-03 18:01:43,320:INFO:Importing libraries
2021-04-03 18:01:43,321:INFO:Copying training dataset
2021-04-03 18:01:43,321:INFO:Defining folds
2021-04-03 18:01:43,321:INFO:Declaring metric variables
2021-04-03 18:01:43,322:INFO:Importing untrained model
2021-04-03 18:01:43,322:INFO:Declaring custom model
2021-04-03 18:01:43,325:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 18:01:43,325:INFO:Cross validation set to False
2021-04-03 18:01:43,326:INFO:Fitting Model
2021-04-03 18:01:43,427:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 18:01:43,427:INFO:create_models() succesfully completed......................................
2021-04-03 18:01:43,541:INFO:Creating MLFlow logs
2021-04-03 18:01:43,552:INFO:Model: Gradient Boosting Regressor
2021-04-03 18:01:43,626:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 18:01:43,816:INFO:Initializing predict_model()
2021-04-03 18:01:43,816:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 18:01:43,816:INFO:Checking exceptions
2021-04-03 18:01:43,816:INFO:Preloading libraries
2021-04-03 18:01:44,146:INFO:Creating MLFlow logs
2021-04-03 18:01:44,165:INFO:Model: Extreme Gradient Boosting
2021-04-03 18:01:44,224:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-03 18:01:44,527:INFO:Creating MLFlow logs
2021-04-03 18:01:44,541:INFO:Model: Random Forest Regressor
2021-04-03 18:01:44,598:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 18:01:44,933:INFO:Creating MLFlow logs
2021-04-03 18:01:44,952:INFO:Model: Decision Tree Regressor
2021-04-03 18:01:45,016:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-03 18:01:45,302:INFO:Creating MLFlow logs
2021-04-03 18:01:45,323:INFO:Model: Extra Trees Regressor
2021-04-03 18:01:45,377:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 18:01:45,675:INFO:Creating MLFlow logs
2021-04-03 18:01:45,693:INFO:Model: Light Gradient Boosting Machine
2021-04-03 18:01:45,750:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-03 18:01:46,046:INFO:Creating MLFlow logs
2021-04-03 18:01:46,060:INFO:Model: AdaBoost Regressor
2021-04-03 18:01:46,117:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-03 18:01:46,400:INFO:Creating MLFlow logs
2021-04-03 18:01:46,415:INFO:Model: Huber Regressor
2021-04-03 18:01:46,480:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 18:01:46,758:INFO:Creating MLFlow logs
2021-04-03 18:01:46,772:INFO:Model: K Neighbors Regressor
2021-04-03 18:01:46,839:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-03 18:01:47,131:INFO:Creating MLFlow logs
2021-04-03 18:01:47,144:INFO:Model: Ridge Regression
2021-04-03 18:01:47,210:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 18:01:47,476:INFO:Creating MLFlow logs
2021-04-03 18:01:47,492:INFO:Model: Linear Regression
2021-04-03 18:01:47,551:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 18:01:47,846:INFO:Creating MLFlow logs
2021-04-03 18:01:47,863:INFO:Model: Bayesian Ridge
2021-04-03 18:01:47,919:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 18:01:48,215:INFO:Creating MLFlow logs
2021-04-03 18:01:48,230:INFO:Model: Orthogonal Matching Pursuit
2021-04-03 18:01:48,297:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-03 18:01:48,577:INFO:Creating MLFlow logs
2021-04-03 18:01:48,593:INFO:Model: Lasso Regression
2021-04-03 18:01:48,646:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 18:01:48,930:INFO:Creating MLFlow logs
2021-04-03 18:01:48,945:INFO:Model: Elastic Net
2021-04-03 18:01:49,002:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 18:01:49,283:INFO:Creating MLFlow logs
2021-04-03 18:01:49,297:INFO:Model: Least Angle Regression
2021-04-03 18:01:49,359:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-03 18:01:49,634:INFO:Creating MLFlow logs
2021-04-03 18:01:49,647:INFO:Model: Passive Aggressive Regressor
2021-04-03 18:01:49,726:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 18:01:50,042:INFO:create_model_container: 17
2021-04-03 18:01:50,042:INFO:master_model_container: 17
2021-04-03 18:01:50,042:INFO:display_container: 2
2021-04-03 18:01:50,046:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 18:01:50,046:INFO:compare_models() succesfully completed......................................
2021-04-03 18:01:50,058:INFO:Initializing create_model()
2021-04-03 18:01:50,058:INFO:create_model(estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-03 18:01:50,059:INFO:Checking exceptions
2021-04-03 18:01:50,059:INFO:Preparing display monitor
2021-04-03 18:01:50,098:INFO:Importing libraries
2021-04-03 18:01:50,098:INFO:Copying training dataset
2021-04-03 18:01:50,100:INFO:Defining folds
2021-04-03 18:01:50,100:INFO:Declaring metric variables
2021-04-03 18:01:50,115:INFO:Importing untrained model
2021-04-03 18:01:50,134:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 18:01:50,180:INFO:Starting cross validation
2021-04-03 18:01:50,181:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:01:51,812:INFO:Calculating mean and std
2021-04-03 18:01:51,814:INFO:Creating metrics dataframe
2021-04-03 18:01:51,838:INFO:Finalizing model
2021-04-03 18:01:52,984:INFO:Creating MLFlow logs
2021-04-03 18:01:53,000:INFO:Model: Extreme Gradient Boosting
2021-04-03 18:01:53,052:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'gpu_id': -1, 'importance_type': 'gain', 'interaction_constraints': '', 'learning_rate': 0.300000012, 'max_delta_step': 0, 'max_depth': 6, 'min_child_weight': 1, 'missing': nan, 'monotone_constraints': '()', 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': 1, 'random_state': 786, 'reg_alpha': 0, 'reg_lambda': 1, 'scale_pos_weight': 1, 'subsample': 1, 'tree_method': 'auto', 'validate_parameters': 1, 'verbosity': 0}
2021-04-03 18:01:53,217:INFO:Initializing predict_model()
2021-04-03 18:01:53,217:INFO:predict_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 18:01:53,217:INFO:Checking exceptions
2021-04-03 18:01:53,217:INFO:Preloading libraries
2021-04-03 18:01:53,547:INFO:Uploading results into container
2021-04-03 18:01:53,548:INFO:Uploading model into container now
2021-04-03 18:01:53,567:INFO:create_model_container: 18
2021-04-03 18:01:53,567:INFO:master_model_container: 18
2021-04-03 18:01:53,567:INFO:display_container: 3
2021-04-03 18:01:53,573:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 18:01:53,574:INFO:create_model() succesfully completed......................................
2021-04-03 18:01:53,732:INFO:Initializing tune_model()
2021-04-03 18:01:53,732:INFO:tune_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-03 18:01:53,732:INFO:Checking exceptions
2021-04-03 18:01:53,732:INFO:Preparing display monitor
2021-04-03 18:01:53,772:INFO:Copying training dataset
2021-04-03 18:01:53,773:INFO:Checking base model
2021-04-03 18:01:53,773:INFO:Base model : Extreme Gradient Boosting
2021-04-03 18:01:53,788:INFO:Declaring metric variables
2021-04-03 18:01:53,806:INFO:Defining Hyperparameters
2021-04-03 18:01:53,936:INFO:Tuning with n_jobs=-1
2021-04-03 18:01:53,936:INFO:Initializing RandomizedSearchCV
2021-04-03 18:02:06,098:INFO:best_params: {'actual_estimator__subsample': 0.9, 'actual_estimator__scale_pos_weight': 5.2, 'actual_estimator__reg_lambda': 0.15, 'actual_estimator__reg_alpha': 0.0005, 'actual_estimator__n_estimators': 270, 'actual_estimator__min_child_weight': 4, 'actual_estimator__max_depth': 8, 'actual_estimator__learning_rate': 0.4, 'actual_estimator__colsample_bytree': 1}
2021-04-03 18:02:06,099:INFO:Hyperparameter search completed
2021-04-03 18:02:06,099:INFO:SubProcess create_model() called ==================================
2021-04-03 18:02:06,106:INFO:Initializing create_model()
2021-04-03 18:02:06,107:INFO:create_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0936F4C0>, kwargs={'subsample': 0.9, 'scale_pos_weight': 5.2, 'reg_lambda': 0.15, 'reg_alpha': 0.0005, 'n_estimators': 270, 'min_child_weight': 4, 'max_depth': 8, 'learning_rate': 0.4, 'colsample_bytree': 1})
2021-04-03 18:02:06,107:INFO:Checking exceptions
2021-04-03 18:02:06,107:INFO:Importing libraries
2021-04-03 18:02:06,107:INFO:Copying training dataset
2021-04-03 18:02:06,109:INFO:Defining folds
2021-04-03 18:02:06,109:INFO:Declaring metric variables
2021-04-03 18:02:06,127:INFO:Importing untrained model
2021-04-03 18:02:06,128:INFO:Declaring custom model
2021-04-03 18:02:06,149:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 18:02:06,200:INFO:Starting cross validation
2021-04-03 18:02:06,201:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:02:07,906:INFO:Calculating mean and std
2021-04-03 18:02:07,908:INFO:Creating metrics dataframe
2021-04-03 18:02:07,931:INFO:Finalizing model
2021-04-03 18:02:08,363:INFO:Uploading results into container
2021-04-03 18:02:08,363:INFO:Uploading model into container now
2021-04-03 18:02:08,363:INFO:create_model_container: 19
2021-04-03 18:02:08,363:INFO:master_model_container: 19
2021-04-03 18:02:08,363:INFO:display_container: 4
2021-04-03 18:02:08,365:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 18:02:08,366:INFO:create_model() succesfully completed......................................
2021-04-03 18:02:08,476:INFO:SubProcess create_model() end ==================================
2021-04-03 18:02:08,477:INFO:Creating MLFlow logs
2021-04-03 18:02:08,492:INFO:Model: Extreme Gradient Boosting
2021-04-03 18:02:08,568:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'gpu_id': -1, 'importance_type': 'gain', 'interaction_constraints': '', 'learning_rate': 0.4, 'max_delta_step': 0, 'max_depth': 8, 'min_child_weight': 4, 'missing': nan, 'monotone_constraints': '()', 'n_estimators': 270, 'n_jobs': -1, 'num_parallel_tree': 1, 'random_state': 786, 'reg_alpha': 0.0005, 'reg_lambda': 0.15, 'scale_pos_weight': 5.2, 'subsample': 0.9, 'tree_method': 'auto', 'validate_parameters': 1, 'verbosity': 0}
2021-04-03 18:02:08,744:INFO:Initializing predict_model()
2021-04-03 18:02:08,744:INFO:predict_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 18:02:08,745:INFO:Checking exceptions
2021-04-03 18:02:08,745:INFO:Preloading libraries
2021-04-03 18:02:09,159:INFO:create_model_container: 19
2021-04-03 18:02:09,160:INFO:master_model_container: 19
2021-04-03 18:02:09,160:INFO:display_container: 4
2021-04-03 18:02:09,163:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 18:02:09,163:INFO:tune_model() succesfully completed......................................
2021-04-03 18:02:21,181:INFO:Initializing plot_model()
2021-04-03 18:02:21,181:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 18:02:21,182:INFO:Checking exceptions
2021-04-03 18:02:21,182:INFO:Preparing display monitor
2021-04-03 18:02:21,195:INFO:Preloading libraries
2021-04-03 18:02:21,244:INFO:Copying training dataset
2021-04-03 18:02:21,245:INFO:Copying test dataset
2021-04-03 18:02:21,245:INFO:Plot type: residuals
2021-04-03 18:02:21,543:INFO:Fitting Model
2021-04-03 18:02:21,617:INFO:Scoring test/hold-out set
2021-04-03 18:02:22,673:INFO:Visual Rendered Successfully
2021-04-03 18:02:22,777:INFO:plot_model() succesfully completed......................................
2021-04-03 18:02:26,406:INFO:Initializing plot_model()
2021-04-03 18:02:26,407:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 18:02:26,407:INFO:Checking exceptions
2021-04-03 18:02:26,407:INFO:Preparing display monitor
2021-04-03 18:02:26,417:INFO:Preloading libraries
2021-04-03 18:02:26,476:INFO:Copying training dataset
2021-04-03 18:02:26,477:INFO:Copying test dataset
2021-04-03 18:02:26,478:INFO:Plot type: error
2021-04-03 18:02:26,481:INFO:Fitting Model
2021-04-03 18:02:26,484:INFO:Scoring test/hold-out set
2021-04-03 18:02:26,885:INFO:Visual Rendered Successfully
2021-04-03 18:02:26,998:INFO:plot_model() succesfully completed......................................
2021-04-03 18:02:32,264:INFO:Initializing plot_model()
2021-04-03 18:02:32,265:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 18:02:32,265:INFO:Checking exceptions
2021-04-03 18:02:32,265:INFO:Preparing display monitor
2021-04-03 18:02:32,274:INFO:Preloading libraries
2021-04-03 18:02:32,316:INFO:Copying training dataset
2021-04-03 18:02:32,317:INFO:Copying test dataset
2021-04-03 18:02:32,318:INFO:Plot type: feature
2021-04-03 18:02:32,319:WARNING:No coef_ found. Trying feature_importances_
2021-04-03 18:02:32,517:INFO:Visual Rendered Successfully
2021-04-03 18:02:32,585:INFO:plot_model() succesfully completed......................................
2021-04-03 18:02:45,322:INFO:Initializing evaluate_model()
2021-04-03 18:02:45,323:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-03 18:02:45,352:INFO:Initializing plot_model()
2021-04-03 18:02:45,353:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 18:02:45,353:INFO:Checking exceptions
2021-04-03 18:02:45,354:INFO:Preparing display monitor
2021-04-03 18:02:45,371:INFO:Preloading libraries
2021-04-03 18:02:45,423:INFO:Copying training dataset
2021-04-03 18:02:45,423:INFO:Copying test dataset
2021-04-03 18:02:45,424:INFO:Plot type: parameter
2021-04-03 18:02:45,434:INFO:Visual Rendered Successfully
2021-04-03 18:02:45,574:INFO:plot_model() succesfully completed......................................
2021-04-03 18:03:04,577:INFO:Initializing interpret_model()
2021-04-03 18:03:04,577:INFO:interpret_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), use_train_data=False, feature=None, kwargs={}, observation=None, plot=summary, save=False)
2021-04-03 18:03:04,578:INFO:Checking exceptions
2021-04-03 18:03:04,804:INFO:plot type: summary
2021-04-03 18:03:04,804:INFO:Creating TreeExplainer
2021-04-03 18:03:04,901:INFO:Compiling shap values
2021-04-03 18:03:05,517:INFO:Visual Rendered Successfully
2021-04-03 18:03:05,517:INFO:interpret_model() succesfully completed......................................
2021-04-03 18:03:14,569:INFO:Initializing automl()
2021-04-03 18:03:14,569:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-03 18:03:14,570:INFO:Model Selection Basis : CV Results on Training set
2021-04-03 18:03:14,575:INFO:Initializing create_model()
2021-04-03 18:03:14,575:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 18:03:14,575:INFO:Checking exceptions
2021-04-03 18:03:14,576:INFO:Importing libraries
2021-04-03 18:03:14,576:INFO:Copying training dataset
2021-04-03 18:03:14,576:INFO:Defining folds
2021-04-03 18:03:14,576:INFO:Declaring metric variables
2021-04-03 18:03:14,576:INFO:Importing untrained model
2021-04-03 18:03:14,576:INFO:Declaring custom model
2021-04-03 18:03:14,578:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 18:03:14,578:INFO:Cross validation set to False
2021-04-03 18:03:14,578:INFO:Fitting Model
2021-04-03 18:03:14,654:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 18:03:14,654:INFO:create_models() succesfully completed......................................
2021-04-03 18:03:14,758:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 18:03:14,759:INFO:automl() succesfully completed......................................
2021-04-03 18:03:19,393:INFO:Initializing predict_model()
2021-04-03 18:03:19,393:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 18:03:19,394:INFO:Checking exceptions
2021-04-03 18:03:19,394:INFO:Preloading libraries
2021-04-03 18:03:19,394:INFO:Preparing display monitor
2021-04-03 18:03:24,910:INFO:Initializing finalize_model()
2021-04-03 18:03:24,910:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-03 18:03:24,913:INFO:Finalizing PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 18:03:24,915:INFO:Initializing create_model()
2021-04-03 18:03:24,915:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 18:03:24,915:INFO:Checking exceptions
2021-04-03 18:03:24,916:INFO:Importing libraries
2021-04-03 18:03:24,916:INFO:Copying training dataset
2021-04-03 18:03:24,917:INFO:Defining folds
2021-04-03 18:03:24,917:INFO:Declaring metric variables
2021-04-03 18:03:24,917:INFO:Importing untrained model
2021-04-03 18:03:24,917:INFO:Declaring custom model
2021-04-03 18:03:24,920:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 18:03:24,920:INFO:Starting cross validation
2021-04-03 18:03:24,921:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 18:03:25,435:INFO:Calculating mean and std
2021-04-03 18:03:25,435:INFO:Creating metrics dataframe
2021-04-03 18:03:25,442:INFO:Finalizing model
2021-04-03 18:03:25,531:INFO:Uploading results into container
2021-04-03 18:03:25,531:INFO:Uploading model into container now
2021-04-03 18:03:25,531:INFO:create_model_container: 20
2021-04-03 18:03:25,532:INFO:master_model_container: 20
2021-04-03 18:03:25,532:INFO:display_container: 6
2021-04-03 18:03:25,533:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 18:03:25,533:INFO:create_model() succesfully completed......................................
2021-04-03 18:03:25,630:INFO:Creating MLFlow logs
2021-04-03 18:03:25,635:INFO:Model: Gradient Boosting Regressor
2021-04-03 18:03:25,678:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 18:03:25,855:INFO:Initializing predict_model()
2021-04-03 18:03:25,855:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 18:03:25,855:INFO:Checking exceptions
2021-04-03 18:03:25,855:INFO:Preloading libraries
2021-04-03 18:03:26,172:INFO:create_model_container: 20
2021-04-03 18:03:26,172:INFO:master_model_container: 20
2021-04-03 18:03:26,172:INFO:display_container: 5
2021-04-03 18:03:26,174:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 18:03:26,175:INFO:finalize_model() succesfully completed......................................
2021-04-03 18:03:26,309:INFO:Initializing predict_model()
2021-04-03 18:03:26,309:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 18:03:26,314:INFO:Checking exceptions
2021-04-03 18:03:26,314:INFO:Preloading libraries
2021-04-03 18:03:26,314:INFO:Preparing display monitor
2021-04-03 18:03:30,056:INFO:Initializing predict_model()
2021-04-03 18:03:30,056:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 18:03:30,056:INFO:Checking exceptions
2021-04-03 18:03:30,056:INFO:Preloading libraries
2021-04-03 18:03:30,056:INFO:Preparing display monitor
2021-04-03 18:03:39,201:INFO:Initializing save_model()
2021-04-03 18:03:39,201:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), model_name=saved_models/best_2nd_model_to_predict_median_income_xgboost, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2021-04-03 18:03:39,202:INFO:Adding model into prep_pipe
2021-04-03 18:03:39,237:INFO:saved_models/best_2nd_model_to_predict_median_income_xgboost.pkl saved in current working directory
2021-04-03 18:03:39,252:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                                                                                     min_impurity_decrease=0.0,
                                                                                     min_impurity_split=None,
                                                                                     min_samples_leaf=1,
                                                                                     min_samples_split=2,
                                                                                     min_weight_fraction_leaf=0.0,
                                                                                     n_estimators=100,
                                                                                     n_iter_no_change=None,
                                                                                     presort='deprecated',
                                                                                     random_state=786,
                                                                                     subsample=1.0,
                                                                                     tol=0.0001,
                                                                                     validation_fraction=0.1,
                                                                                     verbose=0,
                                                                                     warm_start=False),
                                                 subsample=1.0, tol=0.0001,
                                                 validation_fraction=0.1,
                                                 verbose=0,
                                                 warm_start=False)]],
         verbose=False)
2021-04-03 18:03:39,253:INFO:save_model() succesfully completed......................................
2021-04-03 19:23:53,768:INFO:PyCaret Supervised Module
2021-04-03 19:23:53,769:INFO:ML Usecase: regression
2021-04-03 19:23:53,770:INFO:version 2.3.0
2021-04-03 19:23:53,770:INFO:Initializing setup()
2021-04-03 19:23:53,770:INFO:setup(target=Median income, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 19:23:53,771:INFO:Checking environment
2021-04-03 19:23:53,771:INFO:python_version: 3.9.1
2021-04-03 19:23:53,771:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 19:23:53,772:INFO:machine: AMD64
2021-04-03 19:23:53,772:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 19:23:53,776:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 19:23:53,776:INFO:Checking libraries
2021-04-03 19:23:53,776:INFO:pd==1.2.2
2021-04-03 19:23:53,776:INFO:numpy==1.19.5
2021-04-03 19:23:53,777:INFO:sklearn==0.23.2
2021-04-03 19:23:53,777:INFO:lightgbm==3.1.1
2021-04-03 19:23:53,777:WARNING:catboost not found
2021-04-03 19:23:53,778:INFO:xgboost==1.3.3
2021-04-03 19:23:53,778:INFO:mlflow==1.14.1
2021-04-03 19:23:53,778:INFO:Checking Exceptions
2021-04-03 19:23:53,778:INFO:Declaring global variables
2021-04-03 19:23:53,778:INFO:USI: 9603
2021-04-03 19:23:53,778:INFO:pycaret_globals: {'exp_name_log', '_all_models_internal', 'fold_shuffle_param', '_all_models', 'prep_pipe', 'seed', 'fix_imbalance_method_param', 'pycaret_globals', 'fold_generator', 'X', '_available_plots', 'fold_groups_param', 'logging_param', 'create_model_container', '_gpu_n_jobs_param', 'target_param', 'log_plots_param', 'iterative_imputation_iters_param', 'experiment__', 'fold_param', 'X_test', 'imputation_regressor', '_ml_usecase', 'imputation_classifier', 'data_before_preprocess', 'n_jobs_param', 'html_param', 'transform_target_method_param', 'fix_imbalance_param', '_all_metrics', '_internal_pipeline', 'gpu_param', 'transform_target_param', 'y_train', 'X_train', 'USI', 'y_test', 'y', 'master_model_container', 'display_container', 'stratify_param'}
2021-04-03 19:23:53,779:INFO:Preparing display monitor
2021-04-03 19:23:53,779:INFO:Preparing display monitor
2021-04-03 19:23:53,805:INFO:Importing libraries
2021-04-03 19:23:53,806:INFO:Copying data for preprocessing
2021-04-03 19:23:53,815:INFO:Declaring preprocessing parameters
2021-04-03 19:23:53,817:INFO:Creating preprocessing pipeline
2021-04-03 19:23:53,829:INFO:Preprocessing pipeline created successfully
2021-04-03 19:23:53,830:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 19:23:53,830:INFO:Creating global containers
2021-04-03 19:23:53,831:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 19:23:56,258:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 19:23:56,372:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 19:23:56,372:INFO:Creating grid variables
2021-04-03 19:23:56,391:INFO:Logging experiment in MLFlow
2021-04-03 19:23:56,398:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-03 19:23:56,400:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-03 19:23:56,559:INFO:SubProcess save_model() called ==================================
2021-04-03 19:23:56,570:INFO:Initializing save_model()
2021-04-03 19:23:56,570:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 19:23:56,570:INFO:Adding model into prep_pipe
2021-04-03 19:23:56,571:WARNING:Only Model saved as it was a pipeline.
2021-04-03 19:23:56,587:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 19:23:56,593:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 19:23:56,593:INFO:save_model() succesfully completed......................................
2021-04-03 19:23:56,793:INFO:SubProcess save_model() end ==================================
2021-04-03 19:23:56,920:INFO:create_model_container: 0
2021-04-03 19:23:56,921:INFO:master_model_container: 0
2021-04-03 19:23:56,921:INFO:display_container: 1
2021-04-03 19:23:56,927:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 19:23:56,927:INFO:setup() succesfully completed......................................
2021-04-03 19:24:01,676:INFO:Initializing compare_models()
2021-04-03 19:24:01,676:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-03 19:24:01,676:INFO:Checking exceptions
2021-04-03 19:24:01,677:INFO:Preparing display monitor
2021-04-03 19:24:01,677:INFO:Preparing display monitor
2021-04-03 19:24:01,713:INFO:Initializing Linear Regression
2021-04-03 19:24:01,714:INFO:Total runtime is 1.6629695892333984e-05 minutes
2021-04-03 19:24:01,726:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:01,726:INFO:Initializing create_model()
2021-04-03 19:24:01,727:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:01,727:INFO:Checking exceptions
2021-04-03 19:24:01,727:INFO:Importing libraries
2021-04-03 19:24:01,727:INFO:Copying training dataset
2021-04-03 19:24:01,729:INFO:Defining folds
2021-04-03 19:24:01,729:INFO:Declaring metric variables
2021-04-03 19:24:01,741:INFO:Importing untrained model
2021-04-03 19:24:01,752:INFO:Linear Regression Imported succesfully
2021-04-03 19:24:01,776:INFO:Starting cross validation
2021-04-03 19:24:01,777:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:07,294:INFO:Calculating mean and std
2021-04-03 19:24:07,296:INFO:Creating metrics dataframe
2021-04-03 19:24:07,303:INFO:Uploading results into container
2021-04-03 19:24:07,303:INFO:Uploading model into container now
2021-04-03 19:24:07,303:INFO:create_model_container: 1
2021-04-03 19:24:07,304:INFO:master_model_container: 1
2021-04-03 19:24:07,304:INFO:display_container: 2
2021-04-03 19:24:07,304:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 19:24:07,305:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:07,403:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:07,403:INFO:Creating metrics dataframe
2021-04-03 19:24:07,419:INFO:Initializing Lasso Regression
2021-04-03 19:24:07,419:INFO:Total runtime is 0.09511226415634155 minutes
2021-04-03 19:24:07,429:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:07,430:INFO:Initializing create_model()
2021-04-03 19:24:07,430:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:07,430:INFO:Checking exceptions
2021-04-03 19:24:07,430:INFO:Importing libraries
2021-04-03 19:24:07,431:INFO:Copying training dataset
2021-04-03 19:24:07,432:INFO:Defining folds
2021-04-03 19:24:07,432:INFO:Declaring metric variables
2021-04-03 19:24:07,441:INFO:Importing untrained model
2021-04-03 19:24:07,455:INFO:Lasso Regression Imported succesfully
2021-04-03 19:24:07,477:INFO:Starting cross validation
2021-04-03 19:24:07,478:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:07,566:INFO:Calculating mean and std
2021-04-03 19:24:07,567:INFO:Creating metrics dataframe
2021-04-03 19:24:07,571:INFO:Uploading results into container
2021-04-03 19:24:07,571:INFO:Uploading model into container now
2021-04-03 19:24:07,572:INFO:create_model_container: 2
2021-04-03 19:24:07,572:INFO:master_model_container: 2
2021-04-03 19:24:07,572:INFO:display_container: 2
2021-04-03 19:24:07,573:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 19:24:07,573:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:07,669:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:07,669:INFO:Creating metrics dataframe
2021-04-03 19:24:07,695:INFO:Initializing Ridge Regression
2021-04-03 19:24:07,695:INFO:Total runtime is 0.09970002174377442 minutes
2021-04-03 19:24:07,704:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:07,705:INFO:Initializing create_model()
2021-04-03 19:24:07,705:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:07,705:INFO:Checking exceptions
2021-04-03 19:24:07,705:INFO:Importing libraries
2021-04-03 19:24:07,705:INFO:Copying training dataset
2021-04-03 19:24:07,707:INFO:Defining folds
2021-04-03 19:24:07,707:INFO:Declaring metric variables
2021-04-03 19:24:07,716:INFO:Importing untrained model
2021-04-03 19:24:07,727:INFO:Ridge Regression Imported succesfully
2021-04-03 19:24:07,750:INFO:Starting cross validation
2021-04-03 19:24:07,751:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:07,832:INFO:Calculating mean and std
2021-04-03 19:24:07,833:INFO:Creating metrics dataframe
2021-04-03 19:24:07,841:INFO:Uploading results into container
2021-04-03 19:24:07,841:INFO:Uploading model into container now
2021-04-03 19:24:07,841:INFO:create_model_container: 3
2021-04-03 19:24:07,841:INFO:master_model_container: 3
2021-04-03 19:24:07,841:INFO:display_container: 2
2021-04-03 19:24:07,842:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:24:07,843:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:07,938:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:07,939:INFO:Creating metrics dataframe
2021-04-03 19:24:07,962:INFO:Initializing Elastic Net
2021-04-03 19:24:07,963:INFO:Total runtime is 0.10417136748631796 minutes
2021-04-03 19:24:07,974:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:07,974:INFO:Initializing create_model()
2021-04-03 19:24:07,975:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:07,975:INFO:Checking exceptions
2021-04-03 19:24:07,975:INFO:Importing libraries
2021-04-03 19:24:07,975:INFO:Copying training dataset
2021-04-03 19:24:07,976:INFO:Defining folds
2021-04-03 19:24:07,976:INFO:Declaring metric variables
2021-04-03 19:24:07,984:INFO:Importing untrained model
2021-04-03 19:24:07,995:INFO:Elastic Net Imported succesfully
2021-04-03 19:24:08,015:INFO:Starting cross validation
2021-04-03 19:24:08,016:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:08,100:INFO:Calculating mean and std
2021-04-03 19:24:08,101:INFO:Creating metrics dataframe
2021-04-03 19:24:08,107:INFO:Uploading results into container
2021-04-03 19:24:08,107:INFO:Uploading model into container now
2021-04-03 19:24:08,107:INFO:create_model_container: 4
2021-04-03 19:24:08,109:INFO:master_model_container: 4
2021-04-03 19:24:08,109:INFO:display_container: 2
2021-04-03 19:24:08,111:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 19:24:08,111:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:08,210:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:08,210:INFO:Creating metrics dataframe
2021-04-03 19:24:08,239:INFO:Initializing Least Angle Regression
2021-04-03 19:24:08,239:INFO:Total runtime is 0.10877573092778524 minutes
2021-04-03 19:24:08,248:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:08,249:INFO:Initializing create_model()
2021-04-03 19:24:08,249:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:08,249:INFO:Checking exceptions
2021-04-03 19:24:08,249:INFO:Importing libraries
2021-04-03 19:24:08,249:INFO:Copying training dataset
2021-04-03 19:24:08,250:INFO:Defining folds
2021-04-03 19:24:08,250:INFO:Declaring metric variables
2021-04-03 19:24:08,263:INFO:Importing untrained model
2021-04-03 19:24:08,280:INFO:Least Angle Regression Imported succesfully
2021-04-03 19:24:08,306:INFO:Starting cross validation
2021-04-03 19:24:08,307:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:09,401:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-03 19:24:09,402:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 19:24:09,403:INFO:Initializing create_model()
2021-04-03 19:24:09,403:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:09,403:INFO:Checking exceptions
2021-04-03 19:24:09,403:INFO:Importing libraries
2021-04-03 19:24:09,403:INFO:Copying training dataset
2021-04-03 19:24:09,404:INFO:Defining folds
2021-04-03 19:24:09,404:INFO:Declaring metric variables
2021-04-03 19:24:09,414:INFO:Importing untrained model
2021-04-03 19:24:09,424:INFO:Least Angle Regression Imported succesfully
2021-04-03 19:24:09,449:INFO:Starting cross validation
2021-04-03 19:24:09,450:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:16,493:ERROR:create_model() for lar raised an exception:
2021-04-03 19:24:16,494:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 19:24:16,494:INFO:Initializing Lasso Least Angle Regression
2021-04-03 19:24:16,494:INFO:Total runtime is 0.2463573455810547 minutes
2021-04-03 19:24:16,508:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:16,509:INFO:Initializing create_model()
2021-04-03 19:24:16,509:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:16,509:INFO:Checking exceptions
2021-04-03 19:24:16,510:INFO:Importing libraries
2021-04-03 19:24:16,510:INFO:Copying training dataset
2021-04-03 19:24:16,511:INFO:Defining folds
2021-04-03 19:24:16,512:INFO:Declaring metric variables
2021-04-03 19:24:16,525:INFO:Importing untrained model
2021-04-03 19:24:16,546:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-03 19:24:16,584:INFO:Starting cross validation
2021-04-03 19:24:16,585:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:22,604:INFO:Calculating mean and std
2021-04-03 19:24:22,606:INFO:Creating metrics dataframe
2021-04-03 19:24:22,614:INFO:Uploading results into container
2021-04-03 19:24:22,614:INFO:Uploading model into container now
2021-04-03 19:24:22,614:INFO:create_model_container: 5
2021-04-03 19:24:22,615:INFO:master_model_container: 5
2021-04-03 19:24:22,615:INFO:display_container: 2
2021-04-03 19:24:22,617:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-03 19:24:22,617:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:22,727:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:22,727:INFO:Creating metrics dataframe
2021-04-03 19:24:22,745:INFO:Initializing Orthogonal Matching Pursuit
2021-04-03 19:24:22,745:INFO:Total runtime is 0.35054241418838505 minutes
2021-04-03 19:24:22,760:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:22,760:INFO:Initializing create_model()
2021-04-03 19:24:22,760:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:22,761:INFO:Checking exceptions
2021-04-03 19:24:22,761:INFO:Importing libraries
2021-04-03 19:24:22,761:INFO:Copying training dataset
2021-04-03 19:24:22,762:INFO:Defining folds
2021-04-03 19:24:22,763:INFO:Declaring metric variables
2021-04-03 19:24:22,776:INFO:Importing untrained model
2021-04-03 19:24:22,786:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-03 19:24:22,819:INFO:Starting cross validation
2021-04-03 19:24:22,820:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:22,914:INFO:Calculating mean and std
2021-04-03 19:24:22,915:INFO:Creating metrics dataframe
2021-04-03 19:24:22,925:INFO:Uploading results into container
2021-04-03 19:24:22,925:INFO:Uploading model into container now
2021-04-03 19:24:22,929:INFO:create_model_container: 6
2021-04-03 19:24:22,929:INFO:master_model_container: 6
2021-04-03 19:24:22,930:INFO:display_container: 2
2021-04-03 19:24:22,931:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-03 19:24:22,931:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:23,041:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:23,041:INFO:Creating metrics dataframe
2021-04-03 19:24:23,063:INFO:Initializing Bayesian Ridge
2021-04-03 19:24:23,064:INFO:Total runtime is 0.3558614293734233 minutes
2021-04-03 19:24:23,077:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:23,078:INFO:Initializing create_model()
2021-04-03 19:24:23,078:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:23,078:INFO:Checking exceptions
2021-04-03 19:24:23,078:INFO:Importing libraries
2021-04-03 19:24:23,078:INFO:Copying training dataset
2021-04-03 19:24:23,079:INFO:Defining folds
2021-04-03 19:24:23,080:INFO:Declaring metric variables
2021-04-03 19:24:23,098:INFO:Importing untrained model
2021-04-03 19:24:23,114:INFO:Bayesian Ridge Imported succesfully
2021-04-03 19:24:23,135:INFO:Starting cross validation
2021-04-03 19:24:23,136:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:23,230:INFO:Calculating mean and std
2021-04-03 19:24:23,233:INFO:Creating metrics dataframe
2021-04-03 19:24:23,242:INFO:Uploading results into container
2021-04-03 19:24:23,242:INFO:Uploading model into container now
2021-04-03 19:24:23,243:INFO:create_model_container: 7
2021-04-03 19:24:23,243:INFO:master_model_container: 7
2021-04-03 19:24:23,243:INFO:display_container: 2
2021-04-03 19:24:23,245:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 19:24:23,245:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:23,365:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:23,365:INFO:Creating metrics dataframe
2021-04-03 19:24:23,394:INFO:Initializing Passive Aggressive Regressor
2021-04-03 19:24:23,394:INFO:Total runtime is 0.36135954062143966 minutes
2021-04-03 19:24:23,408:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:23,408:INFO:Initializing create_model()
2021-04-03 19:24:23,409:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:23,409:INFO:Checking exceptions
2021-04-03 19:24:23,409:INFO:Importing libraries
2021-04-03 19:24:23,409:INFO:Copying training dataset
2021-04-03 19:24:23,410:INFO:Defining folds
2021-04-03 19:24:23,410:INFO:Declaring metric variables
2021-04-03 19:24:23,424:INFO:Importing untrained model
2021-04-03 19:24:23,442:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-03 19:24:23,463:INFO:Starting cross validation
2021-04-03 19:24:23,464:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:23,603:INFO:Calculating mean and std
2021-04-03 19:24:23,607:INFO:Creating metrics dataframe
2021-04-03 19:24:23,622:INFO:Uploading results into container
2021-04-03 19:24:23,622:INFO:Uploading model into container now
2021-04-03 19:24:23,623:INFO:create_model_container: 8
2021-04-03 19:24:23,623:INFO:master_model_container: 8
2021-04-03 19:24:23,626:INFO:display_container: 2
2021-04-03 19:24:23,629:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:24:23,629:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:23,780:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:23,780:INFO:Creating metrics dataframe
2021-04-03 19:24:23,812:INFO:Initializing Huber Regressor
2021-04-03 19:24:23,812:INFO:Total runtime is 0.36832993427912397 minutes
2021-04-03 19:24:23,830:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:23,831:INFO:Initializing create_model()
2021-04-03 19:24:23,831:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:23,831:INFO:Checking exceptions
2021-04-03 19:24:23,831:INFO:Importing libraries
2021-04-03 19:24:23,831:INFO:Copying training dataset
2021-04-03 19:24:23,833:INFO:Defining folds
2021-04-03 19:24:23,833:INFO:Declaring metric variables
2021-04-03 19:24:23,847:INFO:Importing untrained model
2021-04-03 19:24:23,857:INFO:Huber Regressor Imported succesfully
2021-04-03 19:24:23,881:INFO:Starting cross validation
2021-04-03 19:24:23,882:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:24,099:INFO:Calculating mean and std
2021-04-03 19:24:24,100:INFO:Creating metrics dataframe
2021-04-03 19:24:24,111:INFO:Uploading results into container
2021-04-03 19:24:24,111:INFO:Uploading model into container now
2021-04-03 19:24:24,112:INFO:create_model_container: 9
2021-04-03 19:24:24,112:INFO:master_model_container: 9
2021-04-03 19:24:24,112:INFO:display_container: 2
2021-04-03 19:24:24,114:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 19:24:24,114:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:24,272:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:24,272:INFO:Creating metrics dataframe
2021-04-03 19:24:24,303:INFO:Initializing K Neighbors Regressor
2021-04-03 19:24:24,303:INFO:Total runtime is 0.376498548189799 minutes
2021-04-03 19:24:24,320:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:24,321:INFO:Initializing create_model()
2021-04-03 19:24:24,322:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:24,322:INFO:Checking exceptions
2021-04-03 19:24:24,322:INFO:Importing libraries
2021-04-03 19:24:24,322:INFO:Copying training dataset
2021-04-03 19:24:24,323:INFO:Defining folds
2021-04-03 19:24:24,324:INFO:Declaring metric variables
2021-04-03 19:24:24,337:INFO:Importing untrained model
2021-04-03 19:24:24,352:INFO:K Neighbors Regressor Imported succesfully
2021-04-03 19:24:24,378:INFO:Starting cross validation
2021-04-03 19:24:24,379:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:24,516:INFO:Calculating mean and std
2021-04-03 19:24:24,518:INFO:Creating metrics dataframe
2021-04-03 19:24:24,526:INFO:Uploading results into container
2021-04-03 19:24:24,526:INFO:Uploading model into container now
2021-04-03 19:24:24,527:INFO:create_model_container: 10
2021-04-03 19:24:24,527:INFO:master_model_container: 10
2021-04-03 19:24:24,527:INFO:display_container: 2
2021-04-03 19:24:24,529:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-03 19:24:24,529:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:24,632:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:24,632:INFO:Creating metrics dataframe
2021-04-03 19:24:24,661:INFO:Initializing Decision Tree Regressor
2021-04-03 19:24:24,661:INFO:Total runtime is 0.38246909777323407 minutes
2021-04-03 19:24:24,677:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:24,678:INFO:Initializing create_model()
2021-04-03 19:24:24,678:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:24,678:INFO:Checking exceptions
2021-04-03 19:24:24,678:INFO:Importing libraries
2021-04-03 19:24:24,678:INFO:Copying training dataset
2021-04-03 19:24:24,681:INFO:Defining folds
2021-04-03 19:24:24,681:INFO:Declaring metric variables
2021-04-03 19:24:24,697:INFO:Importing untrained model
2021-04-03 19:24:24,708:INFO:Decision Tree Regressor Imported succesfully
2021-04-03 19:24:24,735:INFO:Starting cross validation
2021-04-03 19:24:24,736:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:24,879:INFO:Calculating mean and std
2021-04-03 19:24:24,880:INFO:Creating metrics dataframe
2021-04-03 19:24:24,891:INFO:Uploading results into container
2021-04-03 19:24:24,891:INFO:Uploading model into container now
2021-04-03 19:24:24,892:INFO:create_model_container: 11
2021-04-03 19:24:24,892:INFO:master_model_container: 11
2021-04-03 19:24:24,892:INFO:display_container: 2
2021-04-03 19:24:24,894:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-03 19:24:24,894:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:25,045:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:25,045:INFO:Creating metrics dataframe
2021-04-03 19:24:25,073:INFO:Initializing Random Forest Regressor
2021-04-03 19:24:25,073:INFO:Total runtime is 0.38933662176132205 minutes
2021-04-03 19:24:25,091:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:25,092:INFO:Initializing create_model()
2021-04-03 19:24:25,092:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:25,092:INFO:Checking exceptions
2021-04-03 19:24:25,092:INFO:Importing libraries
2021-04-03 19:24:25,092:INFO:Copying training dataset
2021-04-03 19:24:25,094:INFO:Defining folds
2021-04-03 19:24:25,095:INFO:Declaring metric variables
2021-04-03 19:24:25,109:INFO:Importing untrained model
2021-04-03 19:24:25,118:INFO:Random Forest Regressor Imported succesfully
2021-04-03 19:24:25,143:INFO:Starting cross validation
2021-04-03 19:24:25,144:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:26,329:INFO:Calculating mean and std
2021-04-03 19:24:26,330:INFO:Creating metrics dataframe
2021-04-03 19:24:26,335:INFO:Uploading results into container
2021-04-03 19:24:26,335:INFO:Uploading model into container now
2021-04-03 19:24:26,335:INFO:create_model_container: 12
2021-04-03 19:24:26,336:INFO:master_model_container: 12
2021-04-03 19:24:26,336:INFO:display_container: 2
2021-04-03 19:24:26,340:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 19:24:26,340:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:26,462:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:26,462:INFO:Creating metrics dataframe
2021-04-03 19:24:26,490:INFO:Initializing Extra Trees Regressor
2021-04-03 19:24:26,490:INFO:Total runtime is 0.4129640579223633 minutes
2021-04-03 19:24:26,499:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:26,500:INFO:Initializing create_model()
2021-04-03 19:24:26,500:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:26,500:INFO:Checking exceptions
2021-04-03 19:24:26,500:INFO:Importing libraries
2021-04-03 19:24:26,500:INFO:Copying training dataset
2021-04-03 19:24:26,504:INFO:Defining folds
2021-04-03 19:24:26,505:INFO:Declaring metric variables
2021-04-03 19:24:26,523:INFO:Importing untrained model
2021-04-03 19:24:26,536:INFO:Extra Trees Regressor Imported succesfully
2021-04-03 19:24:26,559:INFO:Starting cross validation
2021-04-03 19:24:26,561:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:27,399:INFO:Calculating mean and std
2021-04-03 19:24:27,401:INFO:Creating metrics dataframe
2021-04-03 19:24:27,409:INFO:Uploading results into container
2021-04-03 19:24:27,410:INFO:Uploading model into container now
2021-04-03 19:24:27,410:INFO:create_model_container: 13
2021-04-03 19:24:27,410:INFO:master_model_container: 13
2021-04-03 19:24:27,411:INFO:display_container: 2
2021-04-03 19:24:27,414:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 19:24:27,414:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:27,565:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:27,565:INFO:Creating metrics dataframe
2021-04-03 19:24:27,595:INFO:Initializing AdaBoost Regressor
2021-04-03 19:24:27,595:INFO:Total runtime is 0.4313717524210612 minutes
2021-04-03 19:24:27,611:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:27,612:INFO:Initializing create_model()
2021-04-03 19:24:27,612:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:27,612:INFO:Checking exceptions
2021-04-03 19:24:27,612:INFO:Importing libraries
2021-04-03 19:24:27,612:INFO:Copying training dataset
2021-04-03 19:24:27,613:INFO:Defining folds
2021-04-03 19:24:27,614:INFO:Declaring metric variables
2021-04-03 19:24:27,628:INFO:Importing untrained model
2021-04-03 19:24:27,645:INFO:AdaBoost Regressor Imported succesfully
2021-04-03 19:24:27,666:INFO:Starting cross validation
2021-04-03 19:24:27,667:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:28,068:INFO:Calculating mean and std
2021-04-03 19:24:28,069:INFO:Creating metrics dataframe
2021-04-03 19:24:28,076:INFO:Uploading results into container
2021-04-03 19:24:28,076:INFO:Uploading model into container now
2021-04-03 19:24:28,076:INFO:create_model_container: 14
2021-04-03 19:24:28,076:INFO:master_model_container: 14
2021-04-03 19:24:28,076:INFO:display_container: 2
2021-04-03 19:24:28,077:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-03 19:24:28,077:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:28,195:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:28,195:INFO:Creating metrics dataframe
2021-04-03 19:24:28,231:INFO:Initializing Gradient Boosting Regressor
2021-04-03 19:24:28,232:INFO:Total runtime is 0.4419906497001648 minutes
2021-04-03 19:24:28,246:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:28,246:INFO:Initializing create_model()
2021-04-03 19:24:28,247:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:28,247:INFO:Checking exceptions
2021-04-03 19:24:28,247:INFO:Importing libraries
2021-04-03 19:24:28,247:INFO:Copying training dataset
2021-04-03 19:24:28,248:INFO:Defining folds
2021-04-03 19:24:28,249:INFO:Declaring metric variables
2021-04-03 19:24:28,265:INFO:Importing untrained model
2021-04-03 19:24:28,285:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 19:24:28,308:INFO:Starting cross validation
2021-04-03 19:24:28,309:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:28,679:INFO:Calculating mean and std
2021-04-03 19:24:28,681:INFO:Creating metrics dataframe
2021-04-03 19:24:28,690:INFO:Uploading results into container
2021-04-03 19:24:28,690:INFO:Uploading model into container now
2021-04-03 19:24:28,695:INFO:create_model_container: 15
2021-04-03 19:24:28,695:INFO:master_model_container: 15
2021-04-03 19:24:28,695:INFO:display_container: 2
2021-04-03 19:24:28,699:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:24:28,699:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:28,833:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:28,834:INFO:Creating metrics dataframe
2021-04-03 19:24:28,871:INFO:Initializing Extreme Gradient Boosting
2021-04-03 19:24:28,871:INFO:Total runtime is 0.4526452302932739 minutes
2021-04-03 19:24:28,881:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:28,882:INFO:Initializing create_model()
2021-04-03 19:24:28,882:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:28,882:INFO:Checking exceptions
2021-04-03 19:24:28,882:INFO:Importing libraries
2021-04-03 19:24:28,882:INFO:Copying training dataset
2021-04-03 19:24:28,883:INFO:Defining folds
2021-04-03 19:24:28,883:INFO:Declaring metric variables
2021-04-03 19:24:28,896:INFO:Importing untrained model
2021-04-03 19:24:28,912:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 19:24:28,941:INFO:Starting cross validation
2021-04-03 19:24:28,942:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:31,176:INFO:Calculating mean and std
2021-04-03 19:24:31,178:INFO:Creating metrics dataframe
2021-04-03 19:24:31,186:INFO:Uploading results into container
2021-04-03 19:24:31,187:INFO:Uploading model into container now
2021-04-03 19:24:31,187:INFO:create_model_container: 16
2021-04-03 19:24:31,187:INFO:master_model_container: 16
2021-04-03 19:24:31,187:INFO:display_container: 2
2021-04-03 19:24:31,193:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 19:24:31,193:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:31,312:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:31,312:INFO:Creating metrics dataframe
2021-04-03 19:24:31,337:INFO:Initializing Light Gradient Boosting Machine
2021-04-03 19:24:31,337:INFO:Total runtime is 0.4937365690867106 minutes
2021-04-03 19:24:31,348:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:31,348:INFO:Initializing create_model()
2021-04-03 19:24:31,349:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A1116A0>, kwargs={})
2021-04-03 19:24:31,349:INFO:Checking exceptions
2021-04-03 19:24:31,349:INFO:Importing libraries
2021-04-03 19:24:31,349:INFO:Copying training dataset
2021-04-03 19:24:31,350:INFO:Defining folds
2021-04-03 19:24:31,350:INFO:Declaring metric variables
2021-04-03 19:24:31,364:INFO:Importing untrained model
2021-04-03 19:24:31,377:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-03 19:24:31,413:INFO:Starting cross validation
2021-04-03 19:24:31,414:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:32,308:INFO:Calculating mean and std
2021-04-03 19:24:32,311:INFO:Creating metrics dataframe
2021-04-03 19:24:32,320:INFO:Uploading results into container
2021-04-03 19:24:32,320:INFO:Uploading model into container now
2021-04-03 19:24:32,321:INFO:create_model_container: 17
2021-04-03 19:24:32,321:INFO:master_model_container: 17
2021-04-03 19:24:32,322:INFO:display_container: 2
2021-04-03 19:24:32,325:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-03 19:24:32,325:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:32,449:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:32,449:INFO:Creating metrics dataframe
2021-04-03 19:24:32,509:INFO:Initializing create_model()
2021-04-03 19:24:32,509:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 19:24:32,509:INFO:Checking exceptions
2021-04-03 19:24:32,510:INFO:Importing libraries
2021-04-03 19:24:32,510:INFO:Copying training dataset
2021-04-03 19:24:32,510:INFO:Defining folds
2021-04-03 19:24:32,510:INFO:Declaring metric variables
2021-04-03 19:24:32,510:INFO:Importing untrained model
2021-04-03 19:24:32,510:INFO:Declaring custom model
2021-04-03 19:24:32,514:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 19:24:32,514:INFO:Cross validation set to False
2021-04-03 19:24:32,514:INFO:Fitting Model
2021-04-03 19:24:32,605:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:24:32,606:INFO:create_models() succesfully completed......................................
2021-04-03 19:24:32,701:INFO:Creating MLFlow logs
2021-04-03 19:24:32,718:INFO:Model: Gradient Boosting Regressor
2021-04-03 19:24:32,782:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 19:24:32,938:INFO:Initializing predict_model()
2021-04-03 19:24:32,938:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 19:24:32,938:INFO:Checking exceptions
2021-04-03 19:24:32,938:INFO:Preloading libraries
2021-04-03 19:24:33,211:INFO:Creating MLFlow logs
2021-04-03 19:24:33,224:INFO:Model: Extreme Gradient Boosting
2021-04-03 19:24:33,279:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-03 19:24:33,577:INFO:Creating MLFlow logs
2021-04-03 19:24:33,590:INFO:Model: Random Forest Regressor
2021-04-03 19:24:33,635:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 19:24:33,960:INFO:Creating MLFlow logs
2021-04-03 19:24:33,975:INFO:Model: Decision Tree Regressor
2021-04-03 19:24:34,048:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-03 19:24:34,357:INFO:Creating MLFlow logs
2021-04-03 19:24:34,373:INFO:Model: Extra Trees Regressor
2021-04-03 19:24:34,433:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 19:24:34,779:INFO:Creating MLFlow logs
2021-04-03 19:24:34,792:INFO:Model: Light Gradient Boosting Machine
2021-04-03 19:24:34,842:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-03 19:24:35,145:INFO:Creating MLFlow logs
2021-04-03 19:24:35,163:INFO:Model: AdaBoost Regressor
2021-04-03 19:24:35,234:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-03 19:24:35,542:INFO:Creating MLFlow logs
2021-04-03 19:24:35,559:INFO:Model: Huber Regressor
2021-04-03 19:24:35,623:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 19:24:35,924:INFO:Creating MLFlow logs
2021-04-03 19:24:35,939:INFO:Model: K Neighbors Regressor
2021-04-03 19:24:35,989:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-03 19:24:36,300:INFO:Creating MLFlow logs
2021-04-03 19:24:36,318:INFO:Model: Ridge Regression
2021-04-03 19:24:36,408:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 19:24:36,763:INFO:Creating MLFlow logs
2021-04-03 19:24:36,778:INFO:Model: Linear Regression
2021-04-03 19:24:36,844:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 19:24:37,234:INFO:Creating MLFlow logs
2021-04-03 19:24:37,253:INFO:Model: Bayesian Ridge
2021-04-03 19:24:37,315:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 19:24:37,671:INFO:Creating MLFlow logs
2021-04-03 19:24:37,686:INFO:Model: Orthogonal Matching Pursuit
2021-04-03 19:24:37,768:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-03 19:24:38,067:INFO:Creating MLFlow logs
2021-04-03 19:24:38,089:INFO:Model: Lasso Regression
2021-04-03 19:24:38,151:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 19:24:38,565:INFO:Creating MLFlow logs
2021-04-03 19:24:38,589:INFO:Model: Elastic Net
2021-04-03 19:24:38,649:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 19:24:38,974:INFO:Creating MLFlow logs
2021-04-03 19:24:38,989:INFO:Model: Least Angle Regression
2021-04-03 19:24:39,049:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-03 19:24:39,377:INFO:Creating MLFlow logs
2021-04-03 19:24:39,390:INFO:Model: Passive Aggressive Regressor
2021-04-03 19:24:39,451:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 19:24:39,796:INFO:create_model_container: 17
2021-04-03 19:24:39,796:INFO:master_model_container: 17
2021-04-03 19:24:39,797:INFO:display_container: 2
2021-04-03 19:24:39,800:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:24:39,800:INFO:compare_models() succesfully completed......................................
2021-04-03 19:24:39,811:INFO:Initializing create_model()
2021-04-03 19:24:39,811:INFO:create_model(estimator=gbr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-03 19:24:39,811:INFO:Checking exceptions
2021-04-03 19:24:39,811:INFO:Preparing display monitor
2021-04-03 19:24:39,845:INFO:Importing libraries
2021-04-03 19:24:39,845:INFO:Copying training dataset
2021-04-03 19:24:39,848:INFO:Defining folds
2021-04-03 19:24:39,848:INFO:Declaring metric variables
2021-04-03 19:24:39,864:INFO:Importing untrained model
2021-04-03 19:24:39,882:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 19:24:39,927:INFO:Starting cross validation
2021-04-03 19:24:39,928:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:40,520:INFO:Calculating mean and std
2021-04-03 19:24:40,524:INFO:Creating metrics dataframe
2021-04-03 19:24:40,543:INFO:Finalizing model
2021-04-03 19:24:40,653:INFO:Creating MLFlow logs
2021-04-03 19:24:40,683:INFO:Model: Gradient Boosting Regressor
2021-04-03 19:24:40,742:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 19:24:40,948:INFO:Initializing predict_model()
2021-04-03 19:24:40,948:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 19:24:40,949:INFO:Checking exceptions
2021-04-03 19:24:40,949:INFO:Preloading libraries
2021-04-03 19:24:41,307:INFO:Uploading results into container
2021-04-03 19:24:41,307:INFO:Uploading model into container now
2021-04-03 19:24:41,355:INFO:create_model_container: 18
2021-04-03 19:24:41,356:INFO:master_model_container: 18
2021-04-03 19:24:41,360:INFO:display_container: 3
2021-04-03 19:24:41,365:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:24:41,365:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:52,908:INFO:Initializing tune_model()
2021-04-03 19:24:52,908:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-03 19:24:52,909:INFO:Checking exceptions
2021-04-03 19:24:52,910:INFO:Preparing display monitor
2021-04-03 19:24:52,941:INFO:Copying training dataset
2021-04-03 19:24:52,942:INFO:Checking base model
2021-04-03 19:24:52,943:INFO:Base model : Gradient Boosting Regressor
2021-04-03 19:24:52,957:INFO:Declaring metric variables
2021-04-03 19:24:52,972:INFO:Defining Hyperparameters
2021-04-03 19:24:53,097:INFO:Tuning with n_jobs=-1
2021-04-03 19:24:53,097:INFO:Initializing RandomizedSearchCV
2021-04-03 19:24:55,754:INFO:best_params: {'actual_estimator__subsample': 0.85, 'actual_estimator__n_estimators': 50, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 1, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 5, 'actual_estimator__learning_rate': 0.1}
2021-04-03 19:24:55,757:INFO:Hyperparameter search completed
2021-04-03 19:24:55,758:INFO:SubProcess create_model() called ==================================
2021-04-03 19:24:55,763:INFO:Initializing create_model()
2021-04-03 19:24:55,763:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E07B357F0>, kwargs={'subsample': 0.85, 'n_estimators': 50, 'min_samples_split': 7, 'min_samples_leaf': 1, 'min_impurity_decrease': 0.05, 'max_features': 'log2', 'max_depth': 5, 'learning_rate': 0.1})
2021-04-03 19:24:55,764:INFO:Checking exceptions
2021-04-03 19:24:55,764:INFO:Importing libraries
2021-04-03 19:24:55,764:INFO:Copying training dataset
2021-04-03 19:24:55,766:INFO:Defining folds
2021-04-03 19:24:55,767:INFO:Declaring metric variables
2021-04-03 19:24:55,789:INFO:Importing untrained model
2021-04-03 19:24:55,789:INFO:Declaring custom model
2021-04-03 19:24:55,819:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 19:24:55,860:INFO:Starting cross validation
2021-04-03 19:24:55,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:24:56,134:INFO:Calculating mean and std
2021-04-03 19:24:56,137:INFO:Creating metrics dataframe
2021-04-03 19:24:56,179:INFO:Finalizing model
2021-04-03 19:24:56,241:INFO:Uploading results into container
2021-04-03 19:24:56,241:INFO:Uploading model into container now
2021-04-03 19:24:56,242:INFO:create_model_container: 19
2021-04-03 19:24:56,242:INFO:master_model_container: 19
2021-04-03 19:24:56,242:INFO:display_container: 4
2021-04-03 19:24:56,244:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:24:56,244:INFO:create_model() succesfully completed......................................
2021-04-03 19:24:56,368:INFO:SubProcess create_model() end ==================================
2021-04-03 19:24:56,369:INFO:Creating MLFlow logs
2021-04-03 19:24:56,392:INFO:Model: Gradient Boosting Regressor
2021-04-03 19:24:56,460:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 5, 'max_features': 'log2', 'max_leaf_nodes': None, 'min_impurity_decrease': 0.05, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 7, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 50, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 0.85, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 19:24:56,729:INFO:Initializing predict_model()
2021-04-03 19:24:56,729:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 19:24:56,730:INFO:Checking exceptions
2021-04-03 19:24:56,730:INFO:Preloading libraries
2021-04-03 19:24:57,080:INFO:create_model_container: 19
2021-04-03 19:24:57,080:INFO:master_model_container: 19
2021-04-03 19:24:57,080:INFO:display_container: 4
2021-04-03 19:24:57,083:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:24:57,084:INFO:tune_model() succesfully completed......................................
2021-04-03 19:25:03,221:INFO:Initializing plot_model()
2021-04-03 19:25:03,221:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 19:25:03,222:INFO:Checking exceptions
2021-04-03 19:25:03,222:INFO:Preparing display monitor
2021-04-03 19:25:03,237:INFO:Preloading libraries
2021-04-03 19:25:03,250:INFO:Copying training dataset
2021-04-03 19:25:03,251:INFO:Copying test dataset
2021-04-03 19:25:03,251:INFO:Plot type: residuals
2021-04-03 19:25:03,315:INFO:Fitting Model
2021-04-03 19:25:03,361:INFO:Scoring test/hold-out set
2021-04-03 19:25:03,991:INFO:Visual Rendered Successfully
2021-04-03 19:25:04,119:INFO:plot_model() succesfully completed......................................
2021-04-03 19:25:07,660:INFO:Initializing plot_model()
2021-04-03 19:25:07,660:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 19:25:07,661:INFO:Checking exceptions
2021-04-03 19:25:07,661:INFO:Preparing display monitor
2021-04-03 19:25:07,669:INFO:Preloading libraries
2021-04-03 19:25:07,683:INFO:Copying training dataset
2021-04-03 19:25:07,684:INFO:Copying test dataset
2021-04-03 19:25:07,684:INFO:Plot type: error
2021-04-03 19:25:07,686:INFO:Fitting Model
2021-04-03 19:25:07,689:INFO:Scoring test/hold-out set
2021-04-03 19:25:08,055:INFO:Visual Rendered Successfully
2021-04-03 19:25:08,168:INFO:plot_model() succesfully completed......................................
2021-04-03 19:25:10,619:INFO:Initializing plot_model()
2021-04-03 19:25:10,619:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 19:25:10,620:INFO:Checking exceptions
2021-04-03 19:25:10,620:INFO:Preparing display monitor
2021-04-03 19:25:10,630:INFO:Preloading libraries
2021-04-03 19:25:10,641:INFO:Copying training dataset
2021-04-03 19:25:10,642:INFO:Copying test dataset
2021-04-03 19:25:10,643:INFO:Plot type: feature
2021-04-03 19:25:10,645:WARNING:No coef_ found. Trying feature_importances_
2021-04-03 19:25:10,909:INFO:Visual Rendered Successfully
2021-04-03 19:25:11,000:INFO:plot_model() succesfully completed......................................
2021-04-03 19:25:14,837:INFO:Initializing evaluate_model()
2021-04-03 19:25:14,837:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-03 19:25:14,868:INFO:Initializing plot_model()
2021-04-03 19:25:14,868:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 19:25:14,869:INFO:Checking exceptions
2021-04-03 19:25:14,869:INFO:Preparing display monitor
2021-04-03 19:25:14,879:INFO:Preloading libraries
2021-04-03 19:25:14,892:INFO:Copying training dataset
2021-04-03 19:25:14,893:INFO:Copying test dataset
2021-04-03 19:25:14,894:INFO:Plot type: parameter
2021-04-03 19:25:14,907:INFO:Visual Rendered Successfully
2021-04-03 19:25:15,048:INFO:plot_model() succesfully completed......................................
2021-04-03 19:25:18,184:INFO:Initializing automl()
2021-04-03 19:25:18,184:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-03 19:25:18,185:INFO:Model Selection Basis : CV Results on Training set
2021-04-03 19:25:18,192:INFO:Initializing create_model()
2021-04-03 19:25:18,192:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 19:25:18,192:INFO:Checking exceptions
2021-04-03 19:25:18,192:INFO:Importing libraries
2021-04-03 19:25:18,193:INFO:Copying training dataset
2021-04-03 19:25:18,193:INFO:Defining folds
2021-04-03 19:25:18,194:INFO:Declaring metric variables
2021-04-03 19:25:18,194:INFO:Importing untrained model
2021-04-03 19:25:18,194:INFO:Declaring custom model
2021-04-03 19:25:18,196:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 19:25:18,197:INFO:Cross validation set to False
2021-04-03 19:25:18,197:INFO:Fitting Model
2021-04-03 19:25:18,274:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:25:18,275:INFO:create_models() succesfully completed......................................
2021-04-03 19:25:18,384:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:25:18,384:INFO:automl() succesfully completed......................................
2021-04-03 19:25:19,711:INFO:Initializing predict_model()
2021-04-03 19:25:19,711:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 19:25:19,712:INFO:Checking exceptions
2021-04-03 19:25:19,712:INFO:Preloading libraries
2021-04-03 19:25:19,712:INFO:Preparing display monitor
2021-04-03 19:25:32,855:INFO:Initializing finalize_model()
2021-04-03 19:25:32,855:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-03 19:25:32,859:INFO:Finalizing PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:25:32,861:INFO:Initializing create_model()
2021-04-03 19:25:32,861:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 19:25:32,862:INFO:Checking exceptions
2021-04-03 19:25:32,862:INFO:Importing libraries
2021-04-03 19:25:32,862:INFO:Copying training dataset
2021-04-03 19:25:32,863:INFO:Defining folds
2021-04-03 19:25:32,863:INFO:Declaring metric variables
2021-04-03 19:25:32,863:INFO:Importing untrained model
2021-04-03 19:25:32,863:INFO:Declaring custom model
2021-04-03 19:25:32,866:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 19:25:32,866:INFO:Starting cross validation
2021-04-03 19:25:32,867:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:25:33,348:INFO:Calculating mean and std
2021-04-03 19:25:33,348:INFO:Creating metrics dataframe
2021-04-03 19:25:33,351:INFO:Finalizing model
2021-04-03 19:25:33,425:INFO:Uploading results into container
2021-04-03 19:25:33,425:INFO:Uploading model into container now
2021-04-03 19:25:33,425:INFO:create_model_container: 20
2021-04-03 19:25:33,425:INFO:master_model_container: 20
2021-04-03 19:25:33,425:INFO:display_container: 6
2021-04-03 19:25:33,428:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:25:33,428:INFO:create_model() succesfully completed......................................
2021-04-03 19:25:33,519:INFO:Creating MLFlow logs
2021-04-03 19:25:33,522:INFO:Model: Gradient Boosting Regressor
2021-04-03 19:25:33,565:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 19:25:33,719:INFO:Initializing predict_model()
2021-04-03 19:25:33,719:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 19:25:33,719:INFO:Checking exceptions
2021-04-03 19:25:33,719:INFO:Preloading libraries
2021-04-03 19:25:34,010:INFO:create_model_container: 20
2021-04-03 19:25:34,010:INFO:master_model_container: 20
2021-04-03 19:25:34,010:INFO:display_container: 5
2021-04-03 19:25:34,013:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:25:34,013:INFO:finalize_model() succesfully completed......................................
2021-04-03 19:25:37,671:INFO:Initializing predict_model()
2021-04-03 19:25:37,671:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 19:25:37,671:INFO:Checking exceptions
2021-04-03 19:25:37,671:INFO:Preloading libraries
2021-04-03 19:25:37,671:INFO:Preparing display monitor
2021-04-03 19:25:43,168:INFO:Initializing predict_model()
2021-04-03 19:25:43,168:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 19:25:43,168:INFO:Checking exceptions
2021-04-03 19:25:43,168:INFO:Preloading libraries
2021-04-03 19:25:43,168:INFO:Preparing display monitor
2021-04-03 19:25:54,205:INFO:Initializing save_model()
2021-04-03 19:25:54,205:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), model_name=saved_models/best_model_to_predict_median_income_gbr, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2021-04-03 19:25:54,206:INFO:Adding model into prep_pipe
2021-04-03 19:25:54,238:INFO:saved_models/best_model_to_predict_median_income_gbr.pkl saved in current working directory
2021-04-03 19:25:54,250:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                                                                                     min_impurity_decrease=0.0,
                                                                                     min_impurity_split=None,
                                                                                     min_samples_leaf=1,
                                                                                     min_samples_split=2,
                                                                                     min_weight_fraction_leaf=0.0,
                                                                                     n_estimators=100,
                                                                                     n_iter_no_change=None,
                                                                                     presort='deprecated',
                                                                                     random_state=786,
                                                                                     subsample=1.0,
                                                                                     tol=0.0001,
                                                                                     validation_fraction=0.1,
                                                                                     verbose=0,
                                                                                     warm_start=False),
                                                 subsample=1.0, tol=0.0001,
                                                 validation_fraction=0.1,
                                                 verbose=0,
                                                 warm_start=False)]],
         verbose=False)
2021-04-03 19:25:54,250:INFO:save_model() succesfully completed......................................
2021-04-03 19:46:32,599:INFO:PyCaret Supervised Module
2021-04-03 19:46:32,599:INFO:ML Usecase: regression
2021-04-03 19:46:32,599:INFO:version 2.3.0
2021-04-03 19:46:32,600:INFO:Initializing setup()
2021-04-03 19:46:32,600:INFO:setup(target=highschool_graduation_rate, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 19:46:32,600:INFO:Checking environment
2021-04-03 19:46:32,600:INFO:python_version: 3.9.1
2021-04-03 19:46:32,600:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 19:46:32,600:INFO:machine: AMD64
2021-04-03 19:46:32,601:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 19:46:32,603:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 19:46:32,603:INFO:Checking libraries
2021-04-03 19:46:32,603:INFO:pd==1.2.2
2021-04-03 19:46:32,603:INFO:numpy==1.19.5
2021-04-03 19:46:32,603:INFO:sklearn==0.23.2
2021-04-03 19:46:32,603:INFO:lightgbm==3.1.1
2021-04-03 19:46:32,605:WARNING:catboost not found
2021-04-03 19:46:32,605:INFO:xgboost==1.3.3
2021-04-03 19:46:32,605:INFO:mlflow==1.14.1
2021-04-03 19:46:32,605:INFO:Checking Exceptions
2021-04-03 19:46:32,606:INFO:Declaring global variables
2021-04-03 19:46:32,606:INFO:USI: eeed
2021-04-03 19:46:32,606:INFO:pycaret_globals: {'exp_name_log', '_all_models_internal', 'fold_shuffle_param', '_all_models', 'prep_pipe', 'seed', 'fix_imbalance_method_param', 'pycaret_globals', 'fold_generator', 'X', '_available_plots', 'fold_groups_param', 'logging_param', 'create_model_container', '_gpu_n_jobs_param', 'target_param', 'log_plots_param', 'iterative_imputation_iters_param', 'experiment__', 'fold_param', 'X_test', 'imputation_regressor', '_ml_usecase', 'imputation_classifier', 'data_before_preprocess', 'n_jobs_param', 'html_param', 'transform_target_method_param', 'fix_imbalance_param', '_all_metrics', '_internal_pipeline', 'gpu_param', 'transform_target_param', 'y_train', 'X_train', 'USI', 'y_test', 'y', 'master_model_container', 'display_container', 'stratify_param'}
2021-04-03 19:46:32,606:INFO:Preparing display monitor
2021-04-03 19:46:32,606:INFO:Preparing display monitor
2021-04-03 19:46:32,620:INFO:Importing libraries
2021-04-03 19:46:32,620:INFO:Copying data for preprocessing
2021-04-03 19:46:32,630:INFO:Declaring preprocessing parameters
2021-04-03 19:46:32,632:INFO:Creating preprocessing pipeline
2021-04-03 19:46:32,638:INFO:Preprocessing pipeline created successfully
2021-04-03 19:46:32,638:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 19:46:32,639:INFO:Creating global containers
2021-04-03 19:46:32,639:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 19:46:35,129:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 19:46:35,248:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 19:46:35,249:INFO:Creating grid variables
2021-04-03 19:46:35,269:INFO:Logging experiment in MLFlow
2021-04-03 19:46:35,274:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-03 19:46:35,275:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-03 19:46:35,425:INFO:SubProcess save_model() called ==================================
2021-04-03 19:46:35,446:INFO:Initializing save_model()
2021-04-03 19:46:35,446:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 19:46:35,446:INFO:Adding model into prep_pipe
2021-04-03 19:46:35,448:WARNING:Only Model saved as it was a pipeline.
2021-04-03 19:46:35,472:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 19:46:35,481:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 19:46:35,482:INFO:save_model() succesfully completed......................................
2021-04-03 19:46:35,591:INFO:SubProcess save_model() end ==================================
2021-04-03 19:46:35,710:INFO:create_model_container: 0
2021-04-03 19:46:35,710:INFO:master_model_container: 0
2021-04-03 19:46:35,710:INFO:display_container: 1
2021-04-03 19:46:35,717:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 19:46:35,717:INFO:setup() succesfully completed......................................
2021-04-03 19:47:12,319:INFO:Initializing compare_models()
2021-04-03 19:47:12,320:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-03 19:47:12,320:INFO:Checking exceptions
2021-04-03 19:47:12,320:INFO:Preparing display monitor
2021-04-03 19:47:12,320:INFO:Preparing display monitor
2021-04-03 19:47:12,359:INFO:Initializing Linear Regression
2021-04-03 19:47:12,359:INFO:Total runtime is 1.6641616821289062e-05 minutes
2021-04-03 19:47:12,371:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:12,371:INFO:Initializing create_model()
2021-04-03 19:47:12,371:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:12,372:INFO:Checking exceptions
2021-04-03 19:47:12,372:INFO:Importing libraries
2021-04-03 19:47:12,372:INFO:Copying training dataset
2021-04-03 19:47:12,373:INFO:Defining folds
2021-04-03 19:47:12,373:INFO:Declaring metric variables
2021-04-03 19:47:12,382:INFO:Importing untrained model
2021-04-03 19:47:12,393:INFO:Linear Regression Imported succesfully
2021-04-03 19:47:12,415:INFO:Starting cross validation
2021-04-03 19:47:12,415:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:17,667:INFO:Calculating mean and std
2021-04-03 19:47:17,668:INFO:Creating metrics dataframe
2021-04-03 19:47:17,673:INFO:Uploading results into container
2021-04-03 19:47:17,673:INFO:Uploading model into container now
2021-04-03 19:47:17,673:INFO:create_model_container: 1
2021-04-03 19:47:17,674:INFO:master_model_container: 1
2021-04-03 19:47:17,674:INFO:display_container: 2
2021-04-03 19:47:17,675:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 19:47:17,675:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:17,759:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:17,759:INFO:Creating metrics dataframe
2021-04-03 19:47:17,774:INFO:Initializing Lasso Regression
2021-04-03 19:47:17,774:INFO:Total runtime is 0.09027032057444254 minutes
2021-04-03 19:47:17,784:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:17,784:INFO:Initializing create_model()
2021-04-03 19:47:17,784:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:17,785:INFO:Checking exceptions
2021-04-03 19:47:17,785:INFO:Importing libraries
2021-04-03 19:47:17,785:INFO:Copying training dataset
2021-04-03 19:47:17,786:INFO:Defining folds
2021-04-03 19:47:17,786:INFO:Declaring metric variables
2021-04-03 19:47:17,799:INFO:Importing untrained model
2021-04-03 19:47:17,813:INFO:Lasso Regression Imported succesfully
2021-04-03 19:47:17,833:INFO:Starting cross validation
2021-04-03 19:47:17,834:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:17,925:INFO:Calculating mean and std
2021-04-03 19:47:17,926:INFO:Creating metrics dataframe
2021-04-03 19:47:17,932:INFO:Uploading results into container
2021-04-03 19:47:17,932:INFO:Uploading model into container now
2021-04-03 19:47:17,933:INFO:create_model_container: 2
2021-04-03 19:47:17,934:INFO:master_model_container: 2
2021-04-03 19:47:17,934:INFO:display_container: 2
2021-04-03 19:47:17,935:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 19:47:17,935:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:18,025:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:18,025:INFO:Creating metrics dataframe
2021-04-03 19:47:18,047:INFO:Initializing Ridge Regression
2021-04-03 19:47:18,047:INFO:Total runtime is 0.094825013478597 minutes
2021-04-03 19:47:18,059:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:18,059:INFO:Initializing create_model()
2021-04-03 19:47:18,059:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:18,059:INFO:Checking exceptions
2021-04-03 19:47:18,059:INFO:Importing libraries
2021-04-03 19:47:18,059:INFO:Copying training dataset
2021-04-03 19:47:18,061:INFO:Defining folds
2021-04-03 19:47:18,061:INFO:Declaring metric variables
2021-04-03 19:47:18,072:INFO:Importing untrained model
2021-04-03 19:47:18,085:INFO:Ridge Regression Imported succesfully
2021-04-03 19:47:18,108:INFO:Starting cross validation
2021-04-03 19:47:18,109:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:18,187:INFO:Calculating mean and std
2021-04-03 19:47:18,188:INFO:Creating metrics dataframe
2021-04-03 19:47:18,192:INFO:Uploading results into container
2021-04-03 19:47:18,192:INFO:Uploading model into container now
2021-04-03 19:47:18,193:INFO:create_model_container: 3
2021-04-03 19:47:18,193:INFO:master_model_container: 3
2021-04-03 19:47:18,193:INFO:display_container: 2
2021-04-03 19:47:18,194:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:47:18,194:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:18,298:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:18,299:INFO:Creating metrics dataframe
2021-04-03 19:47:18,327:INFO:Initializing Elastic Net
2021-04-03 19:47:18,327:INFO:Total runtime is 0.09948668877283731 minutes
2021-04-03 19:47:18,339:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:18,340:INFO:Initializing create_model()
2021-04-03 19:47:18,340:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:18,341:INFO:Checking exceptions
2021-04-03 19:47:18,341:INFO:Importing libraries
2021-04-03 19:47:18,341:INFO:Copying training dataset
2021-04-03 19:47:18,342:INFO:Defining folds
2021-04-03 19:47:18,342:INFO:Declaring metric variables
2021-04-03 19:47:18,353:INFO:Importing untrained model
2021-04-03 19:47:18,364:INFO:Elastic Net Imported succesfully
2021-04-03 19:47:18,390:INFO:Starting cross validation
2021-04-03 19:47:18,391:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:18,472:INFO:Calculating mean and std
2021-04-03 19:47:18,473:INFO:Creating metrics dataframe
2021-04-03 19:47:18,478:INFO:Uploading results into container
2021-04-03 19:47:18,478:INFO:Uploading model into container now
2021-04-03 19:47:18,478:INFO:create_model_container: 4
2021-04-03 19:47:18,478:INFO:master_model_container: 4
2021-04-03 19:47:18,478:INFO:display_container: 2
2021-04-03 19:47:18,479:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 19:47:18,479:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:18,583:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:18,583:INFO:Creating metrics dataframe
2021-04-03 19:47:18,608:INFO:Initializing Least Angle Regression
2021-04-03 19:47:18,608:INFO:Total runtime is 0.10416693290074665 minutes
2021-04-03 19:47:18,620:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:18,620:INFO:Initializing create_model()
2021-04-03 19:47:18,620:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:18,621:INFO:Checking exceptions
2021-04-03 19:47:18,621:INFO:Importing libraries
2021-04-03 19:47:18,621:INFO:Copying training dataset
2021-04-03 19:47:18,622:INFO:Defining folds
2021-04-03 19:47:18,622:INFO:Declaring metric variables
2021-04-03 19:47:18,635:INFO:Importing untrained model
2021-04-03 19:47:18,646:INFO:Least Angle Regression Imported succesfully
2021-04-03 19:47:18,669:INFO:Starting cross validation
2021-04-03 19:47:18,670:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:19,680:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-03 19:47:19,681:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 19:47:19,681:INFO:Initializing create_model()
2021-04-03 19:47:19,681:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:19,681:INFO:Checking exceptions
2021-04-03 19:47:19,681:INFO:Importing libraries
2021-04-03 19:47:19,681:INFO:Copying training dataset
2021-04-03 19:47:19,682:INFO:Defining folds
2021-04-03 19:47:19,682:INFO:Declaring metric variables
2021-04-03 19:47:19,692:INFO:Importing untrained model
2021-04-03 19:47:19,706:INFO:Least Angle Regression Imported succesfully
2021-04-03 19:47:19,734:INFO:Starting cross validation
2021-04-03 19:47:19,735:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:25,366:ERROR:create_model() for lar raised an exception:
2021-04-03 19:47:25,367:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 19:47:25,368:INFO:Initializing Lasso Least Angle Regression
2021-04-03 19:47:25,368:INFO:Total runtime is 0.2168342351913452 minutes
2021-04-03 19:47:25,386:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:25,387:INFO:Initializing create_model()
2021-04-03 19:47:25,387:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:25,388:INFO:Checking exceptions
2021-04-03 19:47:25,388:INFO:Importing libraries
2021-04-03 19:47:25,388:INFO:Copying training dataset
2021-04-03 19:47:25,391:INFO:Defining folds
2021-04-03 19:47:25,392:INFO:Declaring metric variables
2021-04-03 19:47:25,417:INFO:Importing untrained model
2021-04-03 19:47:25,443:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-03 19:47:25,472:INFO:Starting cross validation
2021-04-03 19:47:25,473:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:30,813:INFO:Calculating mean and std
2021-04-03 19:47:30,816:INFO:Creating metrics dataframe
2021-04-03 19:47:30,825:INFO:Uploading results into container
2021-04-03 19:47:30,825:INFO:Uploading model into container now
2021-04-03 19:47:30,826:INFO:create_model_container: 5
2021-04-03 19:47:30,826:INFO:master_model_container: 5
2021-04-03 19:47:30,826:INFO:display_container: 2
2021-04-03 19:47:30,828:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-03 19:47:30,829:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:30,987:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:30,987:INFO:Creating metrics dataframe
2021-04-03 19:47:31,011:INFO:Initializing Orthogonal Matching Pursuit
2021-04-03 19:47:31,012:INFO:Total runtime is 0.31088546911875403 minutes
2021-04-03 19:47:31,029:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:31,030:INFO:Initializing create_model()
2021-04-03 19:47:31,030:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:31,030:INFO:Checking exceptions
2021-04-03 19:47:31,030:INFO:Importing libraries
2021-04-03 19:47:31,030:INFO:Copying training dataset
2021-04-03 19:47:31,034:INFO:Defining folds
2021-04-03 19:47:31,035:INFO:Declaring metric variables
2021-04-03 19:47:31,056:INFO:Importing untrained model
2021-04-03 19:47:31,076:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-03 19:47:31,120:INFO:Starting cross validation
2021-04-03 19:47:31,121:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:31,238:INFO:Calculating mean and std
2021-04-03 19:47:31,241:INFO:Creating metrics dataframe
2021-04-03 19:47:31,254:INFO:Uploading results into container
2021-04-03 19:47:31,254:INFO:Uploading model into container now
2021-04-03 19:47:31,255:INFO:create_model_container: 6
2021-04-03 19:47:31,255:INFO:master_model_container: 6
2021-04-03 19:47:31,256:INFO:display_container: 2
2021-04-03 19:47:31,258:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-03 19:47:31,259:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:31,469:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:31,469:INFO:Creating metrics dataframe
2021-04-03 19:47:31,506:INFO:Initializing Bayesian Ridge
2021-04-03 19:47:31,506:INFO:Total runtime is 0.3191400090853373 minutes
2021-04-03 19:47:31,530:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:31,531:INFO:Initializing create_model()
2021-04-03 19:47:31,533:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:31,533:INFO:Checking exceptions
2021-04-03 19:47:31,534:INFO:Importing libraries
2021-04-03 19:47:31,534:INFO:Copying training dataset
2021-04-03 19:47:31,535:INFO:Defining folds
2021-04-03 19:47:31,535:INFO:Declaring metric variables
2021-04-03 19:47:31,554:INFO:Importing untrained model
2021-04-03 19:47:31,567:INFO:Bayesian Ridge Imported succesfully
2021-04-03 19:47:31,591:INFO:Starting cross validation
2021-04-03 19:47:31,592:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:31,701:INFO:Calculating mean and std
2021-04-03 19:47:31,702:INFO:Creating metrics dataframe
2021-04-03 19:47:31,711:INFO:Uploading results into container
2021-04-03 19:47:31,711:INFO:Uploading model into container now
2021-04-03 19:47:31,711:INFO:create_model_container: 7
2021-04-03 19:47:31,712:INFO:master_model_container: 7
2021-04-03 19:47:31,712:INFO:display_container: 2
2021-04-03 19:47:31,716:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 19:47:31,716:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:31,869:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:31,869:INFO:Creating metrics dataframe
2021-04-03 19:47:31,899:INFO:Initializing Passive Aggressive Regressor
2021-04-03 19:47:31,900:INFO:Total runtime is 0.3257028778394063 minutes
2021-04-03 19:47:31,917:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:31,918:INFO:Initializing create_model()
2021-04-03 19:47:31,918:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:31,918:INFO:Checking exceptions
2021-04-03 19:47:31,918:INFO:Importing libraries
2021-04-03 19:47:31,918:INFO:Copying training dataset
2021-04-03 19:47:31,920:INFO:Defining folds
2021-04-03 19:47:31,921:INFO:Declaring metric variables
2021-04-03 19:47:31,935:INFO:Importing untrained model
2021-04-03 19:47:31,948:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-03 19:47:31,979:INFO:Starting cross validation
2021-04-03 19:47:31,982:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:32,343:INFO:Calculating mean and std
2021-04-03 19:47:32,345:INFO:Creating metrics dataframe
2021-04-03 19:47:32,357:INFO:Uploading results into container
2021-04-03 19:47:32,357:INFO:Uploading model into container now
2021-04-03 19:47:32,358:INFO:create_model_container: 8
2021-04-03 19:47:32,358:INFO:master_model_container: 8
2021-04-03 19:47:32,358:INFO:display_container: 2
2021-04-03 19:47:32,361:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:47:32,361:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:32,508:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:32,508:INFO:Creating metrics dataframe
2021-04-03 19:47:32,539:INFO:Initializing Huber Regressor
2021-04-03 19:47:32,539:INFO:Total runtime is 0.33634993235270183 minutes
2021-04-03 19:47:32,555:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:32,556:INFO:Initializing create_model()
2021-04-03 19:47:32,557:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:32,557:INFO:Checking exceptions
2021-04-03 19:47:32,557:INFO:Importing libraries
2021-04-03 19:47:32,558:INFO:Copying training dataset
2021-04-03 19:47:32,559:INFO:Defining folds
2021-04-03 19:47:32,560:INFO:Declaring metric variables
2021-04-03 19:47:32,574:INFO:Importing untrained model
2021-04-03 19:47:32,589:INFO:Huber Regressor Imported succesfully
2021-04-03 19:47:32,618:INFO:Starting cross validation
2021-04-03 19:47:32,619:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:32,828:INFO:Calculating mean and std
2021-04-03 19:47:32,830:INFO:Creating metrics dataframe
2021-04-03 19:47:32,839:INFO:Uploading results into container
2021-04-03 19:47:32,839:INFO:Uploading model into container now
2021-04-03 19:47:32,840:INFO:create_model_container: 9
2021-04-03 19:47:32,840:INFO:master_model_container: 9
2021-04-03 19:47:32,840:INFO:display_container: 2
2021-04-03 19:47:32,841:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 19:47:32,842:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:32,978:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:32,978:INFO:Creating metrics dataframe
2021-04-03 19:47:33,008:INFO:Initializing K Neighbors Regressor
2021-04-03 19:47:33,009:INFO:Total runtime is 0.34418537219365436 minutes
2021-04-03 19:47:33,028:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:33,029:INFO:Initializing create_model()
2021-04-03 19:47:33,029:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:33,029:INFO:Checking exceptions
2021-04-03 19:47:33,029:INFO:Importing libraries
2021-04-03 19:47:33,029:INFO:Copying training dataset
2021-04-03 19:47:33,032:INFO:Defining folds
2021-04-03 19:47:33,032:INFO:Declaring metric variables
2021-04-03 19:47:33,042:INFO:Importing untrained model
2021-04-03 19:47:33,055:INFO:K Neighbors Regressor Imported succesfully
2021-04-03 19:47:33,084:INFO:Starting cross validation
2021-04-03 19:47:33,085:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:33,223:INFO:Calculating mean and std
2021-04-03 19:47:33,225:INFO:Creating metrics dataframe
2021-04-03 19:47:33,230:INFO:Uploading results into container
2021-04-03 19:47:33,231:INFO:Uploading model into container now
2021-04-03 19:47:33,231:INFO:create_model_container: 10
2021-04-03 19:47:33,232:INFO:master_model_container: 10
2021-04-03 19:47:33,232:INFO:display_container: 2
2021-04-03 19:47:33,234:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-03 19:47:33,234:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:33,370:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:33,370:INFO:Creating metrics dataframe
2021-04-03 19:47:33,396:INFO:Initializing Decision Tree Regressor
2021-04-03 19:47:33,396:INFO:Total runtime is 0.3506466706593831 minutes
2021-04-03 19:47:33,408:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:33,409:INFO:Initializing create_model()
2021-04-03 19:47:33,410:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:33,410:INFO:Checking exceptions
2021-04-03 19:47:33,410:INFO:Importing libraries
2021-04-03 19:47:33,410:INFO:Copying training dataset
2021-04-03 19:47:33,412:INFO:Defining folds
2021-04-03 19:47:33,412:INFO:Declaring metric variables
2021-04-03 19:47:33,426:INFO:Importing untrained model
2021-04-03 19:47:33,443:INFO:Decision Tree Regressor Imported succesfully
2021-04-03 19:47:33,469:INFO:Starting cross validation
2021-04-03 19:47:33,470:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:33,621:INFO:Calculating mean and std
2021-04-03 19:47:33,623:INFO:Creating metrics dataframe
2021-04-03 19:47:33,637:INFO:Uploading results into container
2021-04-03 19:47:33,638:INFO:Uploading model into container now
2021-04-03 19:47:33,638:INFO:create_model_container: 11
2021-04-03 19:47:33,638:INFO:master_model_container: 11
2021-04-03 19:47:33,639:INFO:display_container: 2
2021-04-03 19:47:33,641:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-03 19:47:33,641:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:33,923:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:33,923:INFO:Creating metrics dataframe
2021-04-03 19:47:33,966:INFO:Initializing Random Forest Regressor
2021-04-03 19:47:33,967:INFO:Total runtime is 0.3601630330085754 minutes
2021-04-03 19:47:33,979:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:33,980:INFO:Initializing create_model()
2021-04-03 19:47:33,982:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:33,982:INFO:Checking exceptions
2021-04-03 19:47:33,982:INFO:Importing libraries
2021-04-03 19:47:33,983:INFO:Copying training dataset
2021-04-03 19:47:33,985:INFO:Defining folds
2021-04-03 19:47:33,986:INFO:Declaring metric variables
2021-04-03 19:47:34,003:INFO:Importing untrained model
2021-04-03 19:47:34,023:INFO:Random Forest Regressor Imported succesfully
2021-04-03 19:47:34,053:INFO:Starting cross validation
2021-04-03 19:47:34,054:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:35,107:INFO:Calculating mean and std
2021-04-03 19:47:35,109:INFO:Creating metrics dataframe
2021-04-03 19:47:35,119:INFO:Uploading results into container
2021-04-03 19:47:35,119:INFO:Uploading model into container now
2021-04-03 19:47:35,119:INFO:create_model_container: 12
2021-04-03 19:47:35,120:INFO:master_model_container: 12
2021-04-03 19:47:35,120:INFO:display_container: 2
2021-04-03 19:47:35,123:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 19:47:35,123:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:35,317:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:35,317:INFO:Creating metrics dataframe
2021-04-03 19:47:35,359:INFO:Initializing Extra Trees Regressor
2021-04-03 19:47:35,360:INFO:Total runtime is 0.3833825389544169 minutes
2021-04-03 19:47:35,376:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:35,377:INFO:Initializing create_model()
2021-04-03 19:47:35,377:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:35,377:INFO:Checking exceptions
2021-04-03 19:47:35,377:INFO:Importing libraries
2021-04-03 19:47:35,377:INFO:Copying training dataset
2021-04-03 19:47:35,378:INFO:Defining folds
2021-04-03 19:47:35,379:INFO:Declaring metric variables
2021-04-03 19:47:35,394:INFO:Importing untrained model
2021-04-03 19:47:35,405:INFO:Extra Trees Regressor Imported succesfully
2021-04-03 19:47:35,432:INFO:Starting cross validation
2021-04-03 19:47:35,434:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:36,544:INFO:Calculating mean and std
2021-04-03 19:47:36,546:INFO:Creating metrics dataframe
2021-04-03 19:47:36,550:INFO:Uploading results into container
2021-04-03 19:47:36,550:INFO:Uploading model into container now
2021-04-03 19:47:36,551:INFO:create_model_container: 13
2021-04-03 19:47:36,551:INFO:master_model_container: 13
2021-04-03 19:47:36,551:INFO:display_container: 2
2021-04-03 19:47:36,553:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 19:47:36,553:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:36,805:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:36,805:INFO:Creating metrics dataframe
2021-04-03 19:47:36,853:INFO:Initializing AdaBoost Regressor
2021-04-03 19:47:36,853:INFO:Total runtime is 0.40826193491617835 minutes
2021-04-03 19:47:36,864:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:36,865:INFO:Initializing create_model()
2021-04-03 19:47:36,865:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:36,866:INFO:Checking exceptions
2021-04-03 19:47:36,866:INFO:Importing libraries
2021-04-03 19:47:36,866:INFO:Copying training dataset
2021-04-03 19:47:36,867:INFO:Defining folds
2021-04-03 19:47:36,868:INFO:Declaring metric variables
2021-04-03 19:47:36,879:INFO:Importing untrained model
2021-04-03 19:47:36,892:INFO:AdaBoost Regressor Imported succesfully
2021-04-03 19:47:36,924:INFO:Starting cross validation
2021-04-03 19:47:36,925:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:37,335:INFO:Calculating mean and std
2021-04-03 19:47:37,336:INFO:Creating metrics dataframe
2021-04-03 19:47:37,347:INFO:Uploading results into container
2021-04-03 19:47:37,347:INFO:Uploading model into container now
2021-04-03 19:47:37,348:INFO:create_model_container: 14
2021-04-03 19:47:37,348:INFO:master_model_container: 14
2021-04-03 19:47:37,348:INFO:display_container: 2
2021-04-03 19:47:37,349:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-03 19:47:37,349:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:37,520:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:37,520:INFO:Creating metrics dataframe
2021-04-03 19:47:37,555:INFO:Initializing Gradient Boosting Regressor
2021-04-03 19:47:37,555:INFO:Total runtime is 0.4199535290400187 minutes
2021-04-03 19:47:37,568:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:37,569:INFO:Initializing create_model()
2021-04-03 19:47:37,569:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:37,569:INFO:Checking exceptions
2021-04-03 19:47:37,569:INFO:Importing libraries
2021-04-03 19:47:37,569:INFO:Copying training dataset
2021-04-03 19:47:37,570:INFO:Defining folds
2021-04-03 19:47:37,570:INFO:Declaring metric variables
2021-04-03 19:47:37,586:INFO:Importing untrained model
2021-04-03 19:47:37,601:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 19:47:37,626:INFO:Starting cross validation
2021-04-03 19:47:37,626:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:38,046:INFO:Calculating mean and std
2021-04-03 19:47:38,049:INFO:Creating metrics dataframe
2021-04-03 19:47:38,054:INFO:Uploading results into container
2021-04-03 19:47:38,055:INFO:Uploading model into container now
2021-04-03 19:47:38,055:INFO:create_model_container: 15
2021-04-03 19:47:38,055:INFO:master_model_container: 15
2021-04-03 19:47:38,055:INFO:display_container: 2
2021-04-03 19:47:38,058:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:47:38,058:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:38,254:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:38,254:INFO:Creating metrics dataframe
2021-04-03 19:47:38,307:INFO:Initializing Extreme Gradient Boosting
2021-04-03 19:47:38,307:INFO:Total runtime is 0.43249082167943315 minutes
2021-04-03 19:47:38,321:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:38,322:INFO:Initializing create_model()
2021-04-03 19:47:38,322:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:38,322:INFO:Checking exceptions
2021-04-03 19:47:38,322:INFO:Importing libraries
2021-04-03 19:47:38,323:INFO:Copying training dataset
2021-04-03 19:47:38,324:INFO:Defining folds
2021-04-03 19:47:38,325:INFO:Declaring metric variables
2021-04-03 19:47:38,340:INFO:Importing untrained model
2021-04-03 19:47:38,357:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 19:47:38,379:INFO:Starting cross validation
2021-04-03 19:47:38,380:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:40,907:INFO:Calculating mean and std
2021-04-03 19:47:40,909:INFO:Creating metrics dataframe
2021-04-03 19:47:40,920:INFO:Uploading results into container
2021-04-03 19:47:40,920:INFO:Uploading model into container now
2021-04-03 19:47:40,921:INFO:create_model_container: 16
2021-04-03 19:47:40,921:INFO:master_model_container: 16
2021-04-03 19:47:40,921:INFO:display_container: 2
2021-04-03 19:47:40,925:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 19:47:40,926:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:41,051:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:41,051:INFO:Creating metrics dataframe
2021-04-03 19:47:41,078:INFO:Initializing Light Gradient Boosting Machine
2021-04-03 19:47:41,078:INFO:Total runtime is 0.47868264913558956 minutes
2021-04-03 19:47:41,092:INFO:SubProcess create_model() called ==================================
2021-04-03 19:47:41,092:INFO:Initializing create_model()
2021-04-03 19:47:41,093:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E136E7670>, kwargs={})
2021-04-03 19:47:41,093:INFO:Checking exceptions
2021-04-03 19:47:41,093:INFO:Importing libraries
2021-04-03 19:47:41,093:INFO:Copying training dataset
2021-04-03 19:47:41,094:INFO:Defining folds
2021-04-03 19:47:41,095:INFO:Declaring metric variables
2021-04-03 19:47:41,111:INFO:Importing untrained model
2021-04-03 19:47:41,125:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-03 19:47:41,170:INFO:Starting cross validation
2021-04-03 19:47:41,170:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:47:42,327:INFO:Calculating mean and std
2021-04-03 19:47:42,329:INFO:Creating metrics dataframe
2021-04-03 19:47:42,337:INFO:Uploading results into container
2021-04-03 19:47:42,337:INFO:Uploading model into container now
2021-04-03 19:47:42,337:INFO:create_model_container: 17
2021-04-03 19:47:42,338:INFO:master_model_container: 17
2021-04-03 19:47:42,338:INFO:display_container: 2
2021-04-03 19:47:42,341:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-03 19:47:42,342:INFO:create_model() succesfully completed......................................
2021-04-03 19:47:42,493:INFO:SubProcess create_model() end ==================================
2021-04-03 19:47:42,493:INFO:Creating metrics dataframe
2021-04-03 19:47:42,556:INFO:Initializing create_model()
2021-04-03 19:47:42,556:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 19:47:42,556:INFO:Checking exceptions
2021-04-03 19:47:42,556:INFO:Importing libraries
2021-04-03 19:47:42,556:INFO:Copying training dataset
2021-04-03 19:47:42,557:INFO:Defining folds
2021-04-03 19:47:42,557:INFO:Declaring metric variables
2021-04-03 19:47:42,557:INFO:Importing untrained model
2021-04-03 19:47:42,558:INFO:Declaring custom model
2021-04-03 19:47:42,559:INFO:Ridge Regression Imported succesfully
2021-04-03 19:47:42,559:INFO:Cross validation set to False
2021-04-03 19:47:42,559:INFO:Fitting Model
2021-04-03 19:47:42,568:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:47:42,568:INFO:create_models() succesfully completed......................................
2021-04-03 19:47:42,707:INFO:Creating MLFlow logs
2021-04-03 19:47:42,730:INFO:Model: Ridge Regression
2021-04-03 19:47:42,794:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 19:47:42,957:INFO:Initializing predict_model()
2021-04-03 19:47:42,957:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 19:47:42,957:INFO:Checking exceptions
2021-04-03 19:47:42,957:INFO:Preloading libraries
2021-04-03 19:47:43,238:INFO:Creating MLFlow logs
2021-04-03 19:47:43,250:INFO:Model: Bayesian Ridge
2021-04-03 19:47:43,294:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 19:47:43,601:INFO:Creating MLFlow logs
2021-04-03 19:47:43,618:INFO:Model: Linear Regression
2021-04-03 19:47:43,671:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 19:47:44,009:INFO:Creating MLFlow logs
2021-04-03 19:47:44,028:INFO:Model: Huber Regressor
2021-04-03 19:47:44,126:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 19:47:44,579:INFO:Creating MLFlow logs
2021-04-03 19:47:44,597:INFO:Model: Extra Trees Regressor
2021-04-03 19:47:44,655:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 19:47:44,954:INFO:Creating MLFlow logs
2021-04-03 19:47:44,967:INFO:Model: Random Forest Regressor
2021-04-03 19:47:45,008:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 19:47:45,328:INFO:Creating MLFlow logs
2021-04-03 19:47:45,344:INFO:Model: Gradient Boosting Regressor
2021-04-03 19:47:45,403:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 19:47:45,738:INFO:Creating MLFlow logs
2021-04-03 19:47:45,753:INFO:Model: Light Gradient Boosting Machine
2021-04-03 19:47:45,801:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-03 19:47:46,223:INFO:Creating MLFlow logs
2021-04-03 19:47:46,242:INFO:Model: AdaBoost Regressor
2021-04-03 19:47:46,310:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-03 19:47:46,808:INFO:Creating MLFlow logs
2021-04-03 19:47:46,828:INFO:Model: Extreme Gradient Boosting
2021-04-03 19:47:46,904:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-03 19:47:47,439:INFO:Creating MLFlow logs
2021-04-03 19:47:47,464:INFO:Model: K Neighbors Regressor
2021-04-03 19:47:47,545:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-03 19:47:48,075:INFO:Creating MLFlow logs
2021-04-03 19:47:48,114:INFO:Model: Decision Tree Regressor
2021-04-03 19:47:48,171:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-03 19:47:48,573:INFO:Creating MLFlow logs
2021-04-03 19:47:48,592:INFO:Model: Orthogonal Matching Pursuit
2021-04-03 19:47:48,645:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-03 19:47:48,944:INFO:Creating MLFlow logs
2021-04-03 19:47:48,966:INFO:Model: Passive Aggressive Regressor
2021-04-03 19:47:49,034:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 19:47:49,402:INFO:Creating MLFlow logs
2021-04-03 19:47:49,427:INFO:Model: Elastic Net
2021-04-03 19:47:49,488:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 19:47:49,996:INFO:Creating MLFlow logs
2021-04-03 19:47:50,011:INFO:Model: Lasso Regression
2021-04-03 19:47:50,068:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 19:47:50,545:INFO:Creating MLFlow logs
2021-04-03 19:47:50,562:INFO:Model: Least Angle Regression
2021-04-03 19:47:50,635:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-03 19:47:51,013:INFO:create_model_container: 17
2021-04-03 19:47:51,013:INFO:master_model_container: 17
2021-04-03 19:47:51,014:INFO:display_container: 2
2021-04-03 19:47:51,015:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:47:51,016:INFO:compare_models() succesfully completed......................................
2021-04-03 19:49:11,195:INFO:Initializing create_model()
2021-04-03 19:49:11,195:INFO:create_model(estimator=br, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-03 19:49:11,195:INFO:Checking exceptions
2021-04-03 19:49:11,196:INFO:Preparing display monitor
2021-04-03 19:49:11,242:INFO:Importing libraries
2021-04-03 19:49:11,243:INFO:Copying training dataset
2021-04-03 19:49:11,245:INFO:Defining folds
2021-04-03 19:49:11,245:INFO:Declaring metric variables
2021-04-03 19:49:11,259:INFO:Importing untrained model
2021-04-03 19:49:11,272:INFO:Bayesian Ridge Imported succesfully
2021-04-03 19:49:11,305:INFO:Starting cross validation
2021-04-03 19:49:11,306:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:49:11,627:INFO:Calculating mean and std
2021-04-03 19:49:11,629:INFO:Creating metrics dataframe
2021-04-03 19:49:11,648:INFO:Finalizing model
2021-04-03 19:49:11,661:INFO:Creating MLFlow logs
2021-04-03 19:49:11,684:INFO:Model: Bayesian Ridge
2021-04-03 19:49:11,758:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 19:49:11,957:INFO:Initializing predict_model()
2021-04-03 19:49:11,957:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 19:49:11,957:INFO:Checking exceptions
2021-04-03 19:49:11,957:INFO:Preloading libraries
2021-04-03 19:49:12,381:INFO:Uploading results into container
2021-04-03 19:49:12,381:INFO:Uploading model into container now
2021-04-03 19:49:12,405:INFO:create_model_container: 18
2021-04-03 19:49:12,405:INFO:master_model_container: 18
2021-04-03 19:49:12,406:INFO:display_container: 3
2021-04-03 19:49:12,407:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 19:49:12,407:INFO:create_model() succesfully completed......................................
2021-04-03 19:49:15,447:INFO:Initializing tune_model()
2021-04-03 19:49:15,448:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-03 19:49:15,448:INFO:Checking exceptions
2021-04-03 19:49:15,449:INFO:Preparing display monitor
2021-04-03 19:49:15,478:INFO:Copying training dataset
2021-04-03 19:49:15,479:INFO:Checking base model
2021-04-03 19:49:15,479:INFO:Base model : Bayesian Ridge
2021-04-03 19:49:15,498:INFO:Declaring metric variables
2021-04-03 19:49:15,514:INFO:Defining Hyperparameters
2021-04-03 19:49:15,647:INFO:Tuning with n_jobs=-1
2021-04-03 19:49:15,648:INFO:Initializing RandomizedSearchCV
2021-04-03 19:49:16,493:INFO:best_params: {'actual_estimator__normalize': False, 'actual_estimator__lambda_2': 0.001, 'actual_estimator__lambda_1': 0.005, 'actual_estimator__fit_intercept': True, 'actual_estimator__compute_score': False, 'actual_estimator__alpha_2': 0.3, 'actual_estimator__alpha_1': 0.15}
2021-04-03 19:49:16,495:INFO:Hyperparameter search completed
2021-04-03 19:49:16,496:INFO:SubProcess create_model() called ==================================
2021-04-03 19:49:16,499:INFO:Initializing create_model()
2021-04-03 19:49:16,500:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09DB9220>, kwargs={'normalize': False, 'lambda_2': 0.001, 'lambda_1': 0.005, 'fit_intercept': True, 'compute_score': False, 'alpha_2': 0.3, 'alpha_1': 0.15})
2021-04-03 19:49:16,500:INFO:Checking exceptions
2021-04-03 19:49:16,500:INFO:Importing libraries
2021-04-03 19:49:16,500:INFO:Copying training dataset
2021-04-03 19:49:16,503:INFO:Defining folds
2021-04-03 19:49:16,503:INFO:Declaring metric variables
2021-04-03 19:49:16,522:INFO:Importing untrained model
2021-04-03 19:49:16,522:INFO:Declaring custom model
2021-04-03 19:49:16,546:INFO:Bayesian Ridge Imported succesfully
2021-04-03 19:49:16,588:INFO:Starting cross validation
2021-04-03 19:49:16,589:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:49:16,704:INFO:Calculating mean and std
2021-04-03 19:49:16,708:INFO:Creating metrics dataframe
2021-04-03 19:49:16,761:INFO:Finalizing model
2021-04-03 19:49:16,775:INFO:Uploading results into container
2021-04-03 19:49:16,775:INFO:Uploading model into container now
2021-04-03 19:49:16,775:INFO:create_model_container: 19
2021-04-03 19:49:16,776:INFO:master_model_container: 19
2021-04-03 19:49:16,776:INFO:display_container: 4
2021-04-03 19:49:16,778:INFO:PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 19:49:16,778:INFO:create_model() succesfully completed......................................
2021-04-03 19:49:17,021:INFO:SubProcess create_model() end ==================================
2021-04-03 19:49:17,022:INFO:Creating MLFlow logs
2021-04-03 19:49:17,040:INFO:Model: Bayesian Ridge
2021-04-03 19:49:17,133:INFO:logged params: {'alpha_1': 0.15, 'alpha_2': 0.3, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 0.005, 'lambda_2': 0.001, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 19:49:17,378:INFO:Initializing predict_model()
2021-04-03 19:49:17,378:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 19:49:17,378:INFO:Checking exceptions
2021-04-03 19:49:17,378:INFO:Preloading libraries
2021-04-03 19:49:17,796:INFO:create_model_container: 19
2021-04-03 19:49:17,797:INFO:master_model_container: 19
2021-04-03 19:49:17,797:INFO:display_container: 4
2021-04-03 19:49:17,802:INFO:PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 19:49:17,803:INFO:tune_model() succesfully completed......................................
2021-04-03 19:49:21,332:INFO:Initializing plot_model()
2021-04-03 19:49:21,332:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 19:49:21,332:INFO:Checking exceptions
2021-04-03 19:49:21,332:INFO:Preparing display monitor
2021-04-03 19:49:21,341:INFO:Preloading libraries
2021-04-03 19:49:21,345:INFO:Copying training dataset
2021-04-03 19:49:21,345:INFO:Copying test dataset
2021-04-03 19:49:21,345:INFO:Plot type: residuals
2021-04-03 19:49:21,387:INFO:Fitting Model
2021-04-03 19:49:21,430:INFO:Scoring test/hold-out set
2021-04-03 19:49:22,111:INFO:Visual Rendered Successfully
2021-04-03 19:49:22,277:INFO:plot_model() succesfully completed......................................
2021-04-03 19:49:25,890:INFO:Initializing plot_model()
2021-04-03 19:49:25,891:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 19:49:25,891:INFO:Checking exceptions
2021-04-03 19:49:25,891:INFO:Preparing display monitor
2021-04-03 19:49:25,900:INFO:Preloading libraries
2021-04-03 19:49:25,902:INFO:Copying training dataset
2021-04-03 19:49:25,903:INFO:Copying test dataset
2021-04-03 19:49:25,903:INFO:Plot type: error
2021-04-03 19:49:25,906:INFO:Fitting Model
2021-04-03 19:49:25,908:INFO:Scoring test/hold-out set
2021-04-03 19:49:26,339:INFO:Visual Rendered Successfully
2021-04-03 19:49:26,466:INFO:plot_model() succesfully completed......................................
2021-04-03 19:49:35,748:INFO:Initializing plot_model()
2021-04-03 19:49:35,748:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 19:49:35,748:INFO:Checking exceptions
2021-04-03 19:49:35,749:INFO:Preparing display monitor
2021-04-03 19:49:35,762:INFO:Preloading libraries
2021-04-03 19:49:35,766:INFO:Copying training dataset
2021-04-03 19:49:35,767:INFO:Copying test dataset
2021-04-03 19:49:35,768:INFO:Plot type: feature
2021-04-03 19:49:36,037:INFO:Visual Rendered Successfully
2021-04-03 19:49:36,133:INFO:plot_model() succesfully completed......................................
2021-04-03 19:49:46,593:INFO:Initializing evaluate_model()
2021-04-03 19:49:46,594:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-03 19:49:46,621:INFO:Initializing plot_model()
2021-04-03 19:49:46,622:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 19:49:46,622:INFO:Checking exceptions
2021-04-03 19:49:46,622:INFO:Preparing display monitor
2021-04-03 19:49:46,634:INFO:Preloading libraries
2021-04-03 19:49:46,638:INFO:Copying training dataset
2021-04-03 19:49:46,638:INFO:Copying test dataset
2021-04-03 19:49:46,639:INFO:Plot type: parameter
2021-04-03 19:49:46,649:INFO:Visual Rendered Successfully
2021-04-03 19:49:46,782:INFO:plot_model() succesfully completed......................................
2021-04-03 19:49:50,763:INFO:Initializing automl()
2021-04-03 19:49:50,764:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-03 19:49:50,764:INFO:Model Selection Basis : CV Results on Training set
2021-04-03 19:49:50,769:INFO:Initializing create_model()
2021-04-03 19:49:50,769:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 19:49:50,770:INFO:Checking exceptions
2021-04-03 19:49:50,771:INFO:Importing libraries
2021-04-03 19:49:50,771:INFO:Copying training dataset
2021-04-03 19:49:50,771:INFO:Defining folds
2021-04-03 19:49:50,771:INFO:Declaring metric variables
2021-04-03 19:49:50,771:INFO:Importing untrained model
2021-04-03 19:49:50,772:INFO:Declaring custom model
2021-04-03 19:49:50,773:INFO:Ridge Regression Imported succesfully
2021-04-03 19:49:50,773:INFO:Cross validation set to False
2021-04-03 19:49:50,773:INFO:Fitting Model
2021-04-03 19:49:50,780:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:49:50,780:INFO:create_models() succesfully completed......................................
2021-04-03 19:49:50,907:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:49:50,907:INFO:automl() succesfully completed......................................
2021-04-03 19:49:56,064:INFO:Initializing predict_model()
2021-04-03 19:49:56,064:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 19:49:56,064:INFO:Checking exceptions
2021-04-03 19:49:56,064:INFO:Preloading libraries
2021-04-03 19:49:56,064:INFO:Preparing display monitor
2021-04-03 19:50:02,642:INFO:Initializing finalize_model()
2021-04-03 19:50:02,642:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-03 19:50:02,644:INFO:Finalizing PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:50:02,645:INFO:Initializing create_model()
2021-04-03 19:50:02,645:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 19:50:02,645:INFO:Checking exceptions
2021-04-03 19:50:02,646:INFO:Importing libraries
2021-04-03 19:50:02,646:INFO:Copying training dataset
2021-04-03 19:50:02,647:INFO:Defining folds
2021-04-03 19:50:02,647:INFO:Declaring metric variables
2021-04-03 19:50:02,647:INFO:Importing untrained model
2021-04-03 19:50:02,647:INFO:Declaring custom model
2021-04-03 19:50:02,648:INFO:Ridge Regression Imported succesfully
2021-04-03 19:50:02,648:INFO:Starting cross validation
2021-04-03 19:50:02,649:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:50:02,936:INFO:Calculating mean and std
2021-04-03 19:50:02,937:INFO:Creating metrics dataframe
2021-04-03 19:50:02,944:INFO:Finalizing model
2021-04-03 19:50:02,953:INFO:Uploading results into container
2021-04-03 19:50:02,953:INFO:Uploading model into container now
2021-04-03 19:50:02,954:INFO:create_model_container: 20
2021-04-03 19:50:02,954:INFO:master_model_container: 20
2021-04-03 19:50:02,954:INFO:display_container: 6
2021-04-03 19:50:02,955:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:50:02,955:INFO:create_model() succesfully completed......................................
2021-04-03 19:50:03,074:INFO:Creating MLFlow logs
2021-04-03 19:50:03,077:INFO:Model: Ridge Regression
2021-04-03 19:50:03,117:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 19:50:03,277:INFO:Initializing predict_model()
2021-04-03 19:50:03,278:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 19:50:03,278:INFO:Checking exceptions
2021-04-03 19:50:03,278:INFO:Preloading libraries
2021-04-03 19:50:03,635:INFO:create_model_container: 20
2021-04-03 19:50:03,635:INFO:master_model_container: 20
2021-04-03 19:50:03,635:INFO:display_container: 5
2021-04-03 19:50:03,637:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:50:03,638:INFO:finalize_model() succesfully completed......................................
2021-04-03 19:50:23,409:INFO:Initializing predict_model()
2021-04-03 19:50:23,410:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 19:50:23,410:INFO:Checking exceptions
2021-04-03 19:50:23,410:INFO:Preloading libraries
2021-04-03 19:50:23,410:INFO:Preparing display monitor
2021-04-03 19:50:28,699:INFO:Initializing predict_model()
2021-04-03 19:50:28,699:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 19:50:28,699:INFO:Checking exceptions
2021-04-03 19:50:28,699:INFO:Preloading libraries
2021-04-03 19:50:28,699:INFO:Preparing display monitor
2021-04-03 19:50:45,031:INFO:Initializing save_model()
2021-04-03 19:50:45,032:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), model_name=saved_models/best_2nd_model_to_predict_highschool_graduation_rate_br, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2021-04-03 19:50:45,032:INFO:Adding model into prep_pipe
2021-04-03 19:50:45,061:INFO:saved_models/best_2nd_model_to_predict_highschool_graduation_rate_br.pkl saved in current working directory
2021-04-03 19:50:45,070:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                                 fit_intercept=True,
                                                 max_iter=None, normalize=False,
                                                 power_transformer_method='box-cox',
                                                 power_transformer_standardize=True,
                                                 random_state=786,
                                                 regressor=Ridge(alpha=1.0,
                                                                 copy_X=True,
                                                                 fit_intercept=True,
                                                                 max_iter=None,
                                                                 normalize=False,
                                                                 random_state=786,
                                                                 solver='auto',
                                                                 tol=0.001),
                                                 solver='auto', tol=0.001)]],
         verbose=False)
2021-04-03 19:50:45,071:INFO:save_model() succesfully completed......................................
2021-04-03 19:51:03,817:INFO:PyCaret Supervised Module
2021-04-03 19:51:03,817:INFO:ML Usecase: regression
2021-04-03 19:51:03,817:INFO:version 2.3.0
2021-04-03 19:51:03,818:INFO:Initializing setup()
2021-04-03 19:51:03,818:INFO:setup(target=highschool_graduation_rate, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 19:51:03,818:INFO:Checking environment
2021-04-03 19:51:03,818:INFO:python_version: 3.9.1
2021-04-03 19:51:03,818:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 19:51:03,818:INFO:machine: AMD64
2021-04-03 19:51:03,818:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 19:51:03,820:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 19:51:03,820:INFO:Checking libraries
2021-04-03 19:51:03,820:INFO:pd==1.2.2
2021-04-03 19:51:03,820:INFO:numpy==1.19.5
2021-04-03 19:51:03,820:INFO:sklearn==0.23.2
2021-04-03 19:51:03,821:INFO:lightgbm==3.1.1
2021-04-03 19:51:03,822:WARNING:catboost not found
2021-04-03 19:51:03,822:INFO:xgboost==1.3.3
2021-04-03 19:51:03,822:INFO:mlflow==1.14.1
2021-04-03 19:51:03,822:INFO:Checking Exceptions
2021-04-03 19:51:03,823:INFO:Declaring global variables
2021-04-03 19:51:03,824:INFO:USI: 0ed2
2021-04-03 19:51:03,825:INFO:pycaret_globals: {'exp_name_log', '_all_models_internal', 'fold_shuffle_param', '_all_models', 'prep_pipe', 'seed', 'fix_imbalance_method_param', 'pycaret_globals', 'fold_generator', 'X', '_available_plots', 'fold_groups_param', 'logging_param', 'create_model_container', '_gpu_n_jobs_param', 'target_param', 'log_plots_param', 'iterative_imputation_iters_param', 'experiment__', 'fold_param', 'X_test', 'imputation_regressor', '_ml_usecase', 'imputation_classifier', 'data_before_preprocess', 'n_jobs_param', 'html_param', 'transform_target_method_param', 'fix_imbalance_param', '_all_metrics', '_internal_pipeline', 'gpu_param', 'transform_target_param', 'y_train', 'X_train', 'USI', 'y_test', 'y', 'master_model_container', 'display_container', 'stratify_param'}
2021-04-03 19:51:03,826:INFO:Preparing display monitor
2021-04-03 19:51:03,826:INFO:Preparing display monitor
2021-04-03 19:51:03,848:INFO:Importing libraries
2021-04-03 19:51:03,848:INFO:Copying data for preprocessing
2021-04-03 19:51:03,866:INFO:Declaring preprocessing parameters
2021-04-03 19:51:03,868:INFO:Creating preprocessing pipeline
2021-04-03 19:51:03,876:INFO:Preprocessing pipeline created successfully
2021-04-03 19:51:03,876:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 19:51:03,876:INFO:Creating global containers
2021-04-03 19:51:03,876:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 19:51:06,319:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 19:51:06,459:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 19:51:06,460:INFO:Creating grid variables
2021-04-03 19:51:06,478:INFO:Logging experiment in MLFlow
2021-04-03 19:51:06,486:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-03 19:51:06,487:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-03 19:51:06,687:INFO:SubProcess save_model() called ==================================
2021-04-03 19:51:06,701:INFO:Initializing save_model()
2021-04-03 19:51:06,701:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 19:51:06,701:INFO:Adding model into prep_pipe
2021-04-03 19:51:06,703:WARNING:Only Model saved as it was a pipeline.
2021-04-03 19:51:06,725:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 19:51:06,733:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 19:51:06,733:INFO:save_model() succesfully completed......................................
2021-04-03 19:51:06,845:INFO:SubProcess save_model() end ==================================
2021-04-03 19:51:06,948:INFO:create_model_container: 0
2021-04-03 19:51:06,948:INFO:master_model_container: 0
2021-04-03 19:51:06,948:INFO:display_container: 1
2021-04-03 19:51:06,960:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 19:51:06,960:INFO:setup() succesfully completed......................................
2021-04-03 19:51:07,078:INFO:Initializing compare_models()
2021-04-03 19:51:07,078:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-03 19:51:07,078:INFO:Checking exceptions
2021-04-03 19:51:07,079:INFO:Preparing display monitor
2021-04-03 19:51:07,079:INFO:Preparing display monitor
2021-04-03 19:51:07,149:INFO:Initializing Linear Regression
2021-04-03 19:51:07,149:INFO:Total runtime is 0.0 minutes
2021-04-03 19:51:07,169:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:07,170:INFO:Initializing create_model()
2021-04-03 19:51:07,171:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:07,171:INFO:Checking exceptions
2021-04-03 19:51:07,171:INFO:Importing libraries
2021-04-03 19:51:07,171:INFO:Copying training dataset
2021-04-03 19:51:07,174:INFO:Defining folds
2021-04-03 19:51:07,175:INFO:Declaring metric variables
2021-04-03 19:51:07,197:INFO:Importing untrained model
2021-04-03 19:51:07,213:INFO:Linear Regression Imported succesfully
2021-04-03 19:51:07,245:INFO:Starting cross validation
2021-04-03 19:51:07,246:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:07,547:INFO:Calculating mean and std
2021-04-03 19:51:07,550:INFO:Creating metrics dataframe
2021-04-03 19:51:07,564:INFO:Uploading results into container
2021-04-03 19:51:07,565:INFO:Uploading model into container now
2021-04-03 19:51:07,566:INFO:create_model_container: 1
2021-04-03 19:51:07,567:INFO:master_model_container: 1
2021-04-03 19:51:07,567:INFO:display_container: 2
2021-04-03 19:51:07,569:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 19:51:07,570:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:07,970:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:07,970:INFO:Creating metrics dataframe
2021-04-03 19:51:08,004:INFO:Initializing Lasso Regression
2021-04-03 19:51:08,005:INFO:Total runtime is 0.014266260464986165 minutes
2021-04-03 19:51:08,026:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:08,028:INFO:Initializing create_model()
2021-04-03 19:51:08,029:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:08,030:INFO:Checking exceptions
2021-04-03 19:51:08,030:INFO:Importing libraries
2021-04-03 19:51:08,030:INFO:Copying training dataset
2021-04-03 19:51:08,033:INFO:Defining folds
2021-04-03 19:51:08,033:INFO:Declaring metric variables
2021-04-03 19:51:08,045:INFO:Importing untrained model
2021-04-03 19:51:08,055:INFO:Lasso Regression Imported succesfully
2021-04-03 19:51:08,082:INFO:Starting cross validation
2021-04-03 19:51:08,084:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:08,210:INFO:Calculating mean and std
2021-04-03 19:51:08,212:INFO:Creating metrics dataframe
2021-04-03 19:51:08,218:INFO:Uploading results into container
2021-04-03 19:51:08,218:INFO:Uploading model into container now
2021-04-03 19:51:08,222:INFO:create_model_container: 2
2021-04-03 19:51:08,222:INFO:master_model_container: 2
2021-04-03 19:51:08,222:INFO:display_container: 2
2021-04-03 19:51:08,225:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 19:51:08,225:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:08,374:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:08,375:INFO:Creating metrics dataframe
2021-04-03 19:51:08,445:INFO:Initializing Ridge Regression
2021-04-03 19:51:08,445:INFO:Total runtime is 0.021610645453135173 minutes
2021-04-03 19:51:08,481:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:08,482:INFO:Initializing create_model()
2021-04-03 19:51:08,483:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:08,483:INFO:Checking exceptions
2021-04-03 19:51:08,483:INFO:Importing libraries
2021-04-03 19:51:08,483:INFO:Copying training dataset
2021-04-03 19:51:08,485:INFO:Defining folds
2021-04-03 19:51:08,485:INFO:Declaring metric variables
2021-04-03 19:51:08,510:INFO:Importing untrained model
2021-04-03 19:51:08,545:INFO:Ridge Regression Imported succesfully
2021-04-03 19:51:08,591:INFO:Starting cross validation
2021-04-03 19:51:08,592:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:08,757:INFO:Calculating mean and std
2021-04-03 19:51:08,761:INFO:Creating metrics dataframe
2021-04-03 19:51:08,776:INFO:Uploading results into container
2021-04-03 19:51:08,776:INFO:Uploading model into container now
2021-04-03 19:51:08,782:INFO:create_model_container: 3
2021-04-03 19:51:08,783:INFO:master_model_container: 3
2021-04-03 19:51:08,783:INFO:display_container: 2
2021-04-03 19:51:08,784:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:51:08,784:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:09,069:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:09,070:INFO:Creating metrics dataframe
2021-04-03 19:51:09,101:INFO:Initializing Elastic Net
2021-04-03 19:51:09,101:INFO:Total runtime is 0.03253757158915202 minutes
2021-04-03 19:51:09,114:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:09,115:INFO:Initializing create_model()
2021-04-03 19:51:09,115:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:09,115:INFO:Checking exceptions
2021-04-03 19:51:09,115:INFO:Importing libraries
2021-04-03 19:51:09,115:INFO:Copying training dataset
2021-04-03 19:51:09,116:INFO:Defining folds
2021-04-03 19:51:09,116:INFO:Declaring metric variables
2021-04-03 19:51:09,130:INFO:Importing untrained model
2021-04-03 19:51:09,146:INFO:Elastic Net Imported succesfully
2021-04-03 19:51:09,198:INFO:Starting cross validation
2021-04-03 19:51:09,199:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:09,346:INFO:Calculating mean and std
2021-04-03 19:51:09,348:INFO:Creating metrics dataframe
2021-04-03 19:51:09,361:INFO:Uploading results into container
2021-04-03 19:51:09,362:INFO:Uploading model into container now
2021-04-03 19:51:09,362:INFO:create_model_container: 4
2021-04-03 19:51:09,362:INFO:master_model_container: 4
2021-04-03 19:51:09,362:INFO:display_container: 2
2021-04-03 19:51:09,364:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 19:51:09,365:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:09,555:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:09,555:INFO:Creating metrics dataframe
2021-04-03 19:51:09,596:INFO:Initializing Least Angle Regression
2021-04-03 19:51:09,596:INFO:Total runtime is 0.040780023733774824 minutes
2021-04-03 19:51:09,612:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:09,612:INFO:Initializing create_model()
2021-04-03 19:51:09,613:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:09,613:INFO:Checking exceptions
2021-04-03 19:51:09,613:INFO:Importing libraries
2021-04-03 19:51:09,613:INFO:Copying training dataset
2021-04-03 19:51:09,614:INFO:Defining folds
2021-04-03 19:51:09,614:INFO:Declaring metric variables
2021-04-03 19:51:09,632:INFO:Importing untrained model
2021-04-03 19:51:09,646:INFO:Least Angle Regression Imported succesfully
2021-04-03 19:51:09,684:INFO:Starting cross validation
2021-04-03 19:51:09,686:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:13,365:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-03 19:51:13,366:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 19:51:13,366:INFO:Initializing create_model()
2021-04-03 19:51:13,366:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:13,366:INFO:Checking exceptions
2021-04-03 19:51:13,366:INFO:Importing libraries
2021-04-03 19:51:13,366:INFO:Copying training dataset
2021-04-03 19:51:13,368:INFO:Defining folds
2021-04-03 19:51:13,368:INFO:Declaring metric variables
2021-04-03 19:51:13,378:INFO:Importing untrained model
2021-04-03 19:51:13,395:INFO:Least Angle Regression Imported succesfully
2021-04-03 19:51:13,433:INFO:Starting cross validation
2021-04-03 19:51:13,434:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:21,207:ERROR:create_model() for lar raised an exception:
2021-04-03 19:51:21,208:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 19:51:21,208:INFO:Initializing Lasso Least Angle Regression
2021-04-03 19:51:21,208:INFO:Total runtime is 0.23432820240656535 minutes
2021-04-03 19:51:21,220:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:21,220:INFO:Initializing create_model()
2021-04-03 19:51:21,220:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:21,220:INFO:Checking exceptions
2021-04-03 19:51:21,221:INFO:Importing libraries
2021-04-03 19:51:21,221:INFO:Copying training dataset
2021-04-03 19:51:21,222:INFO:Defining folds
2021-04-03 19:51:21,222:INFO:Declaring metric variables
2021-04-03 19:51:21,238:INFO:Importing untrained model
2021-04-03 19:51:21,250:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-03 19:51:21,283:INFO:Starting cross validation
2021-04-03 19:51:21,284:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:28,650:INFO:Calculating mean and std
2021-04-03 19:51:28,652:INFO:Creating metrics dataframe
2021-04-03 19:51:28,666:INFO:Uploading results into container
2021-04-03 19:51:28,666:INFO:Uploading model into container now
2021-04-03 19:51:28,666:INFO:create_model_container: 5
2021-04-03 19:51:28,667:INFO:master_model_container: 5
2021-04-03 19:51:28,667:INFO:display_container: 2
2021-04-03 19:51:28,669:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-03 19:51:28,669:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:28,847:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:28,847:INFO:Creating metrics dataframe
2021-04-03 19:51:28,871:INFO:Initializing Orthogonal Matching Pursuit
2021-04-03 19:51:28,871:INFO:Total runtime is 0.36203364133834837 minutes
2021-04-03 19:51:28,881:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:28,882:INFO:Initializing create_model()
2021-04-03 19:51:28,882:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:28,882:INFO:Checking exceptions
2021-04-03 19:51:28,882:INFO:Importing libraries
2021-04-03 19:51:28,882:INFO:Copying training dataset
2021-04-03 19:51:28,883:INFO:Defining folds
2021-04-03 19:51:28,884:INFO:Declaring metric variables
2021-04-03 19:51:28,898:INFO:Importing untrained model
2021-04-03 19:51:28,912:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-03 19:51:28,945:INFO:Starting cross validation
2021-04-03 19:51:28,946:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:29,050:INFO:Calculating mean and std
2021-04-03 19:51:29,052:INFO:Creating metrics dataframe
2021-04-03 19:51:29,061:INFO:Uploading results into container
2021-04-03 19:51:29,062:INFO:Uploading model into container now
2021-04-03 19:51:29,062:INFO:create_model_container: 6
2021-04-03 19:51:29,062:INFO:master_model_container: 6
2021-04-03 19:51:29,062:INFO:display_container: 2
2021-04-03 19:51:29,064:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-03 19:51:29,065:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:29,187:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:29,187:INFO:Creating metrics dataframe
2021-04-03 19:51:29,236:INFO:Initializing Bayesian Ridge
2021-04-03 19:51:29,236:INFO:Total runtime is 0.368113895257314 minutes
2021-04-03 19:51:29,248:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:29,248:INFO:Initializing create_model()
2021-04-03 19:51:29,249:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:29,249:INFO:Checking exceptions
2021-04-03 19:51:29,249:INFO:Importing libraries
2021-04-03 19:51:29,249:INFO:Copying training dataset
2021-04-03 19:51:29,250:INFO:Defining folds
2021-04-03 19:51:29,250:INFO:Declaring metric variables
2021-04-03 19:51:29,264:INFO:Importing untrained model
2021-04-03 19:51:29,304:INFO:Bayesian Ridge Imported succesfully
2021-04-03 19:51:29,336:INFO:Starting cross validation
2021-04-03 19:51:29,337:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:29,457:INFO:Calculating mean and std
2021-04-03 19:51:29,459:INFO:Creating metrics dataframe
2021-04-03 19:51:29,465:INFO:Uploading results into container
2021-04-03 19:51:29,465:INFO:Uploading model into container now
2021-04-03 19:51:29,465:INFO:create_model_container: 7
2021-04-03 19:51:29,465:INFO:master_model_container: 7
2021-04-03 19:51:29,466:INFO:display_container: 2
2021-04-03 19:51:29,467:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 19:51:29,467:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:29,597:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:29,597:INFO:Creating metrics dataframe
2021-04-03 19:51:29,633:INFO:Initializing Passive Aggressive Regressor
2021-04-03 19:51:29,633:INFO:Total runtime is 0.37473213275273637 minutes
2021-04-03 19:51:29,651:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:29,652:INFO:Initializing create_model()
2021-04-03 19:51:29,652:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:29,652:INFO:Checking exceptions
2021-04-03 19:51:29,652:INFO:Importing libraries
2021-04-03 19:51:29,652:INFO:Copying training dataset
2021-04-03 19:51:29,653:INFO:Defining folds
2021-04-03 19:51:29,654:INFO:Declaring metric variables
2021-04-03 19:51:29,673:INFO:Importing untrained model
2021-04-03 19:51:29,694:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-03 19:51:29,719:INFO:Starting cross validation
2021-04-03 19:51:29,720:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:30,103:INFO:Calculating mean and std
2021-04-03 19:51:30,106:INFO:Creating metrics dataframe
2021-04-03 19:51:30,116:INFO:Uploading results into container
2021-04-03 19:51:30,117:INFO:Uploading model into container now
2021-04-03 19:51:30,117:INFO:create_model_container: 8
2021-04-03 19:51:30,117:INFO:master_model_container: 8
2021-04-03 19:51:30,117:INFO:display_container: 2
2021-04-03 19:51:30,120:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:51:30,121:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:30,253:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:30,254:INFO:Creating metrics dataframe
2021-04-03 19:51:30,289:INFO:Initializing Huber Regressor
2021-04-03 19:51:30,289:INFO:Total runtime is 0.3856758912404378 minutes
2021-04-03 19:51:30,313:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:30,314:INFO:Initializing create_model()
2021-04-03 19:51:30,314:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:30,314:INFO:Checking exceptions
2021-04-03 19:51:30,314:INFO:Importing libraries
2021-04-03 19:51:30,314:INFO:Copying training dataset
2021-04-03 19:51:30,315:INFO:Defining folds
2021-04-03 19:51:30,315:INFO:Declaring metric variables
2021-04-03 19:51:30,329:INFO:Importing untrained model
2021-04-03 19:51:30,370:INFO:Huber Regressor Imported succesfully
2021-04-03 19:51:30,398:INFO:Starting cross validation
2021-04-03 19:51:30,399:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:30,632:INFO:Calculating mean and std
2021-04-03 19:51:30,638:INFO:Creating metrics dataframe
2021-04-03 19:51:30,647:INFO:Uploading results into container
2021-04-03 19:51:30,647:INFO:Uploading model into container now
2021-04-03 19:51:30,647:INFO:create_model_container: 9
2021-04-03 19:51:30,647:INFO:master_model_container: 9
2021-04-03 19:51:30,648:INFO:display_container: 2
2021-04-03 19:51:30,649:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 19:51:30,649:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:30,782:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:30,782:INFO:Creating metrics dataframe
2021-04-03 19:51:30,827:INFO:Initializing K Neighbors Regressor
2021-04-03 19:51:30,828:INFO:Total runtime is 0.3946518540382385 minutes
2021-04-03 19:51:30,847:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:30,848:INFO:Initializing create_model()
2021-04-03 19:51:30,848:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:30,848:INFO:Checking exceptions
2021-04-03 19:51:30,848:INFO:Importing libraries
2021-04-03 19:51:30,848:INFO:Copying training dataset
2021-04-03 19:51:30,849:INFO:Defining folds
2021-04-03 19:51:30,849:INFO:Declaring metric variables
2021-04-03 19:51:30,861:INFO:Importing untrained model
2021-04-03 19:51:30,871:INFO:K Neighbors Regressor Imported succesfully
2021-04-03 19:51:30,907:INFO:Starting cross validation
2021-04-03 19:51:30,908:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:31,050:INFO:Calculating mean and std
2021-04-03 19:51:31,052:INFO:Creating metrics dataframe
2021-04-03 19:51:31,059:INFO:Uploading results into container
2021-04-03 19:51:31,060:INFO:Uploading model into container now
2021-04-03 19:51:31,060:INFO:create_model_container: 10
2021-04-03 19:51:31,060:INFO:master_model_container: 10
2021-04-03 19:51:31,061:INFO:display_container: 2
2021-04-03 19:51:31,063:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-03 19:51:31,063:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:31,242:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:31,242:INFO:Creating metrics dataframe
2021-04-03 19:51:31,271:INFO:Initializing Decision Tree Regressor
2021-04-03 19:51:31,272:INFO:Total runtime is 0.402053952217102 minutes
2021-04-03 19:51:31,287:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:31,288:INFO:Initializing create_model()
2021-04-03 19:51:31,288:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:31,288:INFO:Checking exceptions
2021-04-03 19:51:31,288:INFO:Importing libraries
2021-04-03 19:51:31,289:INFO:Copying training dataset
2021-04-03 19:51:31,289:INFO:Defining folds
2021-04-03 19:51:31,290:INFO:Declaring metric variables
2021-04-03 19:51:31,312:INFO:Importing untrained model
2021-04-03 19:51:31,334:INFO:Decision Tree Regressor Imported succesfully
2021-04-03 19:51:31,361:INFO:Starting cross validation
2021-04-03 19:51:31,366:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:31,696:INFO:Calculating mean and std
2021-04-03 19:51:31,698:INFO:Creating metrics dataframe
2021-04-03 19:51:31,708:INFO:Uploading results into container
2021-04-03 19:51:31,708:INFO:Uploading model into container now
2021-04-03 19:51:31,709:INFO:create_model_container: 11
2021-04-03 19:51:31,709:INFO:master_model_container: 11
2021-04-03 19:51:31,709:INFO:display_container: 2
2021-04-03 19:51:31,712:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-03 19:51:31,713:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:31,845:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:31,846:INFO:Creating metrics dataframe
2021-04-03 19:51:31,886:INFO:Initializing Random Forest Regressor
2021-04-03 19:51:31,886:INFO:Total runtime is 0.41229250828425085 minutes
2021-04-03 19:51:31,906:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:31,906:INFO:Initializing create_model()
2021-04-03 19:51:31,907:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:31,907:INFO:Checking exceptions
2021-04-03 19:51:31,907:INFO:Importing libraries
2021-04-03 19:51:31,908:INFO:Copying training dataset
2021-04-03 19:51:31,909:INFO:Defining folds
2021-04-03 19:51:31,909:INFO:Declaring metric variables
2021-04-03 19:51:31,920:INFO:Importing untrained model
2021-04-03 19:51:31,934:INFO:Random Forest Regressor Imported succesfully
2021-04-03 19:51:31,963:INFO:Starting cross validation
2021-04-03 19:51:31,964:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:33,143:INFO:Calculating mean and std
2021-04-03 19:51:33,145:INFO:Creating metrics dataframe
2021-04-03 19:51:33,151:INFO:Uploading results into container
2021-04-03 19:51:33,152:INFO:Uploading model into container now
2021-04-03 19:51:33,156:INFO:create_model_container: 12
2021-04-03 19:51:33,157:INFO:master_model_container: 12
2021-04-03 19:51:33,157:INFO:display_container: 2
2021-04-03 19:51:33,161:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 19:51:33,161:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:33,352:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:33,353:INFO:Creating metrics dataframe
2021-04-03 19:51:33,383:INFO:Initializing Extra Trees Regressor
2021-04-03 19:51:33,383:INFO:Total runtime is 0.43723070224126176 minutes
2021-04-03 19:51:33,400:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:33,402:INFO:Initializing create_model()
2021-04-03 19:51:33,402:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:33,402:INFO:Checking exceptions
2021-04-03 19:51:33,402:INFO:Importing libraries
2021-04-03 19:51:33,402:INFO:Copying training dataset
2021-04-03 19:51:33,404:INFO:Defining folds
2021-04-03 19:51:33,404:INFO:Declaring metric variables
2021-04-03 19:51:33,421:INFO:Importing untrained model
2021-04-03 19:51:33,436:INFO:Extra Trees Regressor Imported succesfully
2021-04-03 19:51:33,460:INFO:Starting cross validation
2021-04-03 19:51:33,462:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:34,638:INFO:Calculating mean and std
2021-04-03 19:51:34,640:INFO:Creating metrics dataframe
2021-04-03 19:51:34,646:INFO:Uploading results into container
2021-04-03 19:51:34,646:INFO:Uploading model into container now
2021-04-03 19:51:34,646:INFO:create_model_container: 13
2021-04-03 19:51:34,646:INFO:master_model_container: 13
2021-04-03 19:51:34,647:INFO:display_container: 2
2021-04-03 19:51:34,648:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 19:51:34,648:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:34,779:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:34,779:INFO:Creating metrics dataframe
2021-04-03 19:51:34,819:INFO:Initializing AdaBoost Regressor
2021-04-03 19:51:34,820:INFO:Total runtime is 0.4611810406049092 minutes
2021-04-03 19:51:34,855:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:34,855:INFO:Initializing create_model()
2021-04-03 19:51:34,856:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:34,856:INFO:Checking exceptions
2021-04-03 19:51:34,856:INFO:Importing libraries
2021-04-03 19:51:34,856:INFO:Copying training dataset
2021-04-03 19:51:34,859:INFO:Defining folds
2021-04-03 19:51:34,859:INFO:Declaring metric variables
2021-04-03 19:51:34,873:INFO:Importing untrained model
2021-04-03 19:51:34,890:INFO:AdaBoost Regressor Imported succesfully
2021-04-03 19:51:34,916:INFO:Starting cross validation
2021-04-03 19:51:34,916:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:35,490:INFO:Calculating mean and std
2021-04-03 19:51:35,493:INFO:Creating metrics dataframe
2021-04-03 19:51:35,504:INFO:Uploading results into container
2021-04-03 19:51:35,505:INFO:Uploading model into container now
2021-04-03 19:51:35,505:INFO:create_model_container: 14
2021-04-03 19:51:35,505:INFO:master_model_container: 14
2021-04-03 19:51:35,505:INFO:display_container: 2
2021-04-03 19:51:35,506:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-03 19:51:35,507:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:35,689:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:35,690:INFO:Creating metrics dataframe
2021-04-03 19:51:35,719:INFO:Initializing Gradient Boosting Regressor
2021-04-03 19:51:35,719:INFO:Total runtime is 0.47617776393890376 minutes
2021-04-03 19:51:35,737:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:35,737:INFO:Initializing create_model()
2021-04-03 19:51:35,738:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:35,738:INFO:Checking exceptions
2021-04-03 19:51:35,738:INFO:Importing libraries
2021-04-03 19:51:35,738:INFO:Copying training dataset
2021-04-03 19:51:35,743:INFO:Defining folds
2021-04-03 19:51:35,743:INFO:Declaring metric variables
2021-04-03 19:51:35,757:INFO:Importing untrained model
2021-04-03 19:51:35,774:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 19:51:35,801:INFO:Starting cross validation
2021-04-03 19:51:35,802:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:36,243:INFO:Calculating mean and std
2021-04-03 19:51:36,244:INFO:Creating metrics dataframe
2021-04-03 19:51:36,249:INFO:Uploading results into container
2021-04-03 19:51:36,250:INFO:Uploading model into container now
2021-04-03 19:51:36,250:INFO:create_model_container: 15
2021-04-03 19:51:36,250:INFO:master_model_container: 15
2021-04-03 19:51:36,250:INFO:display_container: 2
2021-04-03 19:51:36,252:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 19:51:36,253:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:36,397:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:36,397:INFO:Creating metrics dataframe
2021-04-03 19:51:36,434:INFO:Initializing Extreme Gradient Boosting
2021-04-03 19:51:36,434:INFO:Total runtime is 0.4880822976430257 minutes
2021-04-03 19:51:36,448:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:36,449:INFO:Initializing create_model()
2021-04-03 19:51:36,449:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:36,449:INFO:Checking exceptions
2021-04-03 19:51:36,449:INFO:Importing libraries
2021-04-03 19:51:36,449:INFO:Copying training dataset
2021-04-03 19:51:36,450:INFO:Defining folds
2021-04-03 19:51:36,450:INFO:Declaring metric variables
2021-04-03 19:51:36,472:INFO:Importing untrained model
2021-04-03 19:51:36,491:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 19:51:36,522:INFO:Starting cross validation
2021-04-03 19:51:36,525:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:39,457:INFO:Calculating mean and std
2021-04-03 19:51:39,460:INFO:Creating metrics dataframe
2021-04-03 19:51:39,468:INFO:Uploading results into container
2021-04-03 19:51:39,468:INFO:Uploading model into container now
2021-04-03 19:51:39,469:INFO:create_model_container: 16
2021-04-03 19:51:39,469:INFO:master_model_container: 16
2021-04-03 19:51:39,469:INFO:display_container: 2
2021-04-03 19:51:39,475:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 19:51:39,475:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:39,598:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:39,598:INFO:Creating metrics dataframe
2021-04-03 19:51:39,622:INFO:Initializing Light Gradient Boosting Machine
2021-04-03 19:51:39,622:INFO:Total runtime is 0.5412254254023233 minutes
2021-04-03 19:51:39,636:INFO:SubProcess create_model() called ==================================
2021-04-03 19:51:39,636:INFO:Initializing create_model()
2021-04-03 19:51:39,636:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09BE3B20>, kwargs={})
2021-04-03 19:51:39,637:INFO:Checking exceptions
2021-04-03 19:51:39,637:INFO:Importing libraries
2021-04-03 19:51:39,637:INFO:Copying training dataset
2021-04-03 19:51:39,638:INFO:Defining folds
2021-04-03 19:51:39,638:INFO:Declaring metric variables
2021-04-03 19:51:39,649:INFO:Importing untrained model
2021-04-03 19:51:39,668:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-03 19:51:39,713:INFO:Starting cross validation
2021-04-03 19:51:39,714:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:40,722:INFO:Calculating mean and std
2021-04-03 19:51:40,724:INFO:Creating metrics dataframe
2021-04-03 19:51:40,735:INFO:Uploading results into container
2021-04-03 19:51:40,735:INFO:Uploading model into container now
2021-04-03 19:51:40,735:INFO:create_model_container: 17
2021-04-03 19:51:40,735:INFO:master_model_container: 17
2021-04-03 19:51:40,736:INFO:display_container: 2
2021-04-03 19:51:40,739:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-03 19:51:40,739:INFO:create_model() succesfully completed......................................
2021-04-03 19:51:40,871:INFO:SubProcess create_model() end ==================================
2021-04-03 19:51:40,871:INFO:Creating metrics dataframe
2021-04-03 19:51:40,920:INFO:Initializing create_model()
2021-04-03 19:51:40,921:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 19:51:40,921:INFO:Checking exceptions
2021-04-03 19:51:40,921:INFO:Importing libraries
2021-04-03 19:51:40,921:INFO:Copying training dataset
2021-04-03 19:51:40,921:INFO:Defining folds
2021-04-03 19:51:40,921:INFO:Declaring metric variables
2021-04-03 19:51:40,922:INFO:Importing untrained model
2021-04-03 19:51:40,922:INFO:Declaring custom model
2021-04-03 19:51:40,923:INFO:Ridge Regression Imported succesfully
2021-04-03 19:51:40,924:INFO:Cross validation set to False
2021-04-03 19:51:40,924:INFO:Fitting Model
2021-04-03 19:51:40,934:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:51:40,935:INFO:create_models() succesfully completed......................................
2021-04-03 19:51:41,071:INFO:Creating MLFlow logs
2021-04-03 19:51:41,085:INFO:Model: Ridge Regression
2021-04-03 19:51:41,166:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 19:51:41,317:INFO:Initializing predict_model()
2021-04-03 19:51:41,317:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 19:51:41,317:INFO:Checking exceptions
2021-04-03 19:51:41,317:INFO:Preloading libraries
2021-04-03 19:51:41,611:INFO:Creating MLFlow logs
2021-04-03 19:51:41,622:INFO:Model: Bayesian Ridge
2021-04-03 19:51:41,712:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 19:51:42,010:INFO:Creating MLFlow logs
2021-04-03 19:51:42,021:INFO:Model: Linear Regression
2021-04-03 19:51:42,089:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 19:51:42,414:INFO:Creating MLFlow logs
2021-04-03 19:51:42,439:INFO:Model: Huber Regressor
2021-04-03 19:51:42,519:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 19:51:42,817:INFO:Creating MLFlow logs
2021-04-03 19:51:42,837:INFO:Model: Extra Trees Regressor
2021-04-03 19:51:42,898:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 19:51:43,201:INFO:Creating MLFlow logs
2021-04-03 19:51:43,216:INFO:Model: Random Forest Regressor
2021-04-03 19:51:43,300:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 19:51:43,598:INFO:Creating MLFlow logs
2021-04-03 19:51:43,612:INFO:Model: Gradient Boosting Regressor
2021-04-03 19:51:43,688:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 19:51:44,018:INFO:Creating MLFlow logs
2021-04-03 19:51:44,037:INFO:Model: Light Gradient Boosting Machine
2021-04-03 19:51:44,104:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-03 19:51:44,444:INFO:Creating MLFlow logs
2021-04-03 19:51:44,461:INFO:Model: AdaBoost Regressor
2021-04-03 19:51:44,512:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-03 19:51:44,840:INFO:Creating MLFlow logs
2021-04-03 19:51:44,861:INFO:Model: Extreme Gradient Boosting
2021-04-03 19:51:44,936:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-03 19:51:45,366:INFO:Creating MLFlow logs
2021-04-03 19:51:45,379:INFO:Model: K Neighbors Regressor
2021-04-03 19:51:45,442:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-03 19:51:45,752:INFO:Creating MLFlow logs
2021-04-03 19:51:45,770:INFO:Model: Decision Tree Regressor
2021-04-03 19:51:45,843:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-03 19:51:46,223:INFO:Creating MLFlow logs
2021-04-03 19:51:46,244:INFO:Model: Orthogonal Matching Pursuit
2021-04-03 19:51:46,296:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-03 19:51:46,578:INFO:Creating MLFlow logs
2021-04-03 19:51:46,595:INFO:Model: Passive Aggressive Regressor
2021-04-03 19:51:46,683:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 19:51:47,020:INFO:Creating MLFlow logs
2021-04-03 19:51:47,046:INFO:Model: Elastic Net
2021-04-03 19:51:47,119:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 19:51:47,458:INFO:Creating MLFlow logs
2021-04-03 19:51:47,481:INFO:Model: Lasso Regression
2021-04-03 19:51:47,536:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 19:51:47,849:INFO:Creating MLFlow logs
2021-04-03 19:51:47,868:INFO:Model: Least Angle Regression
2021-04-03 19:51:47,933:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-03 19:51:48,288:INFO:create_model_container: 17
2021-04-03 19:51:48,288:INFO:master_model_container: 17
2021-04-03 19:51:48,288:INFO:display_container: 2
2021-04-03 19:51:48,289:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:51:48,289:INFO:compare_models() succesfully completed......................................
2021-04-03 19:51:48,311:INFO:Initializing create_model()
2021-04-03 19:51:48,313:INFO:create_model(estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-03 19:51:48,313:INFO:Checking exceptions
2021-04-03 19:51:48,313:INFO:Preparing display monitor
2021-04-03 19:51:48,362:INFO:Importing libraries
2021-04-03 19:51:48,362:INFO:Copying training dataset
2021-04-03 19:51:48,365:INFO:Defining folds
2021-04-03 19:51:48,365:INFO:Declaring metric variables
2021-04-03 19:51:48,381:INFO:Importing untrained model
2021-04-03 19:51:48,401:INFO:Ridge Regression Imported succesfully
2021-04-03 19:51:48,435:INFO:Starting cross validation
2021-04-03 19:51:48,437:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:51:48,783:INFO:Calculating mean and std
2021-04-03 19:51:48,785:INFO:Creating metrics dataframe
2021-04-03 19:51:48,831:INFO:Finalizing model
2021-04-03 19:51:48,848:INFO:Creating MLFlow logs
2021-04-03 19:51:48,881:INFO:Model: Ridge Regression
2021-04-03 19:51:48,952:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 19:51:49,145:INFO:Initializing predict_model()
2021-04-03 19:51:49,145:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 19:51:49,145:INFO:Checking exceptions
2021-04-03 19:51:49,145:INFO:Preloading libraries
2021-04-03 19:51:49,618:INFO:Uploading results into container
2021-04-03 19:51:49,618:INFO:Uploading model into container now
2021-04-03 19:51:49,639:INFO:create_model_container: 18
2021-04-03 19:51:49,639:INFO:master_model_container: 18
2021-04-03 19:51:49,639:INFO:display_container: 3
2021-04-03 19:51:49,642:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:51:49,642:INFO:create_model() succesfully completed......................................
2021-04-03 19:53:50,731:INFO:Initializing tune_model()
2021-04-03 19:53:50,732:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-03 19:53:50,732:INFO:Checking exceptions
2021-04-03 19:53:50,733:INFO:Preparing display monitor
2021-04-03 19:53:50,761:INFO:Copying training dataset
2021-04-03 19:53:50,763:INFO:Checking base model
2021-04-03 19:53:50,763:INFO:Base model : Ridge Regression
2021-04-03 19:53:50,786:INFO:Declaring metric variables
2021-04-03 19:53:50,812:INFO:Defining Hyperparameters
2021-04-03 19:53:50,939:INFO:Tuning with n_jobs=-1
2021-04-03 19:53:50,939:INFO:Initializing RandomizedSearchCV
2021-04-03 19:53:51,684:INFO:best_params: {'actual_estimator__normalize': True, 'actual_estimator__fit_intercept': False, 'actual_estimator__alpha': 0.72}
2021-04-03 19:53:51,686:INFO:Hyperparameter search completed
2021-04-03 19:53:51,686:INFO:SubProcess create_model() called ==================================
2021-04-03 19:53:51,688:INFO:Initializing create_model()
2021-04-03 19:53:51,688:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E09C939D0>, kwargs={'normalize': True, 'fit_intercept': False, 'alpha': 0.72})
2021-04-03 19:53:51,689:INFO:Checking exceptions
2021-04-03 19:53:51,689:INFO:Importing libraries
2021-04-03 19:53:51,689:INFO:Copying training dataset
2021-04-03 19:53:51,690:INFO:Defining folds
2021-04-03 19:53:51,691:INFO:Declaring metric variables
2021-04-03 19:53:51,717:INFO:Importing untrained model
2021-04-03 19:53:51,717:INFO:Declaring custom model
2021-04-03 19:53:51,736:INFO:Ridge Regression Imported succesfully
2021-04-03 19:53:51,779:INFO:Starting cross validation
2021-04-03 19:53:51,780:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:53:51,881:INFO:Calculating mean and std
2021-04-03 19:53:51,884:INFO:Creating metrics dataframe
2021-04-03 19:53:51,903:INFO:Finalizing model
2021-04-03 19:53:51,911:INFO:Uploading results into container
2021-04-03 19:53:51,912:INFO:Uploading model into container now
2021-04-03 19:53:51,912:INFO:create_model_container: 19
2021-04-03 19:53:51,912:INFO:master_model_container: 19
2021-04-03 19:53:51,912:INFO:display_container: 4
2021-04-03 19:53:51,914:INFO:PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:53:51,915:INFO:create_model() succesfully completed......................................
2021-04-03 19:53:52,086:INFO:SubProcess create_model() end ==================================
2021-04-03 19:53:52,086:INFO:Creating MLFlow logs
2021-04-03 19:53:52,107:INFO:Model: Ridge Regression
2021-04-03 19:53:52,150:INFO:logged params: {'alpha': 0.72, 'copy_X': True, 'fit_intercept': False, 'max_iter': None, 'normalize': True, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 19:53:52,359:INFO:Initializing predict_model()
2021-04-03 19:53:52,360:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 19:53:52,360:INFO:Checking exceptions
2021-04-03 19:53:52,360:INFO:Preloading libraries
2021-04-03 19:53:52,910:INFO:create_model_container: 19
2021-04-03 19:53:52,910:INFO:master_model_container: 19
2021-04-03 19:53:52,910:INFO:display_container: 4
2021-04-03 19:53:52,912:INFO:PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:53:52,912:INFO:tune_model() succesfully completed......................................
2021-04-03 19:53:55,629:INFO:Initializing plot_model()
2021-04-03 19:53:55,630:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 19:53:55,631:INFO:Checking exceptions
2021-04-03 19:53:55,632:INFO:Preparing display monitor
2021-04-03 19:53:55,642:INFO:Preloading libraries
2021-04-03 19:53:55,645:INFO:Copying training dataset
2021-04-03 19:53:55,646:INFO:Copying test dataset
2021-04-03 19:53:55,648:INFO:Plot type: residuals
2021-04-03 19:53:55,688:INFO:Fitting Model
2021-04-03 19:53:55,732:INFO:Scoring test/hold-out set
2021-04-03 19:53:56,407:INFO:Visual Rendered Successfully
2021-04-03 19:53:56,511:INFO:plot_model() succesfully completed......................................
2021-04-03 19:53:58,762:INFO:Initializing plot_model()
2021-04-03 19:53:58,763:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 19:53:58,763:INFO:Checking exceptions
2021-04-03 19:53:58,763:INFO:Preparing display monitor
2021-04-03 19:53:58,777:INFO:Preloading libraries
2021-04-03 19:53:58,781:INFO:Copying training dataset
2021-04-03 19:53:58,782:INFO:Copying test dataset
2021-04-03 19:53:58,782:INFO:Plot type: error
2021-04-03 19:53:58,785:INFO:Fitting Model
2021-04-03 19:53:58,786:INFO:Scoring test/hold-out set
2021-04-03 19:53:59,228:INFO:Visual Rendered Successfully
2021-04-03 19:53:59,374:INFO:plot_model() succesfully completed......................................
2021-04-03 19:54:01,840:INFO:Initializing plot_model()
2021-04-03 19:54:01,841:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 19:54:01,841:INFO:Checking exceptions
2021-04-03 19:54:01,842:INFO:Preparing display monitor
2021-04-03 19:54:01,853:INFO:Preloading libraries
2021-04-03 19:54:01,856:INFO:Copying training dataset
2021-04-03 19:54:01,856:INFO:Copying test dataset
2021-04-03 19:54:01,857:INFO:Plot type: feature
2021-04-03 19:54:02,129:INFO:Visual Rendered Successfully
2021-04-03 19:54:02,244:INFO:plot_model() succesfully completed......................................
2021-04-03 19:54:06,741:INFO:Initializing evaluate_model()
2021-04-03 19:54:06,741:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-03 19:54:06,774:INFO:Initializing plot_model()
2021-04-03 19:54:06,774:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 19:54:06,775:INFO:Checking exceptions
2021-04-03 19:54:06,775:INFO:Preparing display monitor
2021-04-03 19:54:06,784:INFO:Preloading libraries
2021-04-03 19:54:06,786:INFO:Copying training dataset
2021-04-03 19:54:06,787:INFO:Copying test dataset
2021-04-03 19:54:06,787:INFO:Plot type: parameter
2021-04-03 19:54:06,795:INFO:Visual Rendered Successfully
2021-04-03 19:54:06,944:INFO:plot_model() succesfully completed......................................
2021-04-03 19:54:09,752:INFO:Initializing automl()
2021-04-03 19:54:09,753:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-03 19:54:09,753:INFO:Model Selection Basis : CV Results on Training set
2021-04-03 19:54:09,757:INFO:Initializing create_model()
2021-04-03 19:54:09,758:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 19:54:09,758:INFO:Checking exceptions
2021-04-03 19:54:09,758:INFO:Importing libraries
2021-04-03 19:54:09,758:INFO:Copying training dataset
2021-04-03 19:54:09,758:INFO:Defining folds
2021-04-03 19:54:09,758:INFO:Declaring metric variables
2021-04-03 19:54:09,758:INFO:Importing untrained model
2021-04-03 19:54:09,759:INFO:Declaring custom model
2021-04-03 19:54:09,760:INFO:Ridge Regression Imported succesfully
2021-04-03 19:54:09,760:INFO:Cross validation set to False
2021-04-03 19:54:09,761:INFO:Fitting Model
2021-04-03 19:54:09,773:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:54:09,773:INFO:create_models() succesfully completed......................................
2021-04-03 19:54:09,907:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:54:09,907:INFO:automl() succesfully completed......................................
2021-04-03 19:54:11,791:INFO:Initializing predict_model()
2021-04-03 19:54:11,791:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 19:54:11,791:INFO:Checking exceptions
2021-04-03 19:54:11,791:INFO:Preloading libraries
2021-04-03 19:54:11,791:INFO:Preparing display monitor
2021-04-03 19:54:15,294:INFO:Initializing finalize_model()
2021-04-03 19:54:15,295:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-03 19:54:15,296:INFO:Finalizing PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:54:15,298:INFO:Initializing create_model()
2021-04-03 19:54:15,299:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 19:54:15,300:INFO:Checking exceptions
2021-04-03 19:54:15,301:INFO:Importing libraries
2021-04-03 19:54:15,301:INFO:Copying training dataset
2021-04-03 19:54:15,302:INFO:Defining folds
2021-04-03 19:54:15,302:INFO:Declaring metric variables
2021-04-03 19:54:15,303:INFO:Importing untrained model
2021-04-03 19:54:15,303:INFO:Declaring custom model
2021-04-03 19:54:15,304:INFO:Ridge Regression Imported succesfully
2021-04-03 19:54:15,304:INFO:Starting cross validation
2021-04-03 19:54:15,305:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 19:54:15,620:INFO:Calculating mean and std
2021-04-03 19:54:15,620:INFO:Creating metrics dataframe
2021-04-03 19:54:15,629:INFO:Finalizing model
2021-04-03 19:54:15,644:INFO:Uploading results into container
2021-04-03 19:54:15,644:INFO:Uploading model into container now
2021-04-03 19:54:15,645:INFO:create_model_container: 20
2021-04-03 19:54:15,646:INFO:master_model_container: 20
2021-04-03 19:54:15,646:INFO:display_container: 6
2021-04-03 19:54:15,647:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:54:15,647:INFO:create_model() succesfully completed......................................
2021-04-03 19:54:15,760:INFO:Creating MLFlow logs
2021-04-03 19:54:15,763:INFO:Model: Ridge Regression
2021-04-03 19:54:15,807:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 19:54:15,943:INFO:Initializing predict_model()
2021-04-03 19:54:15,944:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 19:54:15,944:INFO:Checking exceptions
2021-04-03 19:54:15,944:INFO:Preloading libraries
2021-04-03 19:54:16,263:INFO:create_model_container: 20
2021-04-03 19:54:16,263:INFO:master_model_container: 20
2021-04-03 19:54:16,263:INFO:display_container: 5
2021-04-03 19:54:16,265:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 19:54:16,266:INFO:finalize_model() succesfully completed......................................
2021-04-03 19:54:18,872:INFO:Initializing predict_model()
2021-04-03 19:54:18,872:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 19:54:18,872:INFO:Checking exceptions
2021-04-03 19:54:18,872:INFO:Preloading libraries
2021-04-03 19:54:18,872:INFO:Preparing display monitor
2021-04-03 19:54:23,146:INFO:Initializing predict_model()
2021-04-03 19:54:23,146:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 19:54:23,147:INFO:Checking exceptions
2021-04-03 19:54:23,147:INFO:Preloading libraries
2021-04-03 19:54:23,147:INFO:Preparing display monitor
2021-04-03 19:54:57,196:INFO:Initializing save_model()
2021-04-03 19:54:57,197:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), model_name=saved_models/best_model_to_predict_highschool_graduation_rate_ridge_regression, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2021-04-03 19:54:57,197:INFO:Adding model into prep_pipe
2021-04-03 19:54:57,226:INFO:saved_models/best_model_to_predict_highschool_graduation_rate_ridge_regression.pkl saved in current working directory
2021-04-03 19:54:57,239:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                                 fit_intercept=True,
                                                 max_iter=None, normalize=False,
                                                 power_transformer_method='box-cox',
                                                 power_transformer_standardize=True,
                                                 random_state=786,
                                                 regressor=Ridge(alpha=1.0,
                                                                 copy_X=True,
                                                                 fit_intercept=True,
                                                                 max_iter=None,
                                                                 normalize=False,
                                                                 random_state=786,
                                                                 solver='auto',
                                                                 tol=0.001),
                                                 solver='auto', tol=0.001)]],
         verbose=False)
2021-04-03 19:54:57,239:INFO:save_model() succesfully completed......................................
2021-04-03 20:49:45,281:INFO:Initializing predict_model()
2021-04-03 20:49:45,282:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 20:49:45,283:INFO:Checking exceptions
2021-04-03 20:49:45,283:INFO:Preloading libraries
2021-04-03 20:49:45,284:INFO:Preparing display monitor
2021-04-03 21:37:43,250:INFO:PyCaret Supervised Module
2021-04-03 21:37:43,250:INFO:ML Usecase: regression
2021-04-03 21:37:43,250:INFO:version 2.3.0
2021-04-03 21:37:43,251:INFO:Initializing setup()
2021-04-03 21:37:43,251:INFO:setup(target=highschool_graduation_rate, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 21:37:43,252:INFO:Checking environment
2021-04-03 21:37:43,252:INFO:python_version: 3.9.1
2021-04-03 21:37:43,252:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 21:37:43,252:INFO:machine: AMD64
2021-04-03 21:37:43,252:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 21:37:43,256:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 21:37:43,257:INFO:Checking libraries
2021-04-03 21:37:43,257:INFO:pd==1.2.2
2021-04-03 21:37:43,257:INFO:numpy==1.19.5
2021-04-03 21:37:43,257:INFO:sklearn==0.23.2
2021-04-03 21:37:43,257:INFO:lightgbm==3.1.1
2021-04-03 21:37:43,258:WARNING:catboost not found
2021-04-03 21:37:43,259:INFO:xgboost==1.3.3
2021-04-03 21:37:43,259:INFO:mlflow==1.14.1
2021-04-03 21:37:43,259:INFO:Checking Exceptions
2021-04-03 21:37:43,259:INFO:Declaring global variables
2021-04-03 21:37:43,259:INFO:USI: d28d
2021-04-03 21:37:43,259:INFO:pycaret_globals: {'exp_name_log', '_all_models_internal', 'fold_shuffle_param', '_all_models', 'prep_pipe', 'seed', 'fix_imbalance_method_param', 'pycaret_globals', 'fold_generator', 'X', '_available_plots', 'fold_groups_param', 'logging_param', 'create_model_container', '_gpu_n_jobs_param', 'target_param', 'log_plots_param', 'iterative_imputation_iters_param', 'experiment__', 'fold_param', 'X_test', 'imputation_regressor', '_ml_usecase', 'imputation_classifier', 'data_before_preprocess', 'n_jobs_param', 'html_param', 'transform_target_method_param', 'fix_imbalance_param', '_all_metrics', '_internal_pipeline', 'gpu_param', 'transform_target_param', 'y_train', 'X_train', 'USI', 'y_test', 'y', 'master_model_container', 'display_container', 'stratify_param'}
2021-04-03 21:37:43,260:INFO:Preparing display monitor
2021-04-03 21:37:43,260:INFO:Preparing display monitor
2021-04-03 21:37:43,280:INFO:Importing libraries
2021-04-03 21:37:43,281:INFO:Copying data for preprocessing
2021-04-03 21:37:43,296:INFO:Declaring preprocessing parameters
2021-04-03 21:37:43,298:INFO:Creating preprocessing pipeline
2021-04-03 21:37:43,306:INFO:Preprocessing pipeline created successfully
2021-04-03 21:37:43,307:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 21:37:43,307:INFO:Creating global containers
2021-04-03 21:37:43,307:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 21:37:46,276:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 21:37:46,413:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 21:37:46,413:INFO:Creating grid variables
2021-04-03 21:37:46,436:INFO:Logging experiment in MLFlow
2021-04-03 21:37:46,442:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-03 21:37:46,443:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-03 21:37:46,638:INFO:SubProcess save_model() called ==================================
2021-04-03 21:37:46,650:INFO:Initializing save_model()
2021-04-03 21:37:46,650:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 21:37:46,650:INFO:Adding model into prep_pipe
2021-04-03 21:37:46,651:WARNING:Only Model saved as it was a pipeline.
2021-04-03 21:37:46,674:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 21:37:46,680:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 21:37:46,680:INFO:save_model() succesfully completed......................................
2021-04-03 21:37:46,789:INFO:SubProcess save_model() end ==================================
2021-04-03 21:37:46,958:INFO:create_model_container: 0
2021-04-03 21:37:46,958:INFO:master_model_container: 0
2021-04-03 21:37:46,958:INFO:display_container: 1
2021-04-03 21:37:46,968:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 21:37:46,968:INFO:setup() succesfully completed......................................
2021-04-03 21:37:47,088:INFO:Initializing compare_models()
2021-04-03 21:37:47,088:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-03 21:37:47,089:INFO:Checking exceptions
2021-04-03 21:37:47,089:INFO:Preparing display monitor
2021-04-03 21:37:47,090:INFO:Preparing display monitor
2021-04-03 21:37:47,146:INFO:Initializing Linear Regression
2021-04-03 21:37:47,146:INFO:Total runtime is 0.0 minutes
2021-04-03 21:37:47,167:INFO:SubProcess create_model() called ==================================
2021-04-03 21:37:47,167:INFO:Initializing create_model()
2021-04-03 21:37:47,168:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:37:47,168:INFO:Checking exceptions
2021-04-03 21:37:47,168:INFO:Importing libraries
2021-04-03 21:37:47,168:INFO:Copying training dataset
2021-04-03 21:37:47,171:INFO:Defining folds
2021-04-03 21:37:47,171:INFO:Declaring metric variables
2021-04-03 21:37:47,189:INFO:Importing untrained model
2021-04-03 21:37:47,204:INFO:Linear Regression Imported succesfully
2021-04-03 21:37:47,240:INFO:Starting cross validation
2021-04-03 21:37:47,242:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:37:55,507:INFO:Calculating mean and std
2021-04-03 21:37:55,508:INFO:Creating metrics dataframe
2021-04-03 21:37:55,515:INFO:Uploading results into container
2021-04-03 21:37:55,516:INFO:Uploading model into container now
2021-04-03 21:37:55,516:INFO:create_model_container: 1
2021-04-03 21:37:55,516:INFO:master_model_container: 1
2021-04-03 21:37:55,516:INFO:display_container: 2
2021-04-03 21:37:55,517:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 21:37:55,517:INFO:create_model() succesfully completed......................................
2021-04-03 21:37:55,652:INFO:SubProcess create_model() end ==================================
2021-04-03 21:37:55,653:INFO:Creating metrics dataframe
2021-04-03 21:37:55,676:INFO:Initializing Lasso Regression
2021-04-03 21:37:55,676:INFO:Total runtime is 0.14215412139892578 minutes
2021-04-03 21:37:55,690:INFO:SubProcess create_model() called ==================================
2021-04-03 21:37:55,690:INFO:Initializing create_model()
2021-04-03 21:37:55,690:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:37:55,691:INFO:Checking exceptions
2021-04-03 21:37:55,691:INFO:Importing libraries
2021-04-03 21:37:55,691:INFO:Copying training dataset
2021-04-03 21:37:55,692:INFO:Defining folds
2021-04-03 21:37:55,692:INFO:Declaring metric variables
2021-04-03 21:37:55,706:INFO:Importing untrained model
2021-04-03 21:37:55,721:INFO:Lasso Regression Imported succesfully
2021-04-03 21:37:55,757:INFO:Starting cross validation
2021-04-03 21:37:55,758:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:37:55,879:INFO:Calculating mean and std
2021-04-03 21:37:55,880:INFO:Creating metrics dataframe
2021-04-03 21:37:55,891:INFO:Uploading results into container
2021-04-03 21:37:55,891:INFO:Uploading model into container now
2021-04-03 21:37:55,895:INFO:create_model_container: 2
2021-04-03 21:37:55,895:INFO:master_model_container: 2
2021-04-03 21:37:55,895:INFO:display_container: 2
2021-04-03 21:37:55,897:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 21:37:55,897:INFO:create_model() succesfully completed......................................
2021-04-03 21:37:56,061:INFO:SubProcess create_model() end ==================================
2021-04-03 21:37:56,061:INFO:Creating metrics dataframe
2021-04-03 21:37:56,093:INFO:Initializing Ridge Regression
2021-04-03 21:37:56,093:INFO:Total runtime is 0.1491145928700765 minutes
2021-04-03 21:37:56,110:INFO:SubProcess create_model() called ==================================
2021-04-03 21:37:56,111:INFO:Initializing create_model()
2021-04-03 21:37:56,111:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:37:56,112:INFO:Checking exceptions
2021-04-03 21:37:56,112:INFO:Importing libraries
2021-04-03 21:37:56,112:INFO:Copying training dataset
2021-04-03 21:37:56,114:INFO:Defining folds
2021-04-03 21:37:56,114:INFO:Declaring metric variables
2021-04-03 21:37:56,125:INFO:Importing untrained model
2021-04-03 21:37:56,135:INFO:Ridge Regression Imported succesfully
2021-04-03 21:37:56,167:INFO:Starting cross validation
2021-04-03 21:37:56,168:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:37:56,308:INFO:Calculating mean and std
2021-04-03 21:37:56,311:INFO:Creating metrics dataframe
2021-04-03 21:37:56,322:INFO:Uploading results into container
2021-04-03 21:37:56,322:INFO:Uploading model into container now
2021-04-03 21:37:56,323:INFO:create_model_container: 3
2021-04-03 21:37:56,327:INFO:master_model_container: 3
2021-04-03 21:37:56,327:INFO:display_container: 2
2021-04-03 21:37:56,329:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 21:37:56,329:INFO:create_model() succesfully completed......................................
2021-04-03 21:37:56,555:INFO:SubProcess create_model() end ==================================
2021-04-03 21:37:56,556:INFO:Creating metrics dataframe
2021-04-03 21:37:56,585:INFO:Initializing Elastic Net
2021-04-03 21:37:56,586:INFO:Total runtime is 0.15733232498168945 minutes
2021-04-03 21:37:56,598:INFO:SubProcess create_model() called ==================================
2021-04-03 21:37:56,598:INFO:Initializing create_model()
2021-04-03 21:37:56,598:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:37:56,598:INFO:Checking exceptions
2021-04-03 21:37:56,598:INFO:Importing libraries
2021-04-03 21:37:56,598:INFO:Copying training dataset
2021-04-03 21:37:56,599:INFO:Defining folds
2021-04-03 21:37:56,600:INFO:Declaring metric variables
2021-04-03 21:37:56,614:INFO:Importing untrained model
2021-04-03 21:37:56,631:INFO:Elastic Net Imported succesfully
2021-04-03 21:37:56,666:INFO:Starting cross validation
2021-04-03 21:37:56,667:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:37:56,807:INFO:Calculating mean and std
2021-04-03 21:37:56,810:INFO:Creating metrics dataframe
2021-04-03 21:37:56,819:INFO:Uploading results into container
2021-04-03 21:37:56,819:INFO:Uploading model into container now
2021-04-03 21:37:56,821:INFO:create_model_container: 4
2021-04-03 21:37:56,822:INFO:master_model_container: 4
2021-04-03 21:37:56,822:INFO:display_container: 2
2021-04-03 21:37:56,825:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 21:37:56,826:INFO:create_model() succesfully completed......................................
2021-04-03 21:37:56,983:INFO:SubProcess create_model() end ==================================
2021-04-03 21:37:56,983:INFO:Creating metrics dataframe
2021-04-03 21:37:57,008:INFO:Initializing Least Angle Regression
2021-04-03 21:37:57,009:INFO:Total runtime is 0.16437612771987914 minutes
2021-04-03 21:37:57,024:INFO:SubProcess create_model() called ==================================
2021-04-03 21:37:57,025:INFO:Initializing create_model()
2021-04-03 21:37:57,025:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:37:57,025:INFO:Checking exceptions
2021-04-03 21:37:57,025:INFO:Importing libraries
2021-04-03 21:37:57,025:INFO:Copying training dataset
2021-04-03 21:37:57,026:INFO:Defining folds
2021-04-03 21:37:57,027:INFO:Declaring metric variables
2021-04-03 21:37:57,042:INFO:Importing untrained model
2021-04-03 21:37:57,057:INFO:Least Angle Regression Imported succesfully
2021-04-03 21:37:57,084:INFO:Starting cross validation
2021-04-03 21:37:57,085:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:37:58,405:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-03 21:37:58,406:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 21:37:58,407:INFO:Initializing create_model()
2021-04-03 21:37:58,407:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:37:58,407:INFO:Checking exceptions
2021-04-03 21:37:58,407:INFO:Importing libraries
2021-04-03 21:37:58,407:INFO:Copying training dataset
2021-04-03 21:37:58,409:INFO:Defining folds
2021-04-03 21:37:58,410:INFO:Declaring metric variables
2021-04-03 21:37:58,423:INFO:Importing untrained model
2021-04-03 21:37:58,432:INFO:Least Angle Regression Imported succesfully
2021-04-03 21:37:58,462:INFO:Starting cross validation
2021-04-03 21:37:58,463:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:05,661:ERROR:create_model() for lar raised an exception:
2021-04-03 21:38:05,662:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 21:38:05,662:INFO:Initializing Lasso Least Angle Regression
2021-04-03 21:38:05,662:INFO:Total runtime is 0.3085991700490316 minutes
2021-04-03 21:38:05,677:INFO:SubProcess create_model() called ==================================
2021-04-03 21:38:05,678:INFO:Initializing create_model()
2021-04-03 21:38:05,678:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:38:05,678:INFO:Checking exceptions
2021-04-03 21:38:05,679:INFO:Importing libraries
2021-04-03 21:38:05,679:INFO:Copying training dataset
2021-04-03 21:38:05,680:INFO:Defining folds
2021-04-03 21:38:05,680:INFO:Declaring metric variables
2021-04-03 21:38:05,696:INFO:Importing untrained model
2021-04-03 21:38:05,726:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-03 21:38:05,754:INFO:Starting cross validation
2021-04-03 21:38:05,755:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:12,097:INFO:Calculating mean and std
2021-04-03 21:38:12,099:INFO:Creating metrics dataframe
2021-04-03 21:38:12,111:INFO:Uploading results into container
2021-04-03 21:38:12,111:INFO:Uploading model into container now
2021-04-03 21:38:12,112:INFO:create_model_container: 5
2021-04-03 21:38:12,112:INFO:master_model_container: 5
2021-04-03 21:38:12,112:INFO:display_container: 2
2021-04-03 21:38:12,114:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-03 21:38:12,115:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:12,253:INFO:SubProcess create_model() end ==================================
2021-04-03 21:38:12,253:INFO:Creating metrics dataframe
2021-04-03 21:38:12,277:INFO:Initializing Orthogonal Matching Pursuit
2021-04-03 21:38:12,277:INFO:Total runtime is 0.4188502907752991 minutes
2021-04-03 21:38:12,292:INFO:SubProcess create_model() called ==================================
2021-04-03 21:38:12,292:INFO:Initializing create_model()
2021-04-03 21:38:12,292:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:38:12,293:INFO:Checking exceptions
2021-04-03 21:38:12,293:INFO:Importing libraries
2021-04-03 21:38:12,293:INFO:Copying training dataset
2021-04-03 21:38:12,295:INFO:Defining folds
2021-04-03 21:38:12,295:INFO:Declaring metric variables
2021-04-03 21:38:12,309:INFO:Importing untrained model
2021-04-03 21:38:12,325:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-03 21:38:12,356:INFO:Starting cross validation
2021-04-03 21:38:12,357:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:12,451:INFO:Calculating mean and std
2021-04-03 21:38:12,452:INFO:Creating metrics dataframe
2021-04-03 21:38:12,461:INFO:Uploading results into container
2021-04-03 21:38:12,462:INFO:Uploading model into container now
2021-04-03 21:38:12,463:INFO:create_model_container: 6
2021-04-03 21:38:12,463:INFO:master_model_container: 6
2021-04-03 21:38:12,463:INFO:display_container: 2
2021-04-03 21:38:12,464:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-03 21:38:12,464:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:12,583:INFO:SubProcess create_model() end ==================================
2021-04-03 21:38:12,583:INFO:Creating metrics dataframe
2021-04-03 21:38:12,613:INFO:Initializing Bayesian Ridge
2021-04-03 21:38:12,614:INFO:Total runtime is 0.424452551205953 minutes
2021-04-03 21:38:12,632:INFO:SubProcess create_model() called ==================================
2021-04-03 21:38:12,633:INFO:Initializing create_model()
2021-04-03 21:38:12,633:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:38:12,633:INFO:Checking exceptions
2021-04-03 21:38:12,633:INFO:Importing libraries
2021-04-03 21:38:12,633:INFO:Copying training dataset
2021-04-03 21:38:12,634:INFO:Defining folds
2021-04-03 21:38:12,634:INFO:Declaring metric variables
2021-04-03 21:38:12,646:INFO:Importing untrained model
2021-04-03 21:38:12,660:INFO:Bayesian Ridge Imported succesfully
2021-04-03 21:38:12,690:INFO:Starting cross validation
2021-04-03 21:38:12,693:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:12,794:INFO:Calculating mean and std
2021-04-03 21:38:12,796:INFO:Creating metrics dataframe
2021-04-03 21:38:12,805:INFO:Uploading results into container
2021-04-03 21:38:12,805:INFO:Uploading model into container now
2021-04-03 21:38:12,805:INFO:create_model_container: 7
2021-04-03 21:38:12,806:INFO:master_model_container: 7
2021-04-03 21:38:12,806:INFO:display_container: 2
2021-04-03 21:38:12,808:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 21:38:12,809:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:12,946:INFO:SubProcess create_model() end ==================================
2021-04-03 21:38:12,946:INFO:Creating metrics dataframe
2021-04-03 21:38:12,982:INFO:Initializing Passive Aggressive Regressor
2021-04-03 21:38:12,982:INFO:Total runtime is 0.43060034910837813 minutes
2021-04-03 21:38:12,995:INFO:SubProcess create_model() called ==================================
2021-04-03 21:38:12,995:INFO:Initializing create_model()
2021-04-03 21:38:12,996:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:38:12,996:INFO:Checking exceptions
2021-04-03 21:38:12,996:INFO:Importing libraries
2021-04-03 21:38:12,996:INFO:Copying training dataset
2021-04-03 21:38:12,997:INFO:Defining folds
2021-04-03 21:38:12,998:INFO:Declaring metric variables
2021-04-03 21:38:13,012:INFO:Importing untrained model
2021-04-03 21:38:13,022:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-03 21:38:13,064:INFO:Starting cross validation
2021-04-03 21:38:13,064:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:13,186:INFO:Calculating mean and std
2021-04-03 21:38:13,190:INFO:Creating metrics dataframe
2021-04-03 21:38:13,201:INFO:Uploading results into container
2021-04-03 21:38:13,201:INFO:Uploading model into container now
2021-04-03 21:38:13,202:INFO:create_model_container: 8
2021-04-03 21:38:13,202:INFO:master_model_container: 8
2021-04-03 21:38:13,203:INFO:display_container: 2
2021-04-03 21:38:13,205:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 21:38:13,206:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:13,438:INFO:SubProcess create_model() end ==================================
2021-04-03 21:38:13,438:INFO:Creating metrics dataframe
2021-04-03 21:38:13,464:INFO:Initializing Huber Regressor
2021-04-03 21:38:13,465:INFO:Total runtime is 0.43864553769429526 minutes
2021-04-03 21:38:13,481:INFO:SubProcess create_model() called ==================================
2021-04-03 21:38:13,482:INFO:Initializing create_model()
2021-04-03 21:38:13,482:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:38:13,482:INFO:Checking exceptions
2021-04-03 21:38:13,482:INFO:Importing libraries
2021-04-03 21:38:13,482:INFO:Copying training dataset
2021-04-03 21:38:13,484:INFO:Defining folds
2021-04-03 21:38:13,484:INFO:Declaring metric variables
2021-04-03 21:38:13,505:INFO:Importing untrained model
2021-04-03 21:38:13,514:INFO:Huber Regressor Imported succesfully
2021-04-03 21:38:13,545:INFO:Starting cross validation
2021-04-03 21:38:13,546:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:13,785:INFO:Calculating mean and std
2021-04-03 21:38:13,789:INFO:Creating metrics dataframe
2021-04-03 21:38:13,797:INFO:Uploading results into container
2021-04-03 21:38:13,797:INFO:Uploading model into container now
2021-04-03 21:38:13,803:INFO:create_model_container: 9
2021-04-03 21:38:13,803:INFO:master_model_container: 9
2021-04-03 21:38:13,804:INFO:display_container: 2
2021-04-03 21:38:13,807:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 21:38:13,807:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:13,965:INFO:SubProcess create_model() end ==================================
2021-04-03 21:38:13,966:INFO:Creating metrics dataframe
2021-04-03 21:38:13,998:INFO:Initializing K Neighbors Regressor
2021-04-03 21:38:13,998:INFO:Total runtime is 0.4475203315416972 minutes
2021-04-03 21:38:14,012:INFO:SubProcess create_model() called ==================================
2021-04-03 21:38:14,013:INFO:Initializing create_model()
2021-04-03 21:38:14,013:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:38:14,014:INFO:Checking exceptions
2021-04-03 21:38:14,014:INFO:Importing libraries
2021-04-03 21:38:14,014:INFO:Copying training dataset
2021-04-03 21:38:14,015:INFO:Defining folds
2021-04-03 21:38:14,015:INFO:Declaring metric variables
2021-04-03 21:38:14,036:INFO:Importing untrained model
2021-04-03 21:38:14,050:INFO:K Neighbors Regressor Imported succesfully
2021-04-03 21:38:14,079:INFO:Starting cross validation
2021-04-03 21:38:14,080:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:14,217:INFO:Calculating mean and std
2021-04-03 21:38:14,218:INFO:Creating metrics dataframe
2021-04-03 21:38:14,225:INFO:Uploading results into container
2021-04-03 21:38:14,225:INFO:Uploading model into container now
2021-04-03 21:38:14,225:INFO:create_model_container: 10
2021-04-03 21:38:14,226:INFO:master_model_container: 10
2021-04-03 21:38:14,226:INFO:display_container: 2
2021-04-03 21:38:14,228:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-03 21:38:14,229:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:14,354:INFO:SubProcess create_model() end ==================================
2021-04-03 21:38:14,355:INFO:Creating metrics dataframe
2021-04-03 21:38:14,396:INFO:Initializing Decision Tree Regressor
2021-04-03 21:38:14,396:INFO:Total runtime is 0.4541613737742106 minutes
2021-04-03 21:38:14,411:INFO:SubProcess create_model() called ==================================
2021-04-03 21:38:14,411:INFO:Initializing create_model()
2021-04-03 21:38:14,412:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:38:14,412:INFO:Checking exceptions
2021-04-03 21:38:14,412:INFO:Importing libraries
2021-04-03 21:38:14,412:INFO:Copying training dataset
2021-04-03 21:38:14,413:INFO:Defining folds
2021-04-03 21:38:14,413:INFO:Declaring metric variables
2021-04-03 21:38:14,425:INFO:Importing untrained model
2021-04-03 21:38:14,439:INFO:Decision Tree Regressor Imported succesfully
2021-04-03 21:38:14,469:INFO:Starting cross validation
2021-04-03 21:38:14,470:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:14,729:INFO:Calculating mean and std
2021-04-03 21:38:14,731:INFO:Creating metrics dataframe
2021-04-03 21:38:14,744:INFO:Uploading results into container
2021-04-03 21:38:14,744:INFO:Uploading model into container now
2021-04-03 21:38:14,745:INFO:create_model_container: 11
2021-04-03 21:38:14,745:INFO:master_model_container: 11
2021-04-03 21:38:14,745:INFO:display_container: 2
2021-04-03 21:38:14,747:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-03 21:38:14,747:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:14,872:INFO:SubProcess create_model() end ==================================
2021-04-03 21:38:14,873:INFO:Creating metrics dataframe
2021-04-03 21:38:14,905:INFO:Initializing Random Forest Regressor
2021-04-03 21:38:14,906:INFO:Total runtime is 0.46265739599863687 minutes
2021-04-03 21:38:14,924:INFO:SubProcess create_model() called ==================================
2021-04-03 21:38:14,925:INFO:Initializing create_model()
2021-04-03 21:38:14,925:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:38:14,925:INFO:Checking exceptions
2021-04-03 21:38:14,926:INFO:Importing libraries
2021-04-03 21:38:14,926:INFO:Copying training dataset
2021-04-03 21:38:14,929:INFO:Defining folds
2021-04-03 21:38:14,932:INFO:Declaring metric variables
2021-04-03 21:38:14,948:INFO:Importing untrained model
2021-04-03 21:38:14,965:INFO:Random Forest Regressor Imported succesfully
2021-04-03 21:38:14,985:INFO:Starting cross validation
2021-04-03 21:38:14,986:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:16,074:INFO:Calculating mean and std
2021-04-03 21:38:16,075:INFO:Creating metrics dataframe
2021-04-03 21:38:16,082:INFO:Uploading results into container
2021-04-03 21:38:16,083:INFO:Uploading model into container now
2021-04-03 21:38:16,088:INFO:create_model_container: 12
2021-04-03 21:38:16,089:INFO:master_model_container: 12
2021-04-03 21:38:16,089:INFO:display_container: 2
2021-04-03 21:38:16,092:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 21:38:16,093:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:16,235:INFO:SubProcess create_model() end ==================================
2021-04-03 21:38:16,235:INFO:Creating metrics dataframe
2021-04-03 21:38:16,269:INFO:Initializing Extra Trees Regressor
2021-04-03 21:38:16,269:INFO:Total runtime is 0.48537625471750895 minutes
2021-04-03 21:38:16,294:INFO:SubProcess create_model() called ==================================
2021-04-03 21:38:16,295:INFO:Initializing create_model()
2021-04-03 21:38:16,295:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:38:16,295:INFO:Checking exceptions
2021-04-03 21:38:16,295:INFO:Importing libraries
2021-04-03 21:38:16,295:INFO:Copying training dataset
2021-04-03 21:38:16,298:INFO:Defining folds
2021-04-03 21:38:16,298:INFO:Declaring metric variables
2021-04-03 21:38:16,315:INFO:Importing untrained model
2021-04-03 21:38:16,329:INFO:Extra Trees Regressor Imported succesfully
2021-04-03 21:38:16,352:INFO:Starting cross validation
2021-04-03 21:38:16,353:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:17,416:INFO:Calculating mean and std
2021-04-03 21:38:17,417:INFO:Creating metrics dataframe
2021-04-03 21:38:17,425:INFO:Uploading results into container
2021-04-03 21:38:17,425:INFO:Uploading model into container now
2021-04-03 21:38:17,429:INFO:create_model_container: 13
2021-04-03 21:38:17,429:INFO:master_model_container: 13
2021-04-03 21:38:17,429:INFO:display_container: 2
2021-04-03 21:38:17,433:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 21:38:17,433:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:17,547:INFO:SubProcess create_model() end ==================================
2021-04-03 21:38:17,547:INFO:Creating metrics dataframe
2021-04-03 21:38:17,579:INFO:Initializing AdaBoost Regressor
2021-04-03 21:38:17,580:INFO:Total runtime is 0.5072197198867798 minutes
2021-04-03 21:38:17,595:INFO:SubProcess create_model() called ==================================
2021-04-03 21:38:17,595:INFO:Initializing create_model()
2021-04-03 21:38:17,596:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:38:17,596:INFO:Checking exceptions
2021-04-03 21:38:17,596:INFO:Importing libraries
2021-04-03 21:38:17,596:INFO:Copying training dataset
2021-04-03 21:38:17,598:INFO:Defining folds
2021-04-03 21:38:17,599:INFO:Declaring metric variables
2021-04-03 21:38:17,610:INFO:Importing untrained model
2021-04-03 21:38:17,630:INFO:AdaBoost Regressor Imported succesfully
2021-04-03 21:38:17,656:INFO:Starting cross validation
2021-04-03 21:38:17,657:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:18,118:INFO:Calculating mean and std
2021-04-03 21:38:18,120:INFO:Creating metrics dataframe
2021-04-03 21:38:18,127:INFO:Uploading results into container
2021-04-03 21:38:18,127:INFO:Uploading model into container now
2021-04-03 21:38:18,128:INFO:create_model_container: 14
2021-04-03 21:38:18,128:INFO:master_model_container: 14
2021-04-03 21:38:18,128:INFO:display_container: 2
2021-04-03 21:38:18,129:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-03 21:38:18,129:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:18,250:INFO:SubProcess create_model() end ==================================
2021-04-03 21:38:18,250:INFO:Creating metrics dataframe
2021-04-03 21:38:18,289:INFO:Initializing Gradient Boosting Regressor
2021-04-03 21:38:18,290:INFO:Total runtime is 0.5190657655398051 minutes
2021-04-03 21:38:18,305:INFO:SubProcess create_model() called ==================================
2021-04-03 21:38:18,306:INFO:Initializing create_model()
2021-04-03 21:38:18,306:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:38:18,306:INFO:Checking exceptions
2021-04-03 21:38:18,306:INFO:Importing libraries
2021-04-03 21:38:18,306:INFO:Copying training dataset
2021-04-03 21:38:18,308:INFO:Defining folds
2021-04-03 21:38:18,309:INFO:Declaring metric variables
2021-04-03 21:38:18,317:INFO:Importing untrained model
2021-04-03 21:38:18,336:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 21:38:18,367:INFO:Starting cross validation
2021-04-03 21:38:18,368:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:18,783:INFO:Calculating mean and std
2021-04-03 21:38:18,785:INFO:Creating metrics dataframe
2021-04-03 21:38:18,794:INFO:Uploading results into container
2021-04-03 21:38:18,794:INFO:Uploading model into container now
2021-04-03 21:38:18,794:INFO:create_model_container: 15
2021-04-03 21:38:18,794:INFO:master_model_container: 15
2021-04-03 21:38:18,794:INFO:display_container: 2
2021-04-03 21:38:18,797:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 21:38:18,798:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:18,924:INFO:SubProcess create_model() end ==================================
2021-04-03 21:38:18,924:INFO:Creating metrics dataframe
2021-04-03 21:38:18,949:INFO:Initializing Extreme Gradient Boosting
2021-04-03 21:38:18,950:INFO:Total runtime is 0.5300596992174784 minutes
2021-04-03 21:38:18,963:INFO:SubProcess create_model() called ==================================
2021-04-03 21:38:18,964:INFO:Initializing create_model()
2021-04-03 21:38:18,965:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:38:18,965:INFO:Checking exceptions
2021-04-03 21:38:18,965:INFO:Importing libraries
2021-04-03 21:38:18,965:INFO:Copying training dataset
2021-04-03 21:38:18,966:INFO:Defining folds
2021-04-03 21:38:18,966:INFO:Declaring metric variables
2021-04-03 21:38:18,979:INFO:Importing untrained model
2021-04-03 21:38:19,001:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 21:38:19,026:INFO:Starting cross validation
2021-04-03 21:38:19,028:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:21,445:INFO:Calculating mean and std
2021-04-03 21:38:21,446:INFO:Creating metrics dataframe
2021-04-03 21:38:21,457:INFO:Uploading results into container
2021-04-03 21:38:21,457:INFO:Uploading model into container now
2021-04-03 21:38:21,458:INFO:create_model_container: 16
2021-04-03 21:38:21,458:INFO:master_model_container: 16
2021-04-03 21:38:21,458:INFO:display_container: 2
2021-04-03 21:38:21,463:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 21:38:21,463:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:21,598:INFO:SubProcess create_model() end ==================================
2021-04-03 21:38:21,599:INFO:Creating metrics dataframe
2021-04-03 21:38:21,622:INFO:Initializing Light Gradient Boosting Machine
2021-04-03 21:38:21,623:INFO:Total runtime is 0.5746044913927714 minutes
2021-04-03 21:38:21,640:INFO:SubProcess create_model() called ==================================
2021-04-03 21:38:21,641:INFO:Initializing create_model()
2021-04-03 21:38:21,641:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E137220D0>, kwargs={})
2021-04-03 21:38:21,641:INFO:Checking exceptions
2021-04-03 21:38:21,641:INFO:Importing libraries
2021-04-03 21:38:21,641:INFO:Copying training dataset
2021-04-03 21:38:21,642:INFO:Defining folds
2021-04-03 21:38:21,643:INFO:Declaring metric variables
2021-04-03 21:38:21,658:INFO:Importing untrained model
2021-04-03 21:38:21,675:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-03 21:38:21,734:INFO:Starting cross validation
2021-04-03 21:38:21,735:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:22,693:INFO:Calculating mean and std
2021-04-03 21:38:22,696:INFO:Creating metrics dataframe
2021-04-03 21:38:22,705:INFO:Uploading results into container
2021-04-03 21:38:22,705:INFO:Uploading model into container now
2021-04-03 21:38:22,705:INFO:create_model_container: 17
2021-04-03 21:38:22,706:INFO:master_model_container: 17
2021-04-03 21:38:22,706:INFO:display_container: 2
2021-04-03 21:38:22,709:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-03 21:38:22,710:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:22,844:INFO:SubProcess create_model() end ==================================
2021-04-03 21:38:22,844:INFO:Creating metrics dataframe
2021-04-03 21:38:22,900:INFO:Initializing create_model()
2021-04-03 21:38:22,901:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 21:38:22,901:INFO:Checking exceptions
2021-04-03 21:38:22,901:INFO:Importing libraries
2021-04-03 21:38:22,901:INFO:Copying training dataset
2021-04-03 21:38:22,901:INFO:Defining folds
2021-04-03 21:38:22,901:INFO:Declaring metric variables
2021-04-03 21:38:22,901:INFO:Importing untrained model
2021-04-03 21:38:22,901:INFO:Declaring custom model
2021-04-03 21:38:22,902:INFO:Ridge Regression Imported succesfully
2021-04-03 21:38:22,902:INFO:Cross validation set to False
2021-04-03 21:38:22,903:INFO:Fitting Model
2021-04-03 21:38:22,912:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 21:38:22,912:INFO:create_models() succesfully completed......................................
2021-04-03 21:38:23,046:INFO:Creating MLFlow logs
2021-04-03 21:38:23,063:INFO:Model: Ridge Regression
2021-04-03 21:38:23,129:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 21:38:23,272:INFO:Initializing predict_model()
2021-04-03 21:38:23,272:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 21:38:23,272:INFO:Checking exceptions
2021-04-03 21:38:23,272:INFO:Preloading libraries
2021-04-03 21:38:23,564:INFO:Creating MLFlow logs
2021-04-03 21:38:23,577:INFO:Model: Bayesian Ridge
2021-04-03 21:38:23,640:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 21:38:23,949:INFO:Creating MLFlow logs
2021-04-03 21:38:23,967:INFO:Model: Linear Regression
2021-04-03 21:38:24,019:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 21:38:24,311:INFO:Creating MLFlow logs
2021-04-03 21:38:24,332:INFO:Model: Huber Regressor
2021-04-03 21:38:24,415:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 21:38:24,719:INFO:Creating MLFlow logs
2021-04-03 21:38:24,736:INFO:Model: Extra Trees Regressor
2021-04-03 21:38:24,797:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 21:38:25,116:INFO:Creating MLFlow logs
2021-04-03 21:38:25,135:INFO:Model: Random Forest Regressor
2021-04-03 21:38:25,201:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 21:38:25,520:INFO:Creating MLFlow logs
2021-04-03 21:38:25,536:INFO:Model: Gradient Boosting Regressor
2021-04-03 21:38:25,596:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 21:38:25,943:INFO:Creating MLFlow logs
2021-04-03 21:38:25,957:INFO:Model: Light Gradient Boosting Machine
2021-04-03 21:38:26,019:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-03 21:38:26,352:INFO:Creating MLFlow logs
2021-04-03 21:38:26,370:INFO:Model: AdaBoost Regressor
2021-04-03 21:38:26,419:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-03 21:38:26,719:INFO:Creating MLFlow logs
2021-04-03 21:38:26,739:INFO:Model: Extreme Gradient Boosting
2021-04-03 21:38:26,796:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-03 21:38:27,178:INFO:Creating MLFlow logs
2021-04-03 21:38:27,204:INFO:Model: K Neighbors Regressor
2021-04-03 21:38:27,262:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-03 21:38:27,567:INFO:Creating MLFlow logs
2021-04-03 21:38:27,579:INFO:Model: Decision Tree Regressor
2021-04-03 21:38:27,649:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-03 21:38:27,995:INFO:Creating MLFlow logs
2021-04-03 21:38:28,011:INFO:Model: Orthogonal Matching Pursuit
2021-04-03 21:38:28,083:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-03 21:38:28,351:INFO:Creating MLFlow logs
2021-04-03 21:38:28,366:INFO:Model: Passive Aggressive Regressor
2021-04-03 21:38:28,420:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 21:38:28,708:INFO:Creating MLFlow logs
2021-04-03 21:38:28,722:INFO:Model: Elastic Net
2021-04-03 21:38:28,776:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 21:38:29,089:INFO:Creating MLFlow logs
2021-04-03 21:38:29,103:INFO:Model: Lasso Regression
2021-04-03 21:38:29,161:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 21:38:29,456:INFO:Creating MLFlow logs
2021-04-03 21:38:29,468:INFO:Model: Least Angle Regression
2021-04-03 21:38:29,525:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-03 21:38:29,864:INFO:create_model_container: 17
2021-04-03 21:38:29,864:INFO:master_model_container: 17
2021-04-03 21:38:29,864:INFO:display_container: 2
2021-04-03 21:38:29,866:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 21:38:29,866:INFO:compare_models() succesfully completed......................................
2021-04-03 21:38:29,889:INFO:Initializing create_model()
2021-04-03 21:38:29,890:INFO:create_model(estimator=br, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-03 21:38:29,890:INFO:Checking exceptions
2021-04-03 21:38:29,890:INFO:Preparing display monitor
2021-04-03 21:38:29,932:INFO:Importing libraries
2021-04-03 21:38:29,933:INFO:Copying training dataset
2021-04-03 21:38:29,934:INFO:Defining folds
2021-04-03 21:38:29,934:INFO:Declaring metric variables
2021-04-03 21:38:29,952:INFO:Importing untrained model
2021-04-03 21:38:29,964:INFO:Bayesian Ridge Imported succesfully
2021-04-03 21:38:30,008:INFO:Starting cross validation
2021-04-03 21:38:30,009:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:30,329:INFO:Calculating mean and std
2021-04-03 21:38:30,331:INFO:Creating metrics dataframe
2021-04-03 21:38:30,361:INFO:Finalizing model
2021-04-03 21:38:30,370:INFO:Creating MLFlow logs
2021-04-03 21:38:30,400:INFO:Model: Bayesian Ridge
2021-04-03 21:38:30,459:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 21:38:30,656:INFO:Initializing predict_model()
2021-04-03 21:38:30,656:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 21:38:30,656:INFO:Checking exceptions
2021-04-03 21:38:30,656:INFO:Preloading libraries
2021-04-03 21:38:31,117:INFO:Uploading results into container
2021-04-03 21:38:31,118:INFO:Uploading model into container now
2021-04-03 21:38:31,140:INFO:create_model_container: 18
2021-04-03 21:38:31,141:INFO:master_model_container: 18
2021-04-03 21:38:31,141:INFO:display_container: 3
2021-04-03 21:38:31,143:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 21:38:31,143:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:31,327:INFO:Initializing tune_model()
2021-04-03 21:38:31,328:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-03 21:38:31,328:INFO:Checking exceptions
2021-04-03 21:38:31,328:INFO:Preparing display monitor
2021-04-03 21:38:31,361:INFO:Copying training dataset
2021-04-03 21:38:31,363:INFO:Checking base model
2021-04-03 21:38:31,363:INFO:Base model : Bayesian Ridge
2021-04-03 21:38:31,379:INFO:Declaring metric variables
2021-04-03 21:38:31,396:INFO:Defining Hyperparameters
2021-04-03 21:38:31,564:INFO:Tuning with n_jobs=-1
2021-04-03 21:38:31,564:INFO:Initializing RandomizedSearchCV
2021-04-03 21:38:32,262:INFO:best_params: {'actual_estimator__normalize': False, 'actual_estimator__lambda_2': 0.001, 'actual_estimator__lambda_1': 0.005, 'actual_estimator__fit_intercept': True, 'actual_estimator__compute_score': False, 'actual_estimator__alpha_2': 0.3, 'actual_estimator__alpha_1': 0.15}
2021-04-03 21:38:32,263:INFO:Hyperparameter search completed
2021-04-03 21:38:32,263:INFO:SubProcess create_model() called ==================================
2021-04-03 21:38:32,264:INFO:Initializing create_model()
2021-04-03 21:38:32,264:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E13722F10>, kwargs={'normalize': False, 'lambda_2': 0.001, 'lambda_1': 0.005, 'fit_intercept': True, 'compute_score': False, 'alpha_2': 0.3, 'alpha_1': 0.15})
2021-04-03 21:38:32,264:INFO:Checking exceptions
2021-04-03 21:38:32,264:INFO:Importing libraries
2021-04-03 21:38:32,265:INFO:Copying training dataset
2021-04-03 21:38:32,266:INFO:Defining folds
2021-04-03 21:38:32,266:INFO:Declaring metric variables
2021-04-03 21:38:32,280:INFO:Importing untrained model
2021-04-03 21:38:32,280:INFO:Declaring custom model
2021-04-03 21:38:32,292:INFO:Bayesian Ridge Imported succesfully
2021-04-03 21:38:32,327:INFO:Starting cross validation
2021-04-03 21:38:32,328:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:32,419:INFO:Calculating mean and std
2021-04-03 21:38:32,422:INFO:Creating metrics dataframe
2021-04-03 21:38:32,444:INFO:Finalizing model
2021-04-03 21:38:32,452:INFO:Uploading results into container
2021-04-03 21:38:32,452:INFO:Uploading model into container now
2021-04-03 21:38:32,452:INFO:create_model_container: 19
2021-04-03 21:38:32,452:INFO:master_model_container: 19
2021-04-03 21:38:32,453:INFO:display_container: 4
2021-04-03 21:38:32,455:INFO:PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 21:38:32,455:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:32,575:INFO:SubProcess create_model() end ==================================
2021-04-03 21:38:32,576:INFO:Creating MLFlow logs
2021-04-03 21:38:32,593:INFO:Model: Bayesian Ridge
2021-04-03 21:38:32,648:INFO:logged params: {'alpha_1': 0.15, 'alpha_2': 0.3, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 0.005, 'lambda_2': 0.001, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 21:38:32,835:INFO:Initializing predict_model()
2021-04-03 21:38:32,835:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 21:38:32,835:INFO:Checking exceptions
2021-04-03 21:38:32,836:INFO:Preloading libraries
2021-04-03 21:38:33,231:INFO:create_model_container: 19
2021-04-03 21:38:33,231:INFO:master_model_container: 19
2021-04-03 21:38:33,232:INFO:display_container: 4
2021-04-03 21:38:33,234:INFO:PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 21:38:33,234:INFO:tune_model() succesfully completed......................................
2021-04-03 21:38:37,694:INFO:Initializing plot_model()
2021-04-03 21:38:37,694:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 21:38:37,695:INFO:Checking exceptions
2021-04-03 21:38:37,695:INFO:Preparing display monitor
2021-04-03 21:38:37,708:INFO:Preloading libraries
2021-04-03 21:38:37,711:INFO:Copying training dataset
2021-04-03 21:38:37,712:INFO:Copying test dataset
2021-04-03 21:38:37,713:INFO:Plot type: residuals
2021-04-03 21:38:37,780:INFO:Fitting Model
2021-04-03 21:38:37,828:INFO:Scoring test/hold-out set
2021-04-03 21:38:38,496:INFO:Visual Rendered Successfully
2021-04-03 21:38:38,610:INFO:plot_model() succesfully completed......................................
2021-04-03 21:38:38,641:INFO:Initializing plot_model()
2021-04-03 21:38:38,642:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 21:38:38,643:INFO:Checking exceptions
2021-04-03 21:38:38,644:INFO:Preparing display monitor
2021-04-03 21:38:38,658:INFO:Preloading libraries
2021-04-03 21:38:38,660:INFO:Copying training dataset
2021-04-03 21:38:38,661:INFO:Copying test dataset
2021-04-03 21:38:38,661:INFO:Plot type: error
2021-04-03 21:38:38,663:INFO:Fitting Model
2021-04-03 21:38:38,665:INFO:Scoring test/hold-out set
2021-04-03 21:38:39,177:INFO:Visual Rendered Successfully
2021-04-03 21:38:39,285:INFO:plot_model() succesfully completed......................................
2021-04-03 21:38:40,832:INFO:Initializing plot_model()
2021-04-03 21:38:40,833:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 21:38:40,833:INFO:Checking exceptions
2021-04-03 21:38:40,834:INFO:Preparing display monitor
2021-04-03 21:38:40,848:INFO:Preloading libraries
2021-04-03 21:38:40,852:INFO:Copying training dataset
2021-04-03 21:38:40,852:INFO:Copying test dataset
2021-04-03 21:38:40,853:INFO:Plot type: feature
2021-04-03 21:38:41,163:INFO:Visual Rendered Successfully
2021-04-03 21:38:41,277:INFO:plot_model() succesfully completed......................................
2021-04-03 21:38:44,032:INFO:Initializing evaluate_model()
2021-04-03 21:38:44,032:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-03 21:38:44,059:INFO:Initializing plot_model()
2021-04-03 21:38:44,060:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 21:38:44,060:INFO:Checking exceptions
2021-04-03 21:38:44,061:INFO:Preparing display monitor
2021-04-03 21:38:44,070:INFO:Preloading libraries
2021-04-03 21:38:44,073:INFO:Copying training dataset
2021-04-03 21:38:44,074:INFO:Copying test dataset
2021-04-03 21:38:44,075:INFO:Plot type: parameter
2021-04-03 21:38:44,096:INFO:Visual Rendered Successfully
2021-04-03 21:38:44,214:INFO:plot_model() succesfully completed......................................
2021-04-03 21:38:46,878:INFO:Initializing automl()
2021-04-03 21:38:46,878:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-03 21:38:46,878:INFO:Model Selection Basis : CV Results on Training set
2021-04-03 21:38:46,882:INFO:Initializing create_model()
2021-04-03 21:38:46,882:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 21:38:46,882:INFO:Checking exceptions
2021-04-03 21:38:46,882:INFO:Importing libraries
2021-04-03 21:38:46,882:INFO:Copying training dataset
2021-04-03 21:38:46,882:INFO:Defining folds
2021-04-03 21:38:46,882:INFO:Declaring metric variables
2021-04-03 21:38:46,882:INFO:Importing untrained model
2021-04-03 21:38:46,883:INFO:Declaring custom model
2021-04-03 21:38:46,884:INFO:Ridge Regression Imported succesfully
2021-04-03 21:38:46,884:INFO:Cross validation set to False
2021-04-03 21:38:46,884:INFO:Fitting Model
2021-04-03 21:38:46,896:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 21:38:46,897:INFO:create_models() succesfully completed......................................
2021-04-03 21:38:47,008:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 21:38:47,008:INFO:automl() succesfully completed......................................
2021-04-03 21:38:48,050:INFO:Initializing predict_model()
2021-04-03 21:38:48,050:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 21:38:48,050:INFO:Checking exceptions
2021-04-03 21:38:48,050:INFO:Preloading libraries
2021-04-03 21:38:48,051:INFO:Preparing display monitor
2021-04-03 21:38:51,868:INFO:Initializing finalize_model()
2021-04-03 21:38:51,868:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-03 21:38:51,869:INFO:Finalizing PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 21:38:51,870:INFO:Initializing create_model()
2021-04-03 21:38:51,871:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 21:38:51,871:INFO:Checking exceptions
2021-04-03 21:38:51,871:INFO:Importing libraries
2021-04-03 21:38:51,871:INFO:Copying training dataset
2021-04-03 21:38:51,873:INFO:Defining folds
2021-04-03 21:38:51,873:INFO:Declaring metric variables
2021-04-03 21:38:51,873:INFO:Importing untrained model
2021-04-03 21:38:51,874:INFO:Declaring custom model
2021-04-03 21:38:51,876:INFO:Ridge Regression Imported succesfully
2021-04-03 21:38:51,876:INFO:Starting cross validation
2021-04-03 21:38:51,876:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 21:38:52,168:INFO:Calculating mean and std
2021-04-03 21:38:52,169:INFO:Creating metrics dataframe
2021-04-03 21:38:52,176:INFO:Finalizing model
2021-04-03 21:38:52,184:INFO:Uploading results into container
2021-04-03 21:38:52,185:INFO:Uploading model into container now
2021-04-03 21:38:52,185:INFO:create_model_container: 20
2021-04-03 21:38:52,185:INFO:master_model_container: 20
2021-04-03 21:38:52,185:INFO:display_container: 6
2021-04-03 21:38:52,186:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 21:38:52,186:INFO:create_model() succesfully completed......................................
2021-04-03 21:38:52,287:INFO:Creating MLFlow logs
2021-04-03 21:38:52,291:INFO:Model: Ridge Regression
2021-04-03 21:38:52,343:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 21:38:52,503:INFO:Initializing predict_model()
2021-04-03 21:38:52,503:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 21:38:52,503:INFO:Checking exceptions
2021-04-03 21:38:52,503:INFO:Preloading libraries
2021-04-03 21:38:52,791:INFO:create_model_container: 20
2021-04-03 21:38:52,791:INFO:master_model_container: 20
2021-04-03 21:38:52,791:INFO:display_container: 5
2021-04-03 21:38:52,792:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 21:38:52,792:INFO:finalize_model() succesfully completed......................................
2021-04-03 21:38:54,015:INFO:Initializing predict_model()
2021-04-03 21:38:54,016:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 21:38:54,016:INFO:Checking exceptions
2021-04-03 21:38:54,016:INFO:Preloading libraries
2021-04-03 21:38:54,016:INFO:Preparing display monitor
2021-04-03 21:38:57,451:INFO:Initializing predict_model()
2021-04-03 21:38:57,452:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 21:38:57,453:INFO:Checking exceptions
2021-04-03 21:38:57,453:INFO:Preloading libraries
2021-04-03 21:38:57,453:INFO:Preparing display monitor
2021-04-03 23:50:06,075:INFO:PyCaret Supervised Module
2021-04-03 23:50:06,077:INFO:ML Usecase: regression
2021-04-03 23:50:06,077:INFO:version 2.3.0
2021-04-03 23:50:06,077:INFO:Initializing setup()
2021-04-03 23:50:06,077:INFO:setup(target=College Enrollment Rate, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-03 23:50:06,077:INFO:Checking environment
2021-04-03 23:50:06,078:INFO:python_version: 3.9.1
2021-04-03 23:50:06,078:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-03 23:50:06,079:INFO:machine: AMD64
2021-04-03 23:50:06,079:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-03 23:50:06,089:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-03 23:50:06,089:INFO:Checking libraries
2021-04-03 23:50:06,089:INFO:pd==1.2.2
2021-04-03 23:50:06,089:INFO:numpy==1.19.5
2021-04-03 23:50:06,089:INFO:sklearn==0.23.2
2021-04-03 23:50:06,090:INFO:lightgbm==3.1.1
2021-04-03 23:50:06,091:WARNING:catboost not found
2021-04-03 23:50:06,091:INFO:xgboost==1.3.3
2021-04-03 23:50:06,091:INFO:mlflow==1.14.1
2021-04-03 23:50:06,091:INFO:Checking Exceptions
2021-04-03 23:50:06,091:INFO:Declaring global variables
2021-04-03 23:50:06,092:INFO:USI: a329
2021-04-03 23:50:06,092:INFO:pycaret_globals: {'exp_name_log', '_all_models_internal', 'fold_shuffle_param', '_all_models', 'prep_pipe', 'seed', 'fix_imbalance_method_param', 'pycaret_globals', 'fold_generator', 'X', '_available_plots', 'fold_groups_param', 'logging_param', 'create_model_container', '_gpu_n_jobs_param', 'target_param', 'log_plots_param', 'iterative_imputation_iters_param', 'experiment__', 'fold_param', 'X_test', 'imputation_regressor', '_ml_usecase', 'imputation_classifier', 'data_before_preprocess', 'n_jobs_param', 'html_param', 'transform_target_method_param', 'fix_imbalance_param', '_all_metrics', '_internal_pipeline', 'gpu_param', 'transform_target_param', 'y_train', 'X_train', 'USI', 'y_test', 'y', 'master_model_container', 'display_container', 'stratify_param'}
2021-04-03 23:50:06,093:INFO:Preparing display monitor
2021-04-03 23:50:06,094:INFO:Preparing display monitor
2021-04-03 23:50:06,152:INFO:Importing libraries
2021-04-03 23:50:06,153:INFO:Copying data for preprocessing
2021-04-03 23:50:06,162:INFO:Declaring preprocessing parameters
2021-04-03 23:50:06,165:INFO:Creating preprocessing pipeline
2021-04-03 23:50:06,182:INFO:Preprocessing pipeline created successfully
2021-04-03 23:50:06,182:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-03 23:50:06,183:INFO:Creating global containers
2021-04-03 23:50:06,185:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-03 23:50:09,926:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 23:50:10,048:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-03 23:50:10,049:INFO:Creating grid variables
2021-04-03 23:50:10,074:INFO:Logging experiment in MLFlow
2021-04-03 23:50:10,086:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-03 23:50:10,093:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-03 23:50:10,261:INFO:SubProcess save_model() called ==================================
2021-04-03 23:50:10,275:INFO:Initializing save_model()
2021-04-03 23:50:10,275:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False)
2021-04-03 23:50:10,275:INFO:Adding model into prep_pipe
2021-04-03 23:50:10,277:WARNING:Only Model saved as it was a pipeline.
2021-04-03 23:50:10,298:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-03 23:50:10,306:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 23:50:10,306:INFO:save_model() succesfully completed......................................
2021-04-03 23:50:10,577:INFO:SubProcess save_model() end ==================================
2021-04-03 23:50:10,762:INFO:create_model_container: 0
2021-04-03 23:50:10,762:INFO:master_model_container: 0
2021-04-03 23:50:10,762:INFO:display_container: 1
2021-04-03 23:50:10,774:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-03 23:50:10,774:INFO:setup() succesfully completed......................................
2021-04-03 23:50:10,877:INFO:Initializing compare_models()
2021-04-03 23:50:10,878:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-03 23:50:10,878:INFO:Checking exceptions
2021-04-03 23:50:10,878:INFO:Preparing display monitor
2021-04-03 23:50:10,878:INFO:Preparing display monitor
2021-04-03 23:50:10,917:INFO:Initializing Linear Regression
2021-04-03 23:50:10,918:INFO:Total runtime is 1.6629695892333984e-05 minutes
2021-04-03 23:50:10,932:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:10,932:INFO:Initializing create_model()
2021-04-03 23:50:10,933:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:10,933:INFO:Checking exceptions
2021-04-03 23:50:10,933:INFO:Importing libraries
2021-04-03 23:50:10,933:INFO:Copying training dataset
2021-04-03 23:50:10,935:INFO:Defining folds
2021-04-03 23:50:10,936:INFO:Declaring metric variables
2021-04-03 23:50:10,949:INFO:Importing untrained model
2021-04-03 23:50:10,964:INFO:Linear Regression Imported succesfully
2021-04-03 23:50:10,992:INFO:Starting cross validation
2021-04-03 23:50:10,993:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:17,534:INFO:Calculating mean and std
2021-04-03 23:50:17,535:INFO:Creating metrics dataframe
2021-04-03 23:50:17,544:INFO:Uploading results into container
2021-04-03 23:50:17,544:INFO:Uploading model into container now
2021-04-03 23:50:17,545:INFO:create_model_container: 1
2021-04-03 23:50:17,545:INFO:master_model_container: 1
2021-04-03 23:50:17,545:INFO:display_container: 2
2021-04-03 23:50:17,547:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 23:50:17,547:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:17,644:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:17,644:INFO:Creating metrics dataframe
2021-04-03 23:50:17,659:INFO:Initializing Lasso Regression
2021-04-03 23:50:17,659:INFO:Total runtime is 0.11235654751459757 minutes
2021-04-03 23:50:17,671:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:17,672:INFO:Initializing create_model()
2021-04-03 23:50:17,672:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:17,672:INFO:Checking exceptions
2021-04-03 23:50:17,672:INFO:Importing libraries
2021-04-03 23:50:17,672:INFO:Copying training dataset
2021-04-03 23:50:17,673:INFO:Defining folds
2021-04-03 23:50:17,674:INFO:Declaring metric variables
2021-04-03 23:50:17,685:INFO:Importing untrained model
2021-04-03 23:50:17,699:INFO:Lasso Regression Imported succesfully
2021-04-03 23:50:17,722:INFO:Starting cross validation
2021-04-03 23:50:17,723:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:17,807:INFO:Calculating mean and std
2021-04-03 23:50:17,808:INFO:Creating metrics dataframe
2021-04-03 23:50:17,817:INFO:Uploading results into container
2021-04-03 23:50:17,817:INFO:Uploading model into container now
2021-04-03 23:50:17,817:INFO:create_model_container: 2
2021-04-03 23:50:17,817:INFO:master_model_container: 2
2021-04-03 23:50:17,817:INFO:display_container: 2
2021-04-03 23:50:17,818:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 23:50:17,818:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:17,907:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:17,907:INFO:Creating metrics dataframe
2021-04-03 23:50:17,934:INFO:Initializing Ridge Regression
2021-04-03 23:50:17,935:INFO:Total runtime is 0.11695682207743327 minutes
2021-04-03 23:50:17,943:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:17,944:INFO:Initializing create_model()
2021-04-03 23:50:17,944:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:17,944:INFO:Checking exceptions
2021-04-03 23:50:17,944:INFO:Importing libraries
2021-04-03 23:50:17,945:INFO:Copying training dataset
2021-04-03 23:50:17,945:INFO:Defining folds
2021-04-03 23:50:17,946:INFO:Declaring metric variables
2021-04-03 23:50:17,955:INFO:Importing untrained model
2021-04-03 23:50:17,963:INFO:Ridge Regression Imported succesfully
2021-04-03 23:50:17,993:INFO:Starting cross validation
2021-04-03 23:50:17,994:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:18,084:INFO:Calculating mean and std
2021-04-03 23:50:18,085:INFO:Creating metrics dataframe
2021-04-03 23:50:18,089:INFO:Uploading results into container
2021-04-03 23:50:18,089:INFO:Uploading model into container now
2021-04-03 23:50:18,090:INFO:create_model_container: 3
2021-04-03 23:50:18,090:INFO:master_model_container: 3
2021-04-03 23:50:18,090:INFO:display_container: 2
2021-04-03 23:50:18,091:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-03 23:50:18,091:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:18,187:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:18,187:INFO:Creating metrics dataframe
2021-04-03 23:50:18,213:INFO:Initializing Elastic Net
2021-04-03 23:50:18,214:INFO:Total runtime is 0.12160523335138956 minutes
2021-04-03 23:50:18,224:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:18,224:INFO:Initializing create_model()
2021-04-03 23:50:18,225:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:18,225:INFO:Checking exceptions
2021-04-03 23:50:18,225:INFO:Importing libraries
2021-04-03 23:50:18,225:INFO:Copying training dataset
2021-04-03 23:50:18,226:INFO:Defining folds
2021-04-03 23:50:18,226:INFO:Declaring metric variables
2021-04-03 23:50:18,235:INFO:Importing untrained model
2021-04-03 23:50:18,244:INFO:Elastic Net Imported succesfully
2021-04-03 23:50:18,274:INFO:Starting cross validation
2021-04-03 23:50:18,274:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:18,357:INFO:Calculating mean and std
2021-04-03 23:50:18,358:INFO:Creating metrics dataframe
2021-04-03 23:50:18,363:INFO:Uploading results into container
2021-04-03 23:50:18,363:INFO:Uploading model into container now
2021-04-03 23:50:18,364:INFO:create_model_container: 4
2021-04-03 23:50:18,364:INFO:master_model_container: 4
2021-04-03 23:50:18,364:INFO:display_container: 2
2021-04-03 23:50:18,365:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-03 23:50:18,365:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:18,457:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:18,457:INFO:Creating metrics dataframe
2021-04-03 23:50:18,480:INFO:Initializing Least Angle Regression
2021-04-03 23:50:18,480:INFO:Total runtime is 0.12603902022043864 minutes
2021-04-03 23:50:18,490:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:18,491:INFO:Initializing create_model()
2021-04-03 23:50:18,491:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:18,491:INFO:Checking exceptions
2021-04-03 23:50:18,491:INFO:Importing libraries
2021-04-03 23:50:18,491:INFO:Copying training dataset
2021-04-03 23:50:18,492:INFO:Defining folds
2021-04-03 23:50:18,493:INFO:Declaring metric variables
2021-04-03 23:50:18,505:INFO:Importing untrained model
2021-04-03 23:50:18,520:INFO:Least Angle Regression Imported succesfully
2021-04-03 23:50:18,542:INFO:Starting cross validation
2021-04-03 23:50:18,543:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:19,674:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-03 23:50:19,676:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 23:50:19,676:INFO:Initializing create_model()
2021-04-03 23:50:19,676:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:19,676:INFO:Checking exceptions
2021-04-03 23:50:19,676:INFO:Importing libraries
2021-04-03 23:50:19,677:INFO:Copying training dataset
2021-04-03 23:50:19,677:INFO:Defining folds
2021-04-03 23:50:19,678:INFO:Declaring metric variables
2021-04-03 23:50:19,688:INFO:Importing untrained model
2021-04-03 23:50:19,700:INFO:Least Angle Regression Imported succesfully
2021-04-03 23:50:19,724:INFO:Starting cross validation
2021-04-03 23:50:19,725:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:25,157:ERROR:create_model() for lar raised an exception:
2021-04-03 23:50:25,158:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-03 23:50:25,158:INFO:Initializing Lasso Least Angle Regression
2021-04-03 23:50:25,158:INFO:Total runtime is 0.23733676671981813 minutes
2021-04-03 23:50:25,168:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:25,169:INFO:Initializing create_model()
2021-04-03 23:50:25,169:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:25,170:INFO:Checking exceptions
2021-04-03 23:50:25,170:INFO:Importing libraries
2021-04-03 23:50:25,170:INFO:Copying training dataset
2021-04-03 23:50:25,172:INFO:Defining folds
2021-04-03 23:50:25,172:INFO:Declaring metric variables
2021-04-03 23:50:25,183:INFO:Importing untrained model
2021-04-03 23:50:25,194:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-03 23:50:25,223:INFO:Starting cross validation
2021-04-03 23:50:25,224:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:30,878:INFO:Calculating mean and std
2021-04-03 23:50:30,880:INFO:Creating metrics dataframe
2021-04-03 23:50:30,888:INFO:Uploading results into container
2021-04-03 23:50:30,889:INFO:Uploading model into container now
2021-04-03 23:50:30,889:INFO:create_model_container: 5
2021-04-03 23:50:30,890:INFO:master_model_container: 5
2021-04-03 23:50:30,890:INFO:display_container: 2
2021-04-03 23:50:30,892:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-03 23:50:30,892:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:30,998:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:30,998:INFO:Creating metrics dataframe
2021-04-03 23:50:31,016:INFO:Initializing Orthogonal Matching Pursuit
2021-04-03 23:50:31,016:INFO:Total runtime is 0.33497888247172036 minutes
2021-04-03 23:50:31,027:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:31,027:INFO:Initializing create_model()
2021-04-03 23:50:31,028:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:31,028:INFO:Checking exceptions
2021-04-03 23:50:31,028:INFO:Importing libraries
2021-04-03 23:50:31,028:INFO:Copying training dataset
2021-04-03 23:50:31,029:INFO:Defining folds
2021-04-03 23:50:31,030:INFO:Declaring metric variables
2021-04-03 23:50:31,043:INFO:Importing untrained model
2021-04-03 23:50:31,062:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-03 23:50:31,091:INFO:Starting cross validation
2021-04-03 23:50:31,092:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:31,189:INFO:Calculating mean and std
2021-04-03 23:50:31,191:INFO:Creating metrics dataframe
2021-04-03 23:50:31,200:INFO:Uploading results into container
2021-04-03 23:50:31,200:INFO:Uploading model into container now
2021-04-03 23:50:31,200:INFO:create_model_container: 6
2021-04-03 23:50:31,201:INFO:master_model_container: 6
2021-04-03 23:50:31,201:INFO:display_container: 2
2021-04-03 23:50:31,202:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-03 23:50:31,203:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:31,330:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:31,330:INFO:Creating metrics dataframe
2021-04-03 23:50:31,356:INFO:Initializing Bayesian Ridge
2021-04-03 23:50:31,356:INFO:Total runtime is 0.3406364917755127 minutes
2021-04-03 23:50:31,373:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:31,374:INFO:Initializing create_model()
2021-04-03 23:50:31,374:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:31,374:INFO:Checking exceptions
2021-04-03 23:50:31,375:INFO:Importing libraries
2021-04-03 23:50:31,375:INFO:Copying training dataset
2021-04-03 23:50:31,378:INFO:Defining folds
2021-04-03 23:50:31,378:INFO:Declaring metric variables
2021-04-03 23:50:31,395:INFO:Importing untrained model
2021-04-03 23:50:31,409:INFO:Bayesian Ridge Imported succesfully
2021-04-03 23:50:31,442:INFO:Starting cross validation
2021-04-03 23:50:31,444:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:31,540:INFO:Calculating mean and std
2021-04-03 23:50:31,542:INFO:Creating metrics dataframe
2021-04-03 23:50:31,554:INFO:Uploading results into container
2021-04-03 23:50:31,555:INFO:Uploading model into container now
2021-04-03 23:50:31,555:INFO:create_model_container: 7
2021-04-03 23:50:31,556:INFO:master_model_container: 7
2021-04-03 23:50:31,556:INFO:display_container: 2
2021-04-03 23:50:31,559:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 23:50:31,559:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:31,652:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:31,652:INFO:Creating metrics dataframe
2021-04-03 23:50:31,711:INFO:Initializing Passive Aggressive Regressor
2021-04-03 23:50:31,711:INFO:Total runtime is 0.3465584874153137 minutes
2021-04-03 23:50:31,730:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:31,730:INFO:Initializing create_model()
2021-04-03 23:50:31,731:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:31,731:INFO:Checking exceptions
2021-04-03 23:50:31,731:INFO:Importing libraries
2021-04-03 23:50:31,732:INFO:Copying training dataset
2021-04-03 23:50:31,734:INFO:Defining folds
2021-04-03 23:50:31,736:INFO:Declaring metric variables
2021-04-03 23:50:31,778:INFO:Importing untrained model
2021-04-03 23:50:31,795:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-03 23:50:31,825:INFO:Starting cross validation
2021-04-03 23:50:31,826:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:31,966:INFO:Calculating mean and std
2021-04-03 23:50:31,971:INFO:Creating metrics dataframe
2021-04-03 23:50:31,987:INFO:Uploading results into container
2021-04-03 23:50:31,987:INFO:Uploading model into container now
2021-04-03 23:50:31,990:INFO:create_model_container: 8
2021-04-03 23:50:31,990:INFO:master_model_container: 8
2021-04-03 23:50:31,990:INFO:display_container: 2
2021-04-03 23:50:31,993:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 23:50:31,994:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:32,177:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:32,178:INFO:Creating metrics dataframe
2021-04-03 23:50:32,214:INFO:Initializing Huber Regressor
2021-04-03 23:50:32,215:INFO:Total runtime is 0.3549531857172648 minutes
2021-04-03 23:50:32,243:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:32,243:INFO:Initializing create_model()
2021-04-03 23:50:32,243:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:32,245:INFO:Checking exceptions
2021-04-03 23:50:32,245:INFO:Importing libraries
2021-04-03 23:50:32,246:INFO:Copying training dataset
2021-04-03 23:50:32,247:INFO:Defining folds
2021-04-03 23:50:32,248:INFO:Declaring metric variables
2021-04-03 23:50:32,263:INFO:Importing untrained model
2021-04-03 23:50:32,278:INFO:Huber Regressor Imported succesfully
2021-04-03 23:50:32,307:INFO:Starting cross validation
2021-04-03 23:50:32,308:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:32,495:INFO:Calculating mean and std
2021-04-03 23:50:32,497:INFO:Creating metrics dataframe
2021-04-03 23:50:32,507:INFO:Uploading results into container
2021-04-03 23:50:32,508:INFO:Uploading model into container now
2021-04-03 23:50:32,508:INFO:create_model_container: 9
2021-04-03 23:50:32,508:INFO:master_model_container: 9
2021-04-03 23:50:32,509:INFO:display_container: 2
2021-04-03 23:50:32,510:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-03 23:50:32,510:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:32,647:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:32,647:INFO:Creating metrics dataframe
2021-04-03 23:50:32,689:INFO:Initializing K Neighbors Regressor
2021-04-03 23:50:32,690:INFO:Total runtime is 0.3628709514935811 minutes
2021-04-03 23:50:32,704:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:32,704:INFO:Initializing create_model()
2021-04-03 23:50:32,704:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:32,705:INFO:Checking exceptions
2021-04-03 23:50:32,705:INFO:Importing libraries
2021-04-03 23:50:32,705:INFO:Copying training dataset
2021-04-03 23:50:32,706:INFO:Defining folds
2021-04-03 23:50:32,706:INFO:Declaring metric variables
2021-04-03 23:50:32,727:INFO:Importing untrained model
2021-04-03 23:50:32,743:INFO:K Neighbors Regressor Imported succesfully
2021-04-03 23:50:32,776:INFO:Starting cross validation
2021-04-03 23:50:32,777:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:32,898:INFO:Calculating mean and std
2021-04-03 23:50:32,900:INFO:Creating metrics dataframe
2021-04-03 23:50:32,905:INFO:Uploading results into container
2021-04-03 23:50:32,905:INFO:Uploading model into container now
2021-04-03 23:50:32,905:INFO:create_model_container: 10
2021-04-03 23:50:32,906:INFO:master_model_container: 10
2021-04-03 23:50:32,906:INFO:display_container: 2
2021-04-03 23:50:32,907:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-03 23:50:32,907:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:33,009:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:33,009:INFO:Creating metrics dataframe
2021-04-03 23:50:33,040:INFO:Initializing Decision Tree Regressor
2021-04-03 23:50:33,040:INFO:Total runtime is 0.3687043150266011 minutes
2021-04-03 23:50:33,050:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:33,050:INFO:Initializing create_model()
2021-04-03 23:50:33,050:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:33,051:INFO:Checking exceptions
2021-04-03 23:50:33,051:INFO:Importing libraries
2021-04-03 23:50:33,051:INFO:Copying training dataset
2021-04-03 23:50:33,052:INFO:Defining folds
2021-04-03 23:50:33,052:INFO:Declaring metric variables
2021-04-03 23:50:33,064:INFO:Importing untrained model
2021-04-03 23:50:33,078:INFO:Decision Tree Regressor Imported succesfully
2021-04-03 23:50:33,105:INFO:Starting cross validation
2021-04-03 23:50:33,106:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:33,372:INFO:Calculating mean and std
2021-04-03 23:50:33,375:INFO:Creating metrics dataframe
2021-04-03 23:50:33,385:INFO:Uploading results into container
2021-04-03 23:50:33,385:INFO:Uploading model into container now
2021-04-03 23:50:33,386:INFO:create_model_container: 11
2021-04-03 23:50:33,386:INFO:master_model_container: 11
2021-04-03 23:50:33,386:INFO:display_container: 2
2021-04-03 23:50:33,389:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-03 23:50:33,389:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:33,509:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:33,509:INFO:Creating metrics dataframe
2021-04-03 23:50:33,548:INFO:Initializing Random Forest Regressor
2021-04-03 23:50:33,549:INFO:Total runtime is 0.37718785603841143 minutes
2021-04-03 23:50:33,563:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:33,563:INFO:Initializing create_model()
2021-04-03 23:50:33,564:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:33,564:INFO:Checking exceptions
2021-04-03 23:50:33,564:INFO:Importing libraries
2021-04-03 23:50:33,564:INFO:Copying training dataset
2021-04-03 23:50:33,568:INFO:Defining folds
2021-04-03 23:50:33,569:INFO:Declaring metric variables
2021-04-03 23:50:33,583:INFO:Importing untrained model
2021-04-03 23:50:33,599:INFO:Random Forest Regressor Imported succesfully
2021-04-03 23:50:33,625:INFO:Starting cross validation
2021-04-03 23:50:33,626:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:34,917:INFO:Calculating mean and std
2021-04-03 23:50:34,920:INFO:Creating metrics dataframe
2021-04-03 23:50:34,928:INFO:Uploading results into container
2021-04-03 23:50:34,929:INFO:Uploading model into container now
2021-04-03 23:50:34,929:INFO:create_model_container: 12
2021-04-03 23:50:34,929:INFO:master_model_container: 12
2021-04-03 23:50:34,929:INFO:display_container: 2
2021-04-03 23:50:34,932:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 23:50:34,932:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:35,062:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:35,062:INFO:Creating metrics dataframe
2021-04-03 23:50:35,110:INFO:Initializing Extra Trees Regressor
2021-04-03 23:50:35,110:INFO:Total runtime is 0.4032100876172383 minutes
2021-04-03 23:50:35,127:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:35,127:INFO:Initializing create_model()
2021-04-03 23:50:35,127:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:35,128:INFO:Checking exceptions
2021-04-03 23:50:35,128:INFO:Importing libraries
2021-04-03 23:50:35,128:INFO:Copying training dataset
2021-04-03 23:50:35,129:INFO:Defining folds
2021-04-03 23:50:35,130:INFO:Declaring metric variables
2021-04-03 23:50:35,142:INFO:Importing untrained model
2021-04-03 23:50:35,155:INFO:Extra Trees Regressor Imported succesfully
2021-04-03 23:50:35,187:INFO:Starting cross validation
2021-04-03 23:50:35,188:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:36,095:INFO:Calculating mean and std
2021-04-03 23:50:36,096:INFO:Creating metrics dataframe
2021-04-03 23:50:36,107:INFO:Uploading results into container
2021-04-03 23:50:36,108:INFO:Uploading model into container now
2021-04-03 23:50:36,108:INFO:create_model_container: 13
2021-04-03 23:50:36,108:INFO:master_model_container: 13
2021-04-03 23:50:36,109:INFO:display_container: 2
2021-04-03 23:50:36,111:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-03 23:50:36,112:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:36,241:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:36,241:INFO:Creating metrics dataframe
2021-04-03 23:50:36,271:INFO:Initializing AdaBoost Regressor
2021-04-03 23:50:36,271:INFO:Total runtime is 0.4225651820500691 minutes
2021-04-03 23:50:36,281:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:36,282:INFO:Initializing create_model()
2021-04-03 23:50:36,282:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:36,282:INFO:Checking exceptions
2021-04-03 23:50:36,282:INFO:Importing libraries
2021-04-03 23:50:36,283:INFO:Copying training dataset
2021-04-03 23:50:36,284:INFO:Defining folds
2021-04-03 23:50:36,284:INFO:Declaring metric variables
2021-04-03 23:50:36,294:INFO:Importing untrained model
2021-04-03 23:50:36,307:INFO:AdaBoost Regressor Imported succesfully
2021-04-03 23:50:36,336:INFO:Starting cross validation
2021-04-03 23:50:36,337:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:36,681:INFO:Calculating mean and std
2021-04-03 23:50:36,682:INFO:Creating metrics dataframe
2021-04-03 23:50:36,689:INFO:Uploading results into container
2021-04-03 23:50:36,690:INFO:Uploading model into container now
2021-04-03 23:50:36,690:INFO:create_model_container: 14
2021-04-03 23:50:36,690:INFO:master_model_container: 14
2021-04-03 23:50:36,690:INFO:display_container: 2
2021-04-03 23:50:36,692:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-03 23:50:36,692:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:36,788:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:36,788:INFO:Creating metrics dataframe
2021-04-03 23:50:36,822:INFO:Initializing Gradient Boosting Regressor
2021-04-03 23:50:36,822:INFO:Total runtime is 0.4317418694496154 minutes
2021-04-03 23:50:36,832:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:36,833:INFO:Initializing create_model()
2021-04-03 23:50:36,833:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:36,833:INFO:Checking exceptions
2021-04-03 23:50:36,833:INFO:Importing libraries
2021-04-03 23:50:36,833:INFO:Copying training dataset
2021-04-03 23:50:36,835:INFO:Defining folds
2021-04-03 23:50:36,835:INFO:Declaring metric variables
2021-04-03 23:50:36,844:INFO:Importing untrained model
2021-04-03 23:50:36,861:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-03 23:50:36,891:INFO:Starting cross validation
2021-04-03 23:50:36,892:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:37,154:INFO:Calculating mean and std
2021-04-03 23:50:37,156:INFO:Creating metrics dataframe
2021-04-03 23:50:37,165:INFO:Uploading results into container
2021-04-03 23:50:37,166:INFO:Uploading model into container now
2021-04-03 23:50:37,166:INFO:create_model_container: 15
2021-04-03 23:50:37,166:INFO:master_model_container: 15
2021-04-03 23:50:37,166:INFO:display_container: 2
2021-04-03 23:50:37,171:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-03 23:50:37,171:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:37,306:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:37,307:INFO:Creating metrics dataframe
2021-04-03 23:50:37,339:INFO:Initializing Extreme Gradient Boosting
2021-04-03 23:50:37,340:INFO:Total runtime is 0.44038414955139155 minutes
2021-04-03 23:50:37,365:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:37,365:INFO:Initializing create_model()
2021-04-03 23:50:37,366:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:37,366:INFO:Checking exceptions
2021-04-03 23:50:37,366:INFO:Importing libraries
2021-04-03 23:50:37,366:INFO:Copying training dataset
2021-04-03 23:50:37,371:INFO:Defining folds
2021-04-03 23:50:37,371:INFO:Declaring metric variables
2021-04-03 23:50:37,383:INFO:Importing untrained model
2021-04-03 23:50:37,406:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-03 23:50:37,441:INFO:Starting cross validation
2021-04-03 23:50:37,442:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:39,939:INFO:Calculating mean and std
2021-04-03 23:50:39,941:INFO:Creating metrics dataframe
2021-04-03 23:50:39,949:INFO:Uploading results into container
2021-04-03 23:50:39,949:INFO:Uploading model into container now
2021-04-03 23:50:39,950:INFO:create_model_container: 16
2021-04-03 23:50:39,950:INFO:master_model_container: 16
2021-04-03 23:50:39,950:INFO:display_container: 2
2021-04-03 23:50:39,956:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-03 23:50:39,956:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:40,076:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:40,076:INFO:Creating metrics dataframe
2021-04-03 23:50:40,105:INFO:Initializing Light Gradient Boosting Machine
2021-04-03 23:50:40,106:INFO:Total runtime is 0.48647373119990023 minutes
2021-04-03 23:50:40,120:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:40,121:INFO:Initializing create_model()
2021-04-03 23:50:40,121:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E1371A730>, kwargs={})
2021-04-03 23:50:40,122:INFO:Checking exceptions
2021-04-03 23:50:40,122:INFO:Importing libraries
2021-04-03 23:50:40,122:INFO:Copying training dataset
2021-04-03 23:50:40,123:INFO:Defining folds
2021-04-03 23:50:40,123:INFO:Declaring metric variables
2021-04-03 23:50:40,138:INFO:Importing untrained model
2021-04-03 23:50:40,152:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-03 23:50:40,182:INFO:Starting cross validation
2021-04-03 23:50:40,183:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:41,043:INFO:Calculating mean and std
2021-04-03 23:50:41,044:INFO:Creating metrics dataframe
2021-04-03 23:50:41,053:INFO:Uploading results into container
2021-04-03 23:50:41,053:INFO:Uploading model into container now
2021-04-03 23:50:41,053:INFO:create_model_container: 17
2021-04-03 23:50:41,053:INFO:master_model_container: 17
2021-04-03 23:50:41,054:INFO:display_container: 2
2021-04-03 23:50:41,057:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-03 23:50:41,058:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:41,166:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:41,166:INFO:Creating metrics dataframe
2021-04-03 23:50:41,216:INFO:Initializing create_model()
2021-04-03 23:50:41,216:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 23:50:41,216:INFO:Checking exceptions
2021-04-03 23:50:41,217:INFO:Importing libraries
2021-04-03 23:50:41,217:INFO:Copying training dataset
2021-04-03 23:50:41,218:INFO:Defining folds
2021-04-03 23:50:41,218:INFO:Declaring metric variables
2021-04-03 23:50:41,218:INFO:Importing untrained model
2021-04-03 23:50:41,218:INFO:Declaring custom model
2021-04-03 23:50:41,219:INFO:Bayesian Ridge Imported succesfully
2021-04-03 23:50:41,219:INFO:Cross validation set to False
2021-04-03 23:50:41,220:INFO:Fitting Model
2021-04-03 23:50:41,229:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 23:50:41,229:INFO:create_models() succesfully completed......................................
2021-04-03 23:50:41,338:INFO:Creating MLFlow logs
2021-04-03 23:50:41,353:INFO:Model: Bayesian Ridge
2021-04-03 23:50:41,408:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 23:50:41,585:INFO:Initializing predict_model()
2021-04-03 23:50:41,585:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 23:50:41,585:INFO:Checking exceptions
2021-04-03 23:50:41,585:INFO:Preloading libraries
2021-04-03 23:50:41,840:INFO:Creating MLFlow logs
2021-04-03 23:50:41,854:INFO:Model: Ridge Regression
2021-04-03 23:50:41,908:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-03 23:50:42,166:INFO:Creating MLFlow logs
2021-04-03 23:50:42,178:INFO:Model: Linear Regression
2021-04-03 23:50:42,229:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 23:50:42,475:INFO:Creating MLFlow logs
2021-04-03 23:50:42,491:INFO:Model: Huber Regressor
2021-04-03 23:50:42,568:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-03 23:50:42,909:INFO:Creating MLFlow logs
2021-04-03 23:50:42,922:INFO:Model: Random Forest Regressor
2021-04-03 23:50:42,980:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 23:50:43,286:INFO:Creating MLFlow logs
2021-04-03 23:50:43,299:INFO:Model: AdaBoost Regressor
2021-04-03 23:50:43,355:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-03 23:50:43,608:INFO:Creating MLFlow logs
2021-04-03 23:50:43,623:INFO:Model: Extra Trees Regressor
2021-04-03 23:50:43,682:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-03 23:50:43,944:INFO:Creating MLFlow logs
2021-04-03 23:50:43,958:INFO:Model: Gradient Boosting Regressor
2021-04-03 23:50:44,020:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 23:50:44,313:INFO:Creating MLFlow logs
2021-04-03 23:50:44,326:INFO:Model: Light Gradient Boosting Machine
2021-04-03 23:50:44,378:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-03 23:50:44,664:INFO:Creating MLFlow logs
2021-04-03 23:50:44,679:INFO:Model: Extreme Gradient Boosting
2021-04-03 23:50:44,754:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-03 23:50:45,062:INFO:Creating MLFlow logs
2021-04-03 23:50:45,076:INFO:Model: Decision Tree Regressor
2021-04-03 23:50:45,136:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-03 23:50:45,405:INFO:Creating MLFlow logs
2021-04-03 23:50:45,420:INFO:Model: Orthogonal Matching Pursuit
2021-04-03 23:50:45,508:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-03 23:50:45,791:INFO:Creating MLFlow logs
2021-04-03 23:50:45,806:INFO:Model: K Neighbors Regressor
2021-04-03 23:50:45,881:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-03 23:50:46,180:INFO:Creating MLFlow logs
2021-04-03 23:50:46,199:INFO:Model: Passive Aggressive Regressor
2021-04-03 23:50:46,288:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-03 23:50:46,609:INFO:Creating MLFlow logs
2021-04-03 23:50:46,623:INFO:Model: Elastic Net
2021-04-03 23:50:46,685:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 23:50:46,964:INFO:Creating MLFlow logs
2021-04-03 23:50:46,979:INFO:Model: Lasso Regression
2021-04-03 23:50:47,047:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-03 23:50:47,345:INFO:Creating MLFlow logs
2021-04-03 23:50:47,383:INFO:Model: Least Angle Regression
2021-04-03 23:50:47,494:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-03 23:50:47,886:INFO:create_model_container: 17
2021-04-03 23:50:47,886:INFO:master_model_container: 17
2021-04-03 23:50:47,887:INFO:display_container: 2
2021-04-03 23:50:47,888:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 23:50:47,888:INFO:compare_models() succesfully completed......................................
2021-04-03 23:50:47,908:INFO:Initializing create_model()
2021-04-03 23:50:47,908:INFO:create_model(estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-03 23:50:47,909:INFO:Checking exceptions
2021-04-03 23:50:47,909:INFO:Preparing display monitor
2021-04-03 23:50:47,947:INFO:Importing libraries
2021-04-03 23:50:47,947:INFO:Copying training dataset
2021-04-03 23:50:47,949:INFO:Defining folds
2021-04-03 23:50:47,949:INFO:Declaring metric variables
2021-04-03 23:50:47,959:INFO:Importing untrained model
2021-04-03 23:50:47,970:INFO:Linear Regression Imported succesfully
2021-04-03 23:50:47,998:INFO:Starting cross validation
2021-04-03 23:50:47,999:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:48,226:INFO:Calculating mean and std
2021-04-03 23:50:48,229:INFO:Creating metrics dataframe
2021-04-03 23:50:48,261:INFO:Finalizing model
2021-04-03 23:50:48,273:INFO:Creating MLFlow logs
2021-04-03 23:50:48,293:INFO:Model: Linear Regression
2021-04-03 23:50:48,343:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-03 23:50:48,504:INFO:Initializing predict_model()
2021-04-03 23:50:48,504:INFO:predict_model(estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False)), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 23:50:48,504:INFO:Checking exceptions
2021-04-03 23:50:48,504:INFO:Preloading libraries
2021-04-03 23:50:48,828:INFO:Uploading results into container
2021-04-03 23:50:48,829:INFO:Uploading model into container now
2021-04-03 23:50:48,848:INFO:create_model_container: 18
2021-04-03 23:50:48,848:INFO:master_model_container: 18
2021-04-03 23:50:48,848:INFO:display_container: 3
2021-04-03 23:50:48,849:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-03 23:50:48,849:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:49,004:INFO:Initializing tune_model()
2021-04-03 23:50:49,005:INFO:tune_model(estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False)), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-03 23:50:49,005:INFO:Checking exceptions
2021-04-03 23:50:49,005:INFO:Preparing display monitor
2021-04-03 23:50:49,044:INFO:Copying training dataset
2021-04-03 23:50:49,046:INFO:Checking base model
2021-04-03 23:50:49,046:INFO:Base model : Linear Regression
2021-04-03 23:50:49,067:INFO:Declaring metric variables
2021-04-03 23:50:49,093:INFO:Defining Hyperparameters
2021-04-03 23:50:49,093:INFO:10 is bigger than total combinations 4, setting search algorithm to grid
2021-04-03 23:50:49,235:INFO:Tuning with n_jobs=-1
2021-04-03 23:50:49,236:INFO:Initializing GridSearchCV
2021-04-03 23:50:49,532:INFO:best_params: {'actual_estimator__fit_intercept': False, 'actual_estimator__normalize': True}
2021-04-03 23:50:49,533:INFO:Hyperparameter search completed
2021-04-03 23:50:49,534:INFO:SubProcess create_model() called ==================================
2021-04-03 23:50:49,535:INFO:Initializing create_model()
2021-04-03 23:50:49,535:INFO:create_model(estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False)), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000013E0A09A760>, kwargs={'fit_intercept': False, 'normalize': True})
2021-04-03 23:50:49,535:INFO:Checking exceptions
2021-04-03 23:50:49,536:INFO:Importing libraries
2021-04-03 23:50:49,536:INFO:Copying training dataset
2021-04-03 23:50:49,537:INFO:Defining folds
2021-04-03 23:50:49,537:INFO:Declaring metric variables
2021-04-03 23:50:49,554:INFO:Importing untrained model
2021-04-03 23:50:49,555:INFO:Declaring custom model
2021-04-03 23:50:49,568:INFO:Linear Regression Imported succesfully
2021-04-03 23:50:49,589:INFO:Starting cross validation
2021-04-03 23:50:49,590:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:50:49,684:INFO:Calculating mean and std
2021-04-03 23:50:49,686:INFO:Creating metrics dataframe
2021-04-03 23:50:49,706:INFO:Finalizing model
2021-04-03 23:50:49,717:INFO:Uploading results into container
2021-04-03 23:50:49,717:INFO:Uploading model into container now
2021-04-03 23:50:49,718:INFO:create_model_container: 19
2021-04-03 23:50:49,719:INFO:master_model_container: 19
2021-04-03 23:50:49,719:INFO:display_container: 4
2021-04-03 23:50:49,720:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True))
2021-04-03 23:50:49,720:INFO:create_model() succesfully completed......................................
2021-04-03 23:50:49,831:INFO:SubProcess create_model() end ==================================
2021-04-03 23:50:49,831:INFO:Creating MLFlow logs
2021-04-03 23:50:49,848:INFO:Model: Linear Regression
2021-04-03 23:50:49,929:INFO:logged params: {'copy_X': True, 'fit_intercept': False, 'n_jobs': -1, 'normalize': True}
2021-04-03 23:50:50,135:INFO:Initializing predict_model()
2021-04-03 23:50:50,135:INFO:predict_model(estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 23:50:50,136:INFO:Checking exceptions
2021-04-03 23:50:50,136:INFO:Preloading libraries
2021-04-03 23:50:50,516:INFO:create_model_container: 19
2021-04-03 23:50:50,516:INFO:master_model_container: 19
2021-04-03 23:50:50,516:INFO:display_container: 4
2021-04-03 23:50:50,517:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True))
2021-04-03 23:50:50,517:INFO:tune_model() succesfully completed......................................
2021-04-03 23:50:50,680:INFO:Initializing plot_model()
2021-04-03 23:50:50,680:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 23:50:50,681:INFO:Checking exceptions
2021-04-03 23:50:50,681:INFO:Preparing display monitor
2021-04-03 23:50:50,692:INFO:Preloading libraries
2021-04-03 23:50:50,695:INFO:Copying training dataset
2021-04-03 23:50:50,695:INFO:Copying test dataset
2021-04-03 23:50:50,696:INFO:Plot type: residuals
2021-04-03 23:50:50,747:INFO:Fitting Model
2021-04-03 23:50:50,801:INFO:Scoring test/hold-out set
2021-04-03 23:50:51,446:INFO:Visual Rendered Successfully
2021-04-03 23:50:51,615:INFO:plot_model() succesfully completed......................................
2021-04-03 23:53:14,005:INFO:Initializing plot_model()
2021-04-03 23:53:14,006:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 23:53:14,006:INFO:Checking exceptions
2021-04-03 23:53:14,006:INFO:Preparing display monitor
2021-04-03 23:53:14,017:INFO:Preloading libraries
2021-04-03 23:53:14,018:INFO:Copying training dataset
2021-04-03 23:53:14,019:INFO:Copying test dataset
2021-04-03 23:53:14,019:INFO:Plot type: error
2021-04-03 23:53:14,021:INFO:Fitting Model
2021-04-03 23:53:14,023:INFO:Scoring test/hold-out set
2021-04-03 23:53:14,384:INFO:Visual Rendered Successfully
2021-04-03 23:53:14,473:INFO:plot_model() succesfully completed......................................
2021-04-03 23:53:18,339:INFO:Initializing plot_model()
2021-04-03 23:53:18,339:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 23:53:18,339:INFO:Checking exceptions
2021-04-03 23:53:18,339:INFO:Preparing display monitor
2021-04-03 23:53:18,347:INFO:Preloading libraries
2021-04-03 23:53:18,349:INFO:Copying training dataset
2021-04-03 23:53:18,349:INFO:Copying test dataset
2021-04-03 23:53:18,350:INFO:Plot type: feature
2021-04-03 23:53:18,580:INFO:Visual Rendered Successfully
2021-04-03 23:53:18,659:INFO:plot_model() succesfully completed......................................
2021-04-03 23:53:23,255:INFO:Initializing evaluate_model()
2021-04-03 23:53:23,255:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-03 23:53:23,276:INFO:Initializing plot_model()
2021-04-03 23:53:23,276:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-03 23:53:23,277:INFO:Checking exceptions
2021-04-03 23:53:23,277:INFO:Preparing display monitor
2021-04-03 23:53:23,286:INFO:Preloading libraries
2021-04-03 23:53:23,289:INFO:Copying training dataset
2021-04-03 23:53:23,290:INFO:Copying test dataset
2021-04-03 23:53:23,290:INFO:Plot type: parameter
2021-04-03 23:53:23,299:INFO:Visual Rendered Successfully
2021-04-03 23:53:23,396:INFO:plot_model() succesfully completed......................................
2021-04-03 23:53:24,540:INFO:Initializing automl()
2021-04-03 23:53:24,540:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-03 23:53:24,540:INFO:Model Selection Basis : CV Results on Training set
2021-04-03 23:53:24,545:INFO:Initializing create_model()
2021-04-03 23:53:24,545:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 23:53:24,545:INFO:Checking exceptions
2021-04-03 23:53:24,545:INFO:Importing libraries
2021-04-03 23:53:24,545:INFO:Copying training dataset
2021-04-03 23:53:24,546:INFO:Defining folds
2021-04-03 23:53:24,546:INFO:Declaring metric variables
2021-04-03 23:53:24,547:INFO:Importing untrained model
2021-04-03 23:53:24,547:INFO:Declaring custom model
2021-04-03 23:53:24,549:INFO:Bayesian Ridge Imported succesfully
2021-04-03 23:53:24,549:INFO:Cross validation set to False
2021-04-03 23:53:24,549:INFO:Fitting Model
2021-04-03 23:53:24,556:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 23:53:24,557:INFO:create_models() succesfully completed......................................
2021-04-03 23:53:24,648:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 23:53:24,648:INFO:automl() succesfully completed......................................
2021-04-03 23:53:27,367:INFO:Initializing predict_model()
2021-04-03 23:53:27,367:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 23:53:27,368:INFO:Checking exceptions
2021-04-03 23:53:27,368:INFO:Preloading libraries
2021-04-03 23:53:27,368:INFO:Preparing display monitor
2021-04-03 23:53:30,493:INFO:Initializing finalize_model()
2021-04-03 23:53:30,494:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-03 23:53:30,495:INFO:Finalizing PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 23:53:30,496:INFO:Initializing create_model()
2021-04-03 23:53:30,496:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-03 23:53:30,497:INFO:Checking exceptions
2021-04-03 23:53:30,497:INFO:Importing libraries
2021-04-03 23:53:30,497:INFO:Copying training dataset
2021-04-03 23:53:30,497:INFO:Defining folds
2021-04-03 23:53:30,497:INFO:Declaring metric variables
2021-04-03 23:53:30,498:INFO:Importing untrained model
2021-04-03 23:53:30,498:INFO:Declaring custom model
2021-04-03 23:53:30,499:INFO:Bayesian Ridge Imported succesfully
2021-04-03 23:53:30,499:INFO:Starting cross validation
2021-04-03 23:53:30,500:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-03 23:53:30,699:INFO:Calculating mean and std
2021-04-03 23:53:30,700:INFO:Creating metrics dataframe
2021-04-03 23:53:30,708:INFO:Finalizing model
2021-04-03 23:53:30,722:INFO:Uploading results into container
2021-04-03 23:53:30,722:INFO:Uploading model into container now
2021-04-03 23:53:30,722:INFO:create_model_container: 20
2021-04-03 23:53:30,723:INFO:master_model_container: 20
2021-04-03 23:53:30,723:INFO:display_container: 6
2021-04-03 23:53:30,725:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 23:53:30,726:INFO:create_model() succesfully completed......................................
2021-04-03 23:53:30,834:INFO:Creating MLFlow logs
2021-04-03 23:53:30,837:INFO:Model: Bayesian Ridge
2021-04-03 23:53:30,878:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-03 23:53:31,008:INFO:Initializing predict_model()
2021-04-03 23:53:31,008:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-03 23:53:31,008:INFO:Checking exceptions
2021-04-03 23:53:31,008:INFO:Preloading libraries
2021-04-03 23:53:31,341:INFO:create_model_container: 20
2021-04-03 23:53:31,341:INFO:master_model_container: 20
2021-04-03 23:53:31,341:INFO:display_container: 5
2021-04-03 23:53:31,342:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-03 23:53:31,343:INFO:finalize_model() succesfully completed......................................
2021-04-03 23:53:33,951:INFO:Initializing predict_model()
2021-04-03 23:53:33,952:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 23:53:33,952:INFO:Checking exceptions
2021-04-03 23:53:33,952:INFO:Preloading libraries
2021-04-03 23:53:33,953:INFO:Preparing display monitor
2021-04-03 23:53:37,298:INFO:Initializing predict_model()
2021-04-03 23:53:37,298:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-03 23:53:37,299:INFO:Checking exceptions
2021-04-03 23:53:37,299:INFO:Preloading libraries
2021-04-03 23:53:37,299:INFO:Preparing display monitor
2021-04-04 00:01:01,645:INFO:Initializing save_model()
2021-04-04 00:01:01,646:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), model_name=saved_models/best_4th_model_to_predict_CollegeEnrollmentRate_Huber, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True)
2021-04-04 00:01:01,646:INFO:Adding model into prep_pipe
2021-04-04 00:01:01,670:INFO:saved_models/best_4th_model_to_predict_CollegeEnrollmentRate_Huber.pkl saved in current working directory
2021-04-04 00:01:01,679:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                 PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                                 fit_intercept=True,
                                                 max_iter=None, normalize=False,
                                                 power_transformer_method='box-cox',
                                                 power_transformer_standardize=True,
                                                 random_state=786,
                                                 regressor=Ridge(alpha=1.0,
                                                                 copy_X=True,
                                                                 fit_intercept=True,
                                                                 max_iter=None,
                                                                 normalize=False,
                                                                 random_state=786,
                                                                 solver='auto',
                                                                 tol=0.001),
                                                 solver='auto', tol=0.001)]],
         verbose=False)
2021-04-04 00:01:01,679:INFO:save_model() succesfully completed......................................
2021-04-05 03:22:15,384:INFO:PyCaret Supervised Module
2021-04-05 03:22:15,385:INFO:ML Usecase: regression
2021-04-05 03:22:15,385:INFO:version 2.3.0
2021-04-05 03:22:15,386:INFO:Initializing setup()
2021-04-05 03:22:15,386:INFO:setup(target=Median income, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-05 03:22:15,386:INFO:Checking environment
2021-04-05 03:22:15,386:INFO:python_version: 3.9.1
2021-04-05 03:22:15,386:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-05 03:22:15,387:INFO:machine: AMD64
2021-04-05 03:22:15,387:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-05 03:22:15,389:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-05 03:22:15,389:INFO:Checking libraries
2021-04-05 03:22:15,389:INFO:pd==1.2.2
2021-04-05 03:22:15,389:INFO:numpy==1.19.5
2021-04-05 03:22:15,389:INFO:sklearn==0.23.2
2021-04-05 03:22:15,389:INFO:lightgbm==3.1.1
2021-04-05 03:22:15,391:WARNING:catboost not found
2021-04-05 03:22:15,765:INFO:xgboost==1.3.3
2021-04-05 03:22:16,330:INFO:mlflow==1.14.1
2021-04-05 03:22:16,331:INFO:Checking Exceptions
2021-04-05 03:22:16,331:INFO:Declaring global variables
2021-04-05 03:22:16,332:INFO:USI: 6d4a
2021-04-05 03:22:16,332:INFO:pycaret_globals: {'fold_groups_param', 'X_test', 'display_container', '_available_plots', 'target_param', 'data_before_preprocess', 'USI', 'X_train', 'exp_name_log', 'transform_target_param', 'prep_pipe', 'fold_shuffle_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'fix_imbalance_method_param', 'X', '_all_models', '_all_metrics', '_ml_usecase', 'transform_target_method_param', 'pycaret_globals', 'imputation_regressor', 'create_model_container', 'y_train', 'n_jobs_param', 'seed', 'iterative_imputation_iters_param', 'y_test', 'y', 'experiment__', 'html_param', 'imputation_classifier', '_internal_pipeline', '_gpu_n_jobs_param', 'master_model_container', 'stratify_param', '_all_models_internal', 'logging_param', 'fix_imbalance_param', 'fold_param'}
2021-04-05 03:22:16,332:INFO:Preparing display monitor
2021-04-05 03:22:16,332:INFO:Preparing display monitor
2021-04-05 03:22:16,354:INFO:Importing libraries
2021-04-05 03:22:16,355:INFO:Copying data for preprocessing
2021-04-05 03:22:16,371:INFO:Declaring preprocessing parameters
2021-04-05 03:22:16,373:INFO:Creating preprocessing pipeline
2021-04-05 03:22:16,381:INFO:Preprocessing pipeline created successfully
2021-04-05 03:22:16,381:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-05 03:22:16,381:INFO:Creating global containers
2021-04-05 03:22:16,387:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-05 03:22:19,611:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-05 03:22:19,730:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-05 03:22:19,731:INFO:Creating grid variables
2021-04-05 03:22:19,751:INFO:Logging experiment in MLFlow
2021-04-05 03:22:19,767:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-05 03:22:19,835:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-05 03:22:20,196:INFO:SubProcess save_model() called ==================================
2021-04-05 03:22:20,210:INFO:Initializing save_model()
2021-04-05 03:22:20,210:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False, kwargs={})
2021-04-05 03:22:20,210:INFO:Adding model into prep_pipe
2021-04-05 03:22:20,212:WARNING:Only Model saved as it was a pipeline.
2021-04-05 03:22:20,228:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-05 03:22:20,233:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-05 03:22:20,234:INFO:save_model() succesfully completed......................................
2021-04-05 03:22:20,305:INFO:SubProcess save_model() end ==================================
2021-04-05 03:22:20,423:INFO:create_model_container: 0
2021-04-05 03:22:20,423:INFO:master_model_container: 0
2021-04-05 03:22:20,423:INFO:display_container: 1
2021-04-05 03:22:20,429:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-05 03:22:20,429:INFO:setup() succesfully completed......................................
2021-04-05 03:22:20,518:INFO:Initializing compare_models()
2021-04-05 03:22:20,518:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-05 03:22:20,518:INFO:Checking exceptions
2021-04-05 03:22:20,518:INFO:Preparing display monitor
2021-04-05 03:22:20,519:INFO:Preparing display monitor
2021-04-05 03:22:20,558:INFO:Initializing Linear Regression
2021-04-05 03:22:20,559:INFO:Total runtime is 1.7774105072021484e-05 minutes
2021-04-05 03:22:20,572:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:20,573:INFO:Initializing create_model()
2021-04-05 03:22:20,573:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:20,573:INFO:Checking exceptions
2021-04-05 03:22:20,573:INFO:Importing libraries
2021-04-05 03:22:20,573:INFO:Copying training dataset
2021-04-05 03:22:20,576:INFO:Defining folds
2021-04-05 03:22:20,576:INFO:Declaring metric variables
2021-04-05 03:22:20,587:INFO:Importing untrained model
2021-04-05 03:22:20,599:INFO:Linear Regression Imported succesfully
2021-04-05 03:22:20,632:INFO:Starting cross validation
2021-04-05 03:22:20,641:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:26,883:INFO:Calculating mean and std
2021-04-05 03:22:26,885:INFO:Creating metrics dataframe
2021-04-05 03:22:26,892:INFO:Uploading results into container
2021-04-05 03:22:26,892:INFO:Uploading model into container now
2021-04-05 03:22:26,893:INFO:create_model_container: 1
2021-04-05 03:22:26,893:INFO:master_model_container: 1
2021-04-05 03:22:26,893:INFO:display_container: 2
2021-04-05 03:22:26,894:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-05 03:22:26,894:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:26,991:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:26,991:INFO:Creating metrics dataframe
2021-04-05 03:22:27,007:INFO:Initializing Lasso Regression
2021-04-05 03:22:27,008:INFO:Total runtime is 0.10748728116353352 minutes
2021-04-05 03:22:27,020:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:27,020:INFO:Initializing create_model()
2021-04-05 03:22:27,021:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:27,021:INFO:Checking exceptions
2021-04-05 03:22:27,021:INFO:Importing libraries
2021-04-05 03:22:27,021:INFO:Copying training dataset
2021-04-05 03:22:27,022:INFO:Defining folds
2021-04-05 03:22:27,022:INFO:Declaring metric variables
2021-04-05 03:22:27,035:INFO:Importing untrained model
2021-04-05 03:22:27,054:INFO:Lasso Regression Imported succesfully
2021-04-05 03:22:27,079:INFO:Starting cross validation
2021-04-05 03:22:27,080:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:27,196:INFO:Calculating mean and std
2021-04-05 03:22:27,197:INFO:Creating metrics dataframe
2021-04-05 03:22:27,203:INFO:Uploading results into container
2021-04-05 03:22:27,203:INFO:Uploading model into container now
2021-04-05 03:22:27,203:INFO:create_model_container: 2
2021-04-05 03:22:27,204:INFO:master_model_container: 2
2021-04-05 03:22:27,204:INFO:display_container: 2
2021-04-05 03:22:27,206:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-05 03:22:27,206:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:27,315:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:27,315:INFO:Creating metrics dataframe
2021-04-05 03:22:27,350:INFO:Initializing Ridge Regression
2021-04-05 03:22:27,350:INFO:Total runtime is 0.11319363911946614 minutes
2021-04-05 03:22:27,364:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:27,365:INFO:Initializing create_model()
2021-04-05 03:22:27,365:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:27,365:INFO:Checking exceptions
2021-04-05 03:22:27,365:INFO:Importing libraries
2021-04-05 03:22:27,365:INFO:Copying training dataset
2021-04-05 03:22:27,366:INFO:Defining folds
2021-04-05 03:22:27,367:INFO:Declaring metric variables
2021-04-05 03:22:27,380:INFO:Importing untrained model
2021-04-05 03:22:27,394:INFO:Ridge Regression Imported succesfully
2021-04-05 03:22:27,427:INFO:Starting cross validation
2021-04-05 03:22:27,428:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:27,532:INFO:Calculating mean and std
2021-04-05 03:22:27,533:INFO:Creating metrics dataframe
2021-04-05 03:22:27,538:INFO:Uploading results into container
2021-04-05 03:22:27,538:INFO:Uploading model into container now
2021-04-05 03:22:27,538:INFO:create_model_container: 3
2021-04-05 03:22:27,539:INFO:master_model_container: 3
2021-04-05 03:22:27,539:INFO:display_container: 2
2021-04-05 03:22:27,540:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:22:27,540:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:27,645:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:27,646:INFO:Creating metrics dataframe
2021-04-05 03:22:27,669:INFO:Initializing Elastic Net
2021-04-05 03:22:27,669:INFO:Total runtime is 0.11851678291956584 minutes
2021-04-05 03:22:27,680:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:27,680:INFO:Initializing create_model()
2021-04-05 03:22:27,681:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:27,681:INFO:Checking exceptions
2021-04-05 03:22:27,681:INFO:Importing libraries
2021-04-05 03:22:27,681:INFO:Copying training dataset
2021-04-05 03:22:27,683:INFO:Defining folds
2021-04-05 03:22:27,683:INFO:Declaring metric variables
2021-04-05 03:22:27,694:INFO:Importing untrained model
2021-04-05 03:22:27,711:INFO:Elastic Net Imported succesfully
2021-04-05 03:22:27,739:INFO:Starting cross validation
2021-04-05 03:22:27,740:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:27,851:INFO:Calculating mean and std
2021-04-05 03:22:27,853:INFO:Creating metrics dataframe
2021-04-05 03:22:27,863:INFO:Uploading results into container
2021-04-05 03:22:27,863:INFO:Uploading model into container now
2021-04-05 03:22:27,863:INFO:create_model_container: 4
2021-04-05 03:22:27,864:INFO:master_model_container: 4
2021-04-05 03:22:27,864:INFO:display_container: 2
2021-04-05 03:22:27,866:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-05 03:22:27,866:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:27,989:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:27,989:INFO:Creating metrics dataframe
2021-04-05 03:22:28,012:INFO:Initializing Least Angle Regression
2021-04-05 03:22:28,012:INFO:Total runtime is 0.1242301344871521 minutes
2021-04-05 03:22:28,022:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:28,022:INFO:Initializing create_model()
2021-04-05 03:22:28,022:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:28,022:INFO:Checking exceptions
2021-04-05 03:22:28,023:INFO:Importing libraries
2021-04-05 03:22:28,023:INFO:Copying training dataset
2021-04-05 03:22:28,025:INFO:Defining folds
2021-04-05 03:22:28,025:INFO:Declaring metric variables
2021-04-05 03:22:28,039:INFO:Importing untrained model
2021-04-05 03:22:28,057:INFO:Least Angle Regression Imported succesfully
2021-04-05 03:22:28,095:INFO:Starting cross validation
2021-04-05 03:22:28,096:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:29,122:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-05 03:22:29,138:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-05 03:22:29,138:INFO:Initializing create_model()
2021-04-05 03:22:29,138:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:29,138:INFO:Checking exceptions
2021-04-05 03:22:29,138:INFO:Importing libraries
2021-04-05 03:22:29,138:INFO:Copying training dataset
2021-04-05 03:22:29,140:INFO:Defining folds
2021-04-05 03:22:29,141:INFO:Declaring metric variables
2021-04-05 03:22:29,151:INFO:Importing untrained model
2021-04-05 03:22:29,169:INFO:Least Angle Regression Imported succesfully
2021-04-05 03:22:29,200:INFO:Starting cross validation
2021-04-05 03:22:29,201:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:35,380:ERROR:create_model() for lar raised an exception:
2021-04-05 03:22:35,381:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-05 03:22:35,381:INFO:Initializing Lasso Least Angle Regression
2021-04-05 03:22:35,381:INFO:Total runtime is 0.24704589049021403 minutes
2021-04-05 03:22:35,391:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:35,392:INFO:Initializing create_model()
2021-04-05 03:22:35,392:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:35,392:INFO:Checking exceptions
2021-04-05 03:22:35,392:INFO:Importing libraries
2021-04-05 03:22:35,393:INFO:Copying training dataset
2021-04-05 03:22:35,394:INFO:Defining folds
2021-04-05 03:22:35,394:INFO:Declaring metric variables
2021-04-05 03:22:35,410:INFO:Importing untrained model
2021-04-05 03:22:35,422:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-05 03:22:35,449:INFO:Starting cross validation
2021-04-05 03:22:35,449:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:40,607:INFO:Calculating mean and std
2021-04-05 03:22:40,609:INFO:Creating metrics dataframe
2021-04-05 03:22:40,618:INFO:Uploading results into container
2021-04-05 03:22:40,618:INFO:Uploading model into container now
2021-04-05 03:22:40,619:INFO:create_model_container: 5
2021-04-05 03:22:40,619:INFO:master_model_container: 5
2021-04-05 03:22:40,619:INFO:display_container: 2
2021-04-05 03:22:40,621:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-05 03:22:40,621:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:40,720:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:40,720:INFO:Creating metrics dataframe
2021-04-05 03:22:40,740:INFO:Initializing Orthogonal Matching Pursuit
2021-04-05 03:22:40,740:INFO:Total runtime is 0.3363566279411316 minutes
2021-04-05 03:22:40,750:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:40,751:INFO:Initializing create_model()
2021-04-05 03:22:40,751:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:40,751:INFO:Checking exceptions
2021-04-05 03:22:40,752:INFO:Importing libraries
2021-04-05 03:22:40,752:INFO:Copying training dataset
2021-04-05 03:22:40,753:INFO:Defining folds
2021-04-05 03:22:40,754:INFO:Declaring metric variables
2021-04-05 03:22:40,765:INFO:Importing untrained model
2021-04-05 03:22:40,779:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-05 03:22:40,800:INFO:Starting cross validation
2021-04-05 03:22:40,802:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:40,896:INFO:Calculating mean and std
2021-04-05 03:22:40,897:INFO:Creating metrics dataframe
2021-04-05 03:22:40,903:INFO:Uploading results into container
2021-04-05 03:22:40,903:INFO:Uploading model into container now
2021-04-05 03:22:40,903:INFO:create_model_container: 6
2021-04-05 03:22:40,903:INFO:master_model_container: 6
2021-04-05 03:22:40,904:INFO:display_container: 2
2021-04-05 03:22:40,905:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-05 03:22:40,906:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:40,989:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:40,989:INFO:Creating metrics dataframe
2021-04-05 03:22:41,009:INFO:Initializing Bayesian Ridge
2021-04-05 03:22:41,009:INFO:Total runtime is 0.34084124565124513 minutes
2021-04-05 03:22:41,020:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:41,020:INFO:Initializing create_model()
2021-04-05 03:22:41,021:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:41,021:INFO:Checking exceptions
2021-04-05 03:22:41,021:INFO:Importing libraries
2021-04-05 03:22:41,021:INFO:Copying training dataset
2021-04-05 03:22:41,021:INFO:Defining folds
2021-04-05 03:22:41,022:INFO:Declaring metric variables
2021-04-05 03:22:41,033:INFO:Importing untrained model
2021-04-05 03:22:41,046:INFO:Bayesian Ridge Imported succesfully
2021-04-05 03:22:41,072:INFO:Starting cross validation
2021-04-05 03:22:41,072:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:41,169:INFO:Calculating mean and std
2021-04-05 03:22:41,170:INFO:Creating metrics dataframe
2021-04-05 03:22:41,176:INFO:Uploading results into container
2021-04-05 03:22:41,176:INFO:Uploading model into container now
2021-04-05 03:22:41,176:INFO:create_model_container: 7
2021-04-05 03:22:41,176:INFO:master_model_container: 7
2021-04-05 03:22:41,176:INFO:display_container: 2
2021-04-05 03:22:41,179:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:22:41,179:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:41,272:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:41,272:INFO:Creating metrics dataframe
2021-04-05 03:22:41,298:INFO:Initializing Passive Aggressive Regressor
2021-04-05 03:22:41,299:INFO:Total runtime is 0.34567599693934126 minutes
2021-04-05 03:22:41,308:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:41,309:INFO:Initializing create_model()
2021-04-05 03:22:41,309:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:41,309:INFO:Checking exceptions
2021-04-05 03:22:41,309:INFO:Importing libraries
2021-04-05 03:22:41,310:INFO:Copying training dataset
2021-04-05 03:22:41,312:INFO:Defining folds
2021-04-05 03:22:41,312:INFO:Declaring metric variables
2021-04-05 03:22:41,323:INFO:Importing untrained model
2021-04-05 03:22:41,338:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-05 03:22:41,366:INFO:Starting cross validation
2021-04-05 03:22:41,367:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:41,498:INFO:Calculating mean and std
2021-04-05 03:22:41,500:INFO:Creating metrics dataframe
2021-04-05 03:22:41,505:INFO:Uploading results into container
2021-04-05 03:22:41,505:INFO:Uploading model into container now
2021-04-05 03:22:41,505:INFO:create_model_container: 8
2021-04-05 03:22:41,506:INFO:master_model_container: 8
2021-04-05 03:22:41,506:INFO:display_container: 2
2021-04-05 03:22:41,507:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:22:41,508:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:41,587:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:41,587:INFO:Creating metrics dataframe
2021-04-05 03:22:41,607:INFO:Initializing Huber Regressor
2021-04-05 03:22:41,608:INFO:Total runtime is 0.350836726029714 minutes
2021-04-05 03:22:41,619:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:41,619:INFO:Initializing create_model()
2021-04-05 03:22:41,620:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:41,620:INFO:Checking exceptions
2021-04-05 03:22:41,620:INFO:Importing libraries
2021-04-05 03:22:41,620:INFO:Copying training dataset
2021-04-05 03:22:41,621:INFO:Defining folds
2021-04-05 03:22:41,621:INFO:Declaring metric variables
2021-04-05 03:22:41,633:INFO:Importing untrained model
2021-04-05 03:22:41,648:INFO:Huber Regressor Imported succesfully
2021-04-05 03:22:41,673:INFO:Starting cross validation
2021-04-05 03:22:41,674:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:42,002:INFO:Calculating mean and std
2021-04-05 03:22:42,003:INFO:Creating metrics dataframe
2021-04-05 03:22:42,009:INFO:Uploading results into container
2021-04-05 03:22:42,010:INFO:Uploading model into container now
2021-04-05 03:22:42,010:INFO:create_model_container: 9
2021-04-05 03:22:42,011:INFO:master_model_container: 9
2021-04-05 03:22:42,011:INFO:display_container: 2
2021-04-05 03:22:42,012:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-05 03:22:42,013:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:42,099:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:42,099:INFO:Creating metrics dataframe
2021-04-05 03:22:42,121:INFO:Initializing K Neighbors Regressor
2021-04-05 03:22:42,121:INFO:Total runtime is 0.35938792228698735 minutes
2021-04-05 03:22:42,133:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:42,133:INFO:Initializing create_model()
2021-04-05 03:22:42,134:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:42,134:INFO:Checking exceptions
2021-04-05 03:22:42,134:INFO:Importing libraries
2021-04-05 03:22:42,134:INFO:Copying training dataset
2021-04-05 03:22:42,135:INFO:Defining folds
2021-04-05 03:22:42,136:INFO:Declaring metric variables
2021-04-05 03:22:42,149:INFO:Importing untrained model
2021-04-05 03:22:42,168:INFO:K Neighbors Regressor Imported succesfully
2021-04-05 03:22:42,196:INFO:Starting cross validation
2021-04-05 03:22:42,197:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:42,316:INFO:Calculating mean and std
2021-04-05 03:22:42,317:INFO:Creating metrics dataframe
2021-04-05 03:22:42,323:INFO:Uploading results into container
2021-04-05 03:22:42,324:INFO:Uploading model into container now
2021-04-05 03:22:42,324:INFO:create_model_container: 10
2021-04-05 03:22:42,324:INFO:master_model_container: 10
2021-04-05 03:22:42,324:INFO:display_container: 2
2021-04-05 03:22:42,327:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-05 03:22:42,327:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:42,415:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:42,415:INFO:Creating metrics dataframe
2021-04-05 03:22:42,445:INFO:Initializing Decision Tree Regressor
2021-04-05 03:22:42,445:INFO:Total runtime is 0.36478286981582647 minutes
2021-04-05 03:22:42,456:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:42,457:INFO:Initializing create_model()
2021-04-05 03:22:42,457:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:42,458:INFO:Checking exceptions
2021-04-05 03:22:42,458:INFO:Importing libraries
2021-04-05 03:22:42,458:INFO:Copying training dataset
2021-04-05 03:22:42,459:INFO:Defining folds
2021-04-05 03:22:42,459:INFO:Declaring metric variables
2021-04-05 03:22:42,469:INFO:Importing untrained model
2021-04-05 03:22:42,481:INFO:Decision Tree Regressor Imported succesfully
2021-04-05 03:22:42,509:INFO:Starting cross validation
2021-04-05 03:22:42,509:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:42,615:INFO:Calculating mean and std
2021-04-05 03:22:42,616:INFO:Creating metrics dataframe
2021-04-05 03:22:42,623:INFO:Uploading results into container
2021-04-05 03:22:42,623:INFO:Uploading model into container now
2021-04-05 03:22:42,625:INFO:create_model_container: 11
2021-04-05 03:22:42,625:INFO:master_model_container: 11
2021-04-05 03:22:42,625:INFO:display_container: 2
2021-04-05 03:22:42,628:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-05 03:22:42,628:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:42,720:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:42,720:INFO:Creating metrics dataframe
2021-04-05 03:22:42,741:INFO:Initializing Random Forest Regressor
2021-04-05 03:22:42,741:INFO:Total runtime is 0.3697106361389161 minutes
2021-04-05 03:22:42,752:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:42,753:INFO:Initializing create_model()
2021-04-05 03:22:42,753:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:42,754:INFO:Checking exceptions
2021-04-05 03:22:42,754:INFO:Importing libraries
2021-04-05 03:22:42,754:INFO:Copying training dataset
2021-04-05 03:22:42,755:INFO:Defining folds
2021-04-05 03:22:42,755:INFO:Declaring metric variables
2021-04-05 03:22:42,766:INFO:Importing untrained model
2021-04-05 03:22:42,781:INFO:Random Forest Regressor Imported succesfully
2021-04-05 03:22:42,806:INFO:Starting cross validation
2021-04-05 03:22:42,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:43,759:INFO:Calculating mean and std
2021-04-05 03:22:43,760:INFO:Creating metrics dataframe
2021-04-05 03:22:43,764:INFO:Uploading results into container
2021-04-05 03:22:43,764:INFO:Uploading model into container now
2021-04-05 03:22:43,765:INFO:create_model_container: 12
2021-04-05 03:22:43,765:INFO:master_model_container: 12
2021-04-05 03:22:43,765:INFO:display_container: 2
2021-04-05 03:22:43,766:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-05 03:22:43,767:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:43,843:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:43,843:INFO:Creating metrics dataframe
2021-04-05 03:22:43,865:INFO:Initializing Extra Trees Regressor
2021-04-05 03:22:43,865:INFO:Total runtime is 0.38844564755757655 minutes
2021-04-05 03:22:43,874:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:43,875:INFO:Initializing create_model()
2021-04-05 03:22:43,875:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:43,875:INFO:Checking exceptions
2021-04-05 03:22:43,875:INFO:Importing libraries
2021-04-05 03:22:43,875:INFO:Copying training dataset
2021-04-05 03:22:43,876:INFO:Defining folds
2021-04-05 03:22:43,876:INFO:Declaring metric variables
2021-04-05 03:22:43,887:INFO:Importing untrained model
2021-04-05 03:22:43,902:INFO:Extra Trees Regressor Imported succesfully
2021-04-05 03:22:43,931:INFO:Starting cross validation
2021-04-05 03:22:43,932:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:44,555:INFO:Calculating mean and std
2021-04-05 03:22:44,556:INFO:Creating metrics dataframe
2021-04-05 03:22:44,561:INFO:Uploading results into container
2021-04-05 03:22:44,561:INFO:Uploading model into container now
2021-04-05 03:22:44,561:INFO:create_model_container: 13
2021-04-05 03:22:44,562:INFO:master_model_container: 13
2021-04-05 03:22:44,562:INFO:display_container: 2
2021-04-05 03:22:44,563:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-05 03:22:44,563:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:44,643:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:44,643:INFO:Creating metrics dataframe
2021-04-05 03:22:44,668:INFO:Initializing AdaBoost Regressor
2021-04-05 03:22:44,668:INFO:Total runtime is 0.4018271327018738 minutes
2021-04-05 03:22:44,678:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:44,679:INFO:Initializing create_model()
2021-04-05 03:22:44,679:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:44,679:INFO:Checking exceptions
2021-04-05 03:22:44,679:INFO:Importing libraries
2021-04-05 03:22:44,679:INFO:Copying training dataset
2021-04-05 03:22:44,681:INFO:Defining folds
2021-04-05 03:22:44,681:INFO:Declaring metric variables
2021-04-05 03:22:44,691:INFO:Importing untrained model
2021-04-05 03:22:44,707:INFO:AdaBoost Regressor Imported succesfully
2021-04-05 03:22:44,746:INFO:Starting cross validation
2021-04-05 03:22:44,747:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:45,197:INFO:Calculating mean and std
2021-04-05 03:22:45,198:INFO:Creating metrics dataframe
2021-04-05 03:22:45,202:INFO:Uploading results into container
2021-04-05 03:22:45,202:INFO:Uploading model into container now
2021-04-05 03:22:45,202:INFO:create_model_container: 14
2021-04-05 03:22:45,203:INFO:master_model_container: 14
2021-04-05 03:22:45,203:INFO:display_container: 2
2021-04-05 03:22:45,204:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-05 03:22:45,204:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:45,280:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:45,280:INFO:Creating metrics dataframe
2021-04-05 03:22:45,302:INFO:Initializing Gradient Boosting Regressor
2021-04-05 03:22:45,303:INFO:Total runtime is 0.41240841547648116 minutes
2021-04-05 03:22:45,315:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:45,316:INFO:Initializing create_model()
2021-04-05 03:22:45,316:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:45,316:INFO:Checking exceptions
2021-04-05 03:22:45,316:INFO:Importing libraries
2021-04-05 03:22:45,316:INFO:Copying training dataset
2021-04-05 03:22:45,317:INFO:Defining folds
2021-04-05 03:22:45,317:INFO:Declaring metric variables
2021-04-05 03:22:45,329:INFO:Importing untrained model
2021-04-05 03:22:45,347:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-05 03:22:45,385:INFO:Starting cross validation
2021-04-05 03:22:45,385:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:45,675:INFO:Calculating mean and std
2021-04-05 03:22:45,676:INFO:Creating metrics dataframe
2021-04-05 03:22:45,680:INFO:Uploading results into container
2021-04-05 03:22:45,681:INFO:Uploading model into container now
2021-04-05 03:22:45,681:INFO:create_model_container: 15
2021-04-05 03:22:45,681:INFO:master_model_container: 15
2021-04-05 03:22:45,681:INFO:display_container: 2
2021-04-05 03:22:45,682:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:22:45,683:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:45,757:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:45,757:INFO:Creating metrics dataframe
2021-04-05 03:22:45,780:INFO:Initializing Extreme Gradient Boosting
2021-04-05 03:22:45,780:INFO:Total runtime is 0.4203679164250692 minutes
2021-04-05 03:22:45,790:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:45,791:INFO:Initializing create_model()
2021-04-05 03:22:45,791:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:45,792:INFO:Checking exceptions
2021-04-05 03:22:45,792:INFO:Importing libraries
2021-04-05 03:22:45,792:INFO:Copying training dataset
2021-04-05 03:22:45,793:INFO:Defining folds
2021-04-05 03:22:45,793:INFO:Declaring metric variables
2021-04-05 03:22:45,804:INFO:Importing untrained model
2021-04-05 03:22:45,820:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-05 03:22:45,856:INFO:Starting cross validation
2021-04-05 03:22:45,856:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:48,035:INFO:Calculating mean and std
2021-04-05 03:22:48,036:INFO:Creating metrics dataframe
2021-04-05 03:22:48,045:INFO:Uploading results into container
2021-04-05 03:22:48,045:INFO:Uploading model into container now
2021-04-05 03:22:48,045:INFO:create_model_container: 16
2021-04-05 03:22:48,046:INFO:master_model_container: 16
2021-04-05 03:22:48,046:INFO:display_container: 2
2021-04-05 03:22:48,051:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-05 03:22:48,051:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:48,152:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:48,152:INFO:Creating metrics dataframe
2021-04-05 03:22:48,174:INFO:Initializing Light Gradient Boosting Machine
2021-04-05 03:22:48,174:INFO:Total runtime is 0.46026289860407515 minutes
2021-04-05 03:22:48,186:INFO:SubProcess create_model() called ==================================
2021-04-05 03:22:48,186:INFO:Initializing create_model()
2021-04-05 03:22:48,187:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503C34400>, kwargs={})
2021-04-05 03:22:48,187:INFO:Checking exceptions
2021-04-05 03:22:48,187:INFO:Importing libraries
2021-04-05 03:22:48,187:INFO:Copying training dataset
2021-04-05 03:22:48,188:INFO:Defining folds
2021-04-05 03:22:48,189:INFO:Declaring metric variables
2021-04-05 03:22:48,199:INFO:Importing untrained model
2021-04-05 03:22:48,216:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-05 03:22:48,241:INFO:Starting cross validation
2021-04-05 03:22:48,241:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:48,885:INFO:Calculating mean and std
2021-04-05 03:22:48,887:INFO:Creating metrics dataframe
2021-04-05 03:22:48,897:INFO:Uploading results into container
2021-04-05 03:22:48,897:INFO:Uploading model into container now
2021-04-05 03:22:48,897:INFO:create_model_container: 17
2021-04-05 03:22:48,898:INFO:master_model_container: 17
2021-04-05 03:22:48,898:INFO:display_container: 2
2021-04-05 03:22:48,901:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-05 03:22:48,902:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:49,005:INFO:SubProcess create_model() end ==================================
2021-04-05 03:22:49,005:INFO:Creating metrics dataframe
2021-04-05 03:22:49,053:INFO:Initializing create_model()
2021-04-05 03:22:49,053:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:22:49,053:INFO:Checking exceptions
2021-04-05 03:22:49,053:INFO:Importing libraries
2021-04-05 03:22:49,054:INFO:Copying training dataset
2021-04-05 03:22:49,054:INFO:Defining folds
2021-04-05 03:22:49,054:INFO:Declaring metric variables
2021-04-05 03:22:49,054:INFO:Importing untrained model
2021-04-05 03:22:49,054:INFO:Declaring custom model
2021-04-05 03:22:49,056:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-05 03:22:49,056:INFO:Cross validation set to False
2021-04-05 03:22:49,056:INFO:Fitting Model
2021-04-05 03:22:49,134:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:22:49,135:INFO:create_models() succesfully completed......................................
2021-04-05 03:22:49,208:INFO:Creating MLFlow logs
2021-04-05 03:22:49,221:INFO:Model: Gradient Boosting Regressor
2021-04-05 03:22:49,270:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:22:49,411:INFO:Initializing predict_model()
2021-04-05 03:22:49,411:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:22:49,411:INFO:Checking exceptions
2021-04-05 03:22:49,411:INFO:Preloading libraries
2021-04-05 03:22:49,660:INFO:Creating MLFlow logs
2021-04-05 03:22:49,675:INFO:Model: Extreme Gradient Boosting
2021-04-05 03:22:49,726:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-05 03:22:49,992:INFO:Creating MLFlow logs
2021-04-05 03:22:50,006:INFO:Model: Random Forest Regressor
2021-04-05 03:22:50,059:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-05 03:22:50,315:INFO:Creating MLFlow logs
2021-04-05 03:22:50,328:INFO:Model: Decision Tree Regressor
2021-04-05 03:22:50,393:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-05 03:22:50,724:INFO:Creating MLFlow logs
2021-04-05 03:22:50,739:INFO:Model: Extra Trees Regressor
2021-04-05 03:22:50,792:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-05 03:22:51,064:INFO:Creating MLFlow logs
2021-04-05 03:22:51,079:INFO:Model: Light Gradient Boosting Machine
2021-04-05 03:22:51,135:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-05 03:22:51,423:INFO:Creating MLFlow logs
2021-04-05 03:22:51,438:INFO:Model: AdaBoost Regressor
2021-04-05 03:22:51,492:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-05 03:22:51,742:INFO:Creating MLFlow logs
2021-04-05 03:22:51,757:INFO:Model: Huber Regressor
2021-04-05 03:22:51,812:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-05 03:22:52,071:INFO:Creating MLFlow logs
2021-04-05 03:22:52,091:INFO:Model: K Neighbors Regressor
2021-04-05 03:22:52,144:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-05 03:22:52,453:INFO:Creating MLFlow logs
2021-04-05 03:22:52,469:INFO:Model: Ridge Regression
2021-04-05 03:22:52,525:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-05 03:22:52,835:INFO:Creating MLFlow logs
2021-04-05 03:22:52,848:INFO:Model: Linear Regression
2021-04-05 03:22:52,905:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-05 03:22:53,140:INFO:Creating MLFlow logs
2021-04-05 03:22:53,152:INFO:Model: Bayesian Ridge
2021-04-05 03:22:53,204:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-05 03:22:53,556:INFO:Creating MLFlow logs
2021-04-05 03:22:53,571:INFO:Model: Orthogonal Matching Pursuit
2021-04-05 03:22:53,629:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-05 03:22:53,879:INFO:Creating MLFlow logs
2021-04-05 03:22:53,892:INFO:Model: Lasso Regression
2021-04-05 03:22:53,946:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-05 03:22:54,207:INFO:Creating MLFlow logs
2021-04-05 03:22:54,222:INFO:Model: Elastic Net
2021-04-05 03:22:54,268:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-05 03:22:54,537:INFO:Creating MLFlow logs
2021-04-05 03:22:54,552:INFO:Model: Least Angle Regression
2021-04-05 03:22:54,605:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-05 03:22:54,872:INFO:Creating MLFlow logs
2021-04-05 03:22:54,888:INFO:Model: Passive Aggressive Regressor
2021-04-05 03:22:54,943:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:22:55,223:INFO:create_model_container: 17
2021-04-05 03:22:55,224:INFO:master_model_container: 17
2021-04-05 03:22:55,224:INFO:display_container: 2
2021-04-05 03:22:55,226:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:22:55,227:INFO:compare_models() succesfully completed......................................
2021-04-05 03:22:55,242:INFO:Initializing create_model()
2021-04-05 03:22:55,246:INFO:create_model(estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-05 03:22:55,246:INFO:Checking exceptions
2021-04-05 03:22:55,246:INFO:Preparing display monitor
2021-04-05 03:22:55,282:INFO:Importing libraries
2021-04-05 03:22:55,283:INFO:Copying training dataset
2021-04-05 03:22:55,285:INFO:Defining folds
2021-04-05 03:22:55,285:INFO:Declaring metric variables
2021-04-05 03:22:55,302:INFO:Importing untrained model
2021-04-05 03:22:55,318:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-05 03:22:55,353:INFO:Starting cross validation
2021-04-05 03:22:55,355:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:22:57,242:INFO:Calculating mean and std
2021-04-05 03:22:57,244:INFO:Creating metrics dataframe
2021-04-05 03:22:57,267:INFO:Finalizing model
2021-04-05 03:22:57,882:INFO:Creating MLFlow logs
2021-04-05 03:22:57,896:INFO:Model: Extreme Gradient Boosting
2021-04-05 03:22:57,945:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'gpu_id': -1, 'importance_type': 'gain', 'interaction_constraints': '', 'learning_rate': 0.300000012, 'max_delta_step': 0, 'max_depth': 6, 'min_child_weight': 1, 'missing': nan, 'monotone_constraints': '()', 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': 1, 'random_state': 786, 'reg_alpha': 0, 'reg_lambda': 1, 'scale_pos_weight': 1, 'subsample': 1, 'tree_method': 'auto', 'validate_parameters': 1, 'verbosity': 0}
2021-04-05 03:22:58,099:INFO:Initializing predict_model()
2021-04-05 03:22:58,099:INFO:predict_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:22:58,099:INFO:Checking exceptions
2021-04-05 03:22:58,099:INFO:Preloading libraries
2021-04-05 03:22:58,425:INFO:Uploading results into container
2021-04-05 03:22:58,425:INFO:Uploading model into container now
2021-04-05 03:22:58,445:INFO:create_model_container: 18
2021-04-05 03:22:58,445:INFO:master_model_container: 18
2021-04-05 03:22:58,446:INFO:display_container: 3
2021-04-05 03:22:58,451:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-05 03:22:58,451:INFO:create_model() succesfully completed......................................
2021-04-05 03:22:58,598:INFO:Initializing tune_model()
2021-04-05 03:22:58,599:INFO:tune_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-05 03:22:58,599:INFO:Checking exceptions
2021-04-05 03:22:58,600:INFO:Preparing display monitor
2021-04-05 03:22:58,637:INFO:Copying training dataset
2021-04-05 03:22:58,639:INFO:Checking base model
2021-04-05 03:22:58,639:INFO:Base model : Extreme Gradient Boosting
2021-04-05 03:22:58,661:INFO:Declaring metric variables
2021-04-05 03:22:58,672:INFO:Defining Hyperparameters
2021-04-05 03:22:58,796:INFO:Tuning with n_jobs=-1
2021-04-05 03:22:58,797:INFO:Initializing RandomizedSearchCV
2021-04-05 03:23:09,825:INFO:best_params: {'actual_estimator__subsample': 0.9, 'actual_estimator__scale_pos_weight': 5.2, 'actual_estimator__reg_lambda': 0.15, 'actual_estimator__reg_alpha': 0.0005, 'actual_estimator__n_estimators': 270, 'actual_estimator__min_child_weight': 4, 'actual_estimator__max_depth': 8, 'actual_estimator__learning_rate': 0.4, 'actual_estimator__colsample_bytree': 1}
2021-04-05 03:23:09,827:INFO:Hyperparameter search completed
2021-04-05 03:23:09,827:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:09,833:INFO:Initializing create_model()
2021-04-05 03:23:09,833:INFO:create_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5041BB790>, kwargs={'subsample': 0.9, 'scale_pos_weight': 5.2, 'reg_lambda': 0.15, 'reg_alpha': 0.0005, 'n_estimators': 270, 'min_child_weight': 4, 'max_depth': 8, 'learning_rate': 0.4, 'colsample_bytree': 1})
2021-04-05 03:23:09,834:INFO:Checking exceptions
2021-04-05 03:23:09,834:INFO:Importing libraries
2021-04-05 03:23:09,834:INFO:Copying training dataset
2021-04-05 03:23:09,836:INFO:Defining folds
2021-04-05 03:23:09,836:INFO:Declaring metric variables
2021-04-05 03:23:09,851:INFO:Importing untrained model
2021-04-05 03:23:09,853:INFO:Declaring custom model
2021-04-05 03:23:09,876:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-05 03:23:09,910:INFO:Starting cross validation
2021-04-05 03:23:09,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:11,540:INFO:Calculating mean and std
2021-04-05 03:23:11,542:INFO:Creating metrics dataframe
2021-04-05 03:23:11,564:INFO:Finalizing model
2021-04-05 03:23:11,914:INFO:Uploading results into container
2021-04-05 03:23:11,914:INFO:Uploading model into container now
2021-04-05 03:23:11,914:INFO:create_model_container: 19
2021-04-05 03:23:11,914:INFO:master_model_container: 19
2021-04-05 03:23:11,914:INFO:display_container: 4
2021-04-05 03:23:11,916:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-05 03:23:11,916:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:11,990:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:11,990:INFO:Creating MLFlow logs
2021-04-05 03:23:12,004:INFO:Model: Extreme Gradient Boosting
2021-04-05 03:23:12,050:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'gpu_id': -1, 'importance_type': 'gain', 'interaction_constraints': '', 'learning_rate': 0.4, 'max_delta_step': 0, 'max_depth': 8, 'min_child_weight': 4, 'missing': nan, 'monotone_constraints': '()', 'n_estimators': 270, 'n_jobs': -1, 'num_parallel_tree': 1, 'random_state': 786, 'reg_alpha': 0.0005, 'reg_lambda': 0.15, 'scale_pos_weight': 5.2, 'subsample': 0.9, 'tree_method': 'auto', 'validate_parameters': 1, 'verbosity': 0}
2021-04-05 03:23:12,196:INFO:Initializing predict_model()
2021-04-05 03:23:12,197:INFO:predict_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:23:12,197:INFO:Checking exceptions
2021-04-05 03:23:12,197:INFO:Preloading libraries
2021-04-05 03:23:12,546:INFO:create_model_container: 19
2021-04-05 03:23:12,547:INFO:master_model_container: 19
2021-04-05 03:23:12,547:INFO:display_container: 4
2021-04-05 03:23:12,552:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-05 03:23:12,552:INFO:tune_model() succesfully completed......................................
2021-04-05 03:23:12,665:INFO:Initializing plot_model()
2021-04-05 03:23:12,666:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:23:12,666:INFO:Checking exceptions
2021-04-05 03:23:12,666:INFO:Preparing display monitor
2021-04-05 03:23:12,674:INFO:Preloading libraries
2021-04-05 03:23:12,726:INFO:Copying training dataset
2021-04-05 03:23:12,727:INFO:Copying test dataset
2021-04-05 03:23:12,728:INFO:Plot type: residuals
2021-04-05 03:23:13,041:INFO:Fitting Model
2021-04-05 03:23:13,115:INFO:Scoring test/hold-out set
2021-04-05 03:23:14,079:INFO:Visual Rendered Successfully
2021-04-05 03:23:14,192:INFO:plot_model() succesfully completed......................................
2021-04-05 03:23:14,221:INFO:Initializing plot_model()
2021-04-05 03:23:14,221:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:23:14,222:INFO:Checking exceptions
2021-04-05 03:23:14,222:INFO:Preparing display monitor
2021-04-05 03:23:14,239:INFO:Preloading libraries
2021-04-05 03:23:14,306:INFO:Copying training dataset
2021-04-05 03:23:14,307:INFO:Copying test dataset
2021-04-05 03:23:14,307:INFO:Plot type: error
2021-04-05 03:23:14,310:INFO:Fitting Model
2021-04-05 03:23:14,313:INFO:Scoring test/hold-out set
2021-04-05 03:23:14,687:INFO:Visual Rendered Successfully
2021-04-05 03:23:14,779:INFO:plot_model() succesfully completed......................................
2021-04-05 03:23:14,797:INFO:Initializing plot_model()
2021-04-05 03:23:14,798:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:23:14,798:INFO:Checking exceptions
2021-04-05 03:23:14,798:INFO:Preparing display monitor
2021-04-05 03:23:14,805:INFO:Preloading libraries
2021-04-05 03:23:14,860:INFO:Copying training dataset
2021-04-05 03:23:14,861:INFO:Copying test dataset
2021-04-05 03:23:14,862:INFO:Plot type: feature
2021-04-05 03:23:14,865:WARNING:No coef_ found. Trying feature_importances_
2021-04-05 03:23:15,078:INFO:Visual Rendered Successfully
2021-04-05 03:23:15,160:INFO:plot_model() succesfully completed......................................
2021-04-05 03:23:15,194:INFO:Initializing evaluate_model()
2021-04-05 03:23:15,194:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-05 03:23:15,240:INFO:Initializing plot_model()
2021-04-05 03:23:15,240:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:23:15,240:INFO:Checking exceptions
2021-04-05 03:23:15,240:INFO:Preparing display monitor
2021-04-05 03:23:15,252:INFO:Preloading libraries
2021-04-05 03:23:15,304:INFO:Copying training dataset
2021-04-05 03:23:15,305:INFO:Copying test dataset
2021-04-05 03:23:15,305:INFO:Plot type: parameter
2021-04-05 03:23:15,320:INFO:Visual Rendered Successfully
2021-04-05 03:23:15,412:INFO:plot_model() succesfully completed......................................
2021-04-05 03:23:17,374:INFO:Initializing interpret_model()
2021-04-05 03:23:17,374:INFO:interpret_model(estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=1, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None, learning_rate=0.4,
                                max_delta_step=None, max_depth=8,
                                min_child_weight=4, missing=nan,
                                monotone_constraints=None, n_estimators=270,
                                n_jobs=-1, num_parallel...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=270,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=0.0005,
                                                       reg_lambda=0.15,
                                                       scale_pos_weight=5.2,
                                                       subsample=0.9,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=5.2, subsample=0.9,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), use_train_data=False, feature=None, kwargs={}, observation=None, plot=summary, save=False)
2021-04-05 03:23:17,374:INFO:Checking exceptions
2021-04-05 03:23:17,590:INFO:plot type: summary
2021-04-05 03:23:17,590:INFO:Creating TreeExplainer
2021-04-05 03:23:17,678:INFO:Compiling shap values
2021-04-05 03:23:18,293:INFO:Visual Rendered Successfully
2021-04-05 03:23:18,294:INFO:interpret_model() succesfully completed......................................
2021-04-05 03:23:18,397:INFO:Initializing automl()
2021-04-05 03:23:18,398:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-05 03:23:18,399:INFO:Model Selection Basis : CV Results on Training set
2021-04-05 03:23:18,406:INFO:Initializing create_model()
2021-04-05 03:23:18,406:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:23:18,406:INFO:Checking exceptions
2021-04-05 03:23:18,406:INFO:Importing libraries
2021-04-05 03:23:18,406:INFO:Copying training dataset
2021-04-05 03:23:18,407:INFO:Defining folds
2021-04-05 03:23:18,407:INFO:Declaring metric variables
2021-04-05 03:23:18,407:INFO:Importing untrained model
2021-04-05 03:23:18,407:INFO:Declaring custom model
2021-04-05 03:23:18,411:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-05 03:23:18,412:INFO:Cross validation set to False
2021-04-05 03:23:18,412:INFO:Fitting Model
2021-04-05 03:23:18,485:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:23:18,485:INFO:create_models() succesfully completed......................................
2021-04-05 03:23:18,573:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:23:18,573:INFO:automl() succesfully completed......................................
2021-04-05 03:23:18,589:INFO:Initializing predict_model()
2021-04-05 03:23:18,589:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:23:18,590:INFO:Checking exceptions
2021-04-05 03:23:18,590:INFO:Preloading libraries
2021-04-05 03:23:18,590:INFO:Preparing display monitor
2021-04-05 03:23:18,806:INFO:Initializing finalize_model()
2021-04-05 03:23:18,807:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-05 03:23:18,808:INFO:Finalizing PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:23:18,811:INFO:Initializing create_model()
2021-04-05 03:23:18,812:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:23:18,813:INFO:Checking exceptions
2021-04-05 03:23:18,813:INFO:Importing libraries
2021-04-05 03:23:18,814:INFO:Copying training dataset
2021-04-05 03:23:18,814:INFO:Defining folds
2021-04-05 03:23:18,815:INFO:Declaring metric variables
2021-04-05 03:23:18,815:INFO:Importing untrained model
2021-04-05 03:23:18,815:INFO:Declaring custom model
2021-04-05 03:23:18,819:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-05 03:23:18,819:INFO:Starting cross validation
2021-04-05 03:23:18,820:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:19,343:INFO:Calculating mean and std
2021-04-05 03:23:19,343:INFO:Creating metrics dataframe
2021-04-05 03:23:19,347:INFO:Finalizing model
2021-04-05 03:23:19,417:INFO:Uploading results into container
2021-04-05 03:23:19,417:INFO:Uploading model into container now
2021-04-05 03:23:19,417:INFO:create_model_container: 20
2021-04-05 03:23:19,417:INFO:master_model_container: 20
2021-04-05 03:23:19,417:INFO:display_container: 6
2021-04-05 03:23:19,419:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:23:19,419:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:19,496:INFO:Creating MLFlow logs
2021-04-05 03:23:19,499:INFO:Model: Gradient Boosting Regressor
2021-04-05 03:23:19,538:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:23:19,677:INFO:Initializing predict_model()
2021-04-05 03:23:19,678:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:23:19,678:INFO:Checking exceptions
2021-04-05 03:23:19,678:INFO:Preloading libraries
2021-04-05 03:23:20,040:INFO:create_model_container: 20
2021-04-05 03:23:20,040:INFO:master_model_container: 20
2021-04-05 03:23:20,040:INFO:display_container: 5
2021-04-05 03:23:20,043:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:23:20,045:INFO:finalize_model() succesfully completed......................................
2021-04-05 03:23:20,240:INFO:Initializing predict_model()
2021-04-05 03:23:20,240:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:23:20,240:INFO:Checking exceptions
2021-04-05 03:23:20,240:INFO:Preloading libraries
2021-04-05 03:23:20,241:INFO:Preparing display monitor
2021-04-05 03:23:20,408:INFO:Initializing predict_model()
2021-04-05 03:23:20,408:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:23:20,408:INFO:Checking exceptions
2021-04-05 03:23:20,409:INFO:Preloading libraries
2021-04-05 03:23:20,409:INFO:Preparing display monitor
2021-04-05 03:23:20,690:INFO:Initializing save_model()
2021-04-05 03:23:20,690:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), model_name=saved_models/best_2nd_model_to_predict_median_income_xgboost, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2021-04-05 03:23:20,691:INFO:Adding model into prep_pipe
2021-04-05 03:23:20,752:INFO:saved_models/best_2nd_model_to_predict_median_income_xgboost.pkl saved in current working directory
2021-04-05 03:23:20,771:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                                                                                     min_impurity_decrease=0.0,
                                                                                     min_impurity_split=None,
                                                                                     min_samples_leaf=1,
                                                                                     min_samples_split=2,
                                                                                     min_weight_fraction_leaf=0.0,
                                                                                     n_estimators=100,
                                                                                     n_iter_no_change=None,
                                                                                     presort='deprecated',
                                                                                     random_state=786,
                                                                                     subsample=1.0,
                                                                                     tol=0.0001,
                                                                                     validation_fraction=0.1,
                                                                                     verbose=0,
                                                                                     warm_start=False),
                                                 subsample=1.0, tol=0.0001,
                                                 validation_fraction=0.1,
                                                 verbose=0,
                                                 warm_start=False)]],
         verbose=False)
2021-04-05 03:23:20,771:INFO:save_model() succesfully completed......................................
2021-04-05 03:23:21,092:INFO:PyCaret Supervised Module
2021-04-05 03:23:21,092:INFO:ML Usecase: regression
2021-04-05 03:23:21,093:INFO:version 2.3.0
2021-04-05 03:23:21,093:INFO:Initializing setup()
2021-04-05 03:23:21,094:INFO:setup(target=Median income, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-05 03:23:21,096:INFO:Checking environment
2021-04-05 03:23:21,096:INFO:python_version: 3.9.1
2021-04-05 03:23:21,096:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-05 03:23:21,096:INFO:machine: AMD64
2021-04-05 03:23:21,096:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-05 03:23:21,098:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-05 03:23:21,099:INFO:Checking libraries
2021-04-05 03:23:21,099:INFO:pd==1.2.2
2021-04-05 03:23:21,099:INFO:numpy==1.19.5
2021-04-05 03:23:21,099:INFO:sklearn==0.23.2
2021-04-05 03:23:21,099:INFO:lightgbm==3.1.1
2021-04-05 03:23:21,101:WARNING:catboost not found
2021-04-05 03:23:21,101:INFO:xgboost==1.3.3
2021-04-05 03:23:21,102:INFO:mlflow==1.14.1
2021-04-05 03:23:21,102:INFO:Checking Exceptions
2021-04-05 03:23:21,102:INFO:Declaring global variables
2021-04-05 03:23:21,102:INFO:USI: c9dc
2021-04-05 03:23:21,102:INFO:pycaret_globals: {'fold_groups_param', 'X_test', 'display_container', '_available_plots', 'target_param', 'data_before_preprocess', 'USI', 'X_train', 'exp_name_log', 'transform_target_param', 'prep_pipe', 'fold_shuffle_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'fix_imbalance_method_param', 'X', '_all_models', '_all_metrics', '_ml_usecase', 'transform_target_method_param', 'pycaret_globals', 'imputation_regressor', 'create_model_container', 'y_train', 'n_jobs_param', 'seed', 'iterative_imputation_iters_param', 'y_test', 'y', 'experiment__', 'html_param', 'imputation_classifier', '_internal_pipeline', '_gpu_n_jobs_param', 'master_model_container', 'stratify_param', '_all_models_internal', 'logging_param', 'fix_imbalance_param', 'fold_param'}
2021-04-05 03:23:21,102:INFO:Preparing display monitor
2021-04-05 03:23:21,103:INFO:Preparing display monitor
2021-04-05 03:23:21,135:INFO:Importing libraries
2021-04-05 03:23:21,135:INFO:Copying data for preprocessing
2021-04-05 03:23:21,154:INFO:Declaring preprocessing parameters
2021-04-05 03:23:21,156:INFO:Creating preprocessing pipeline
2021-04-05 03:23:21,168:INFO:Preprocessing pipeline created successfully
2021-04-05 03:23:21,169:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-05 03:23:21,169:INFO:Creating global containers
2021-04-05 03:23:21,170:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-05 03:23:23,466:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-05 03:23:23,607:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-05 03:23:23,608:INFO:Creating grid variables
2021-04-05 03:23:23,626:INFO:Logging experiment in MLFlow
2021-04-05 03:23:23,630:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-05 03:23:23,631:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-05 03:23:23,773:INFO:SubProcess save_model() called ==================================
2021-04-05 03:23:23,784:INFO:Initializing save_model()
2021-04-05 03:23:23,785:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False, kwargs={})
2021-04-05 03:23:23,785:INFO:Adding model into prep_pipe
2021-04-05 03:23:23,786:WARNING:Only Model saved as it was a pipeline.
2021-04-05 03:23:23,805:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-05 03:23:23,811:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-05 03:23:23,811:INFO:save_model() succesfully completed......................................
2021-04-05 03:23:23,887:INFO:SubProcess save_model() end ==================================
2021-04-05 03:23:23,965:INFO:create_model_container: 0
2021-04-05 03:23:23,965:INFO:master_model_container: 0
2021-04-05 03:23:23,965:INFO:display_container: 1
2021-04-05 03:23:23,970:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-05 03:23:23,970:INFO:setup() succesfully completed......................................
2021-04-05 03:23:24,058:INFO:Initializing compare_models()
2021-04-05 03:23:24,058:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-05 03:23:24,059:INFO:Checking exceptions
2021-04-05 03:23:24,059:INFO:Preparing display monitor
2021-04-05 03:23:24,059:INFO:Preparing display monitor
2021-04-05 03:23:24,104:INFO:Initializing Linear Regression
2021-04-05 03:23:24,104:INFO:Total runtime is 9.373823801676433e-06 minutes
2021-04-05 03:23:24,122:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:24,123:INFO:Initializing create_model()
2021-04-05 03:23:24,123:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:24,123:INFO:Checking exceptions
2021-04-05 03:23:24,123:INFO:Importing libraries
2021-04-05 03:23:24,123:INFO:Copying training dataset
2021-04-05 03:23:24,125:INFO:Defining folds
2021-04-05 03:23:24,125:INFO:Declaring metric variables
2021-04-05 03:23:24,135:INFO:Importing untrained model
2021-04-05 03:23:24,151:INFO:Linear Regression Imported succesfully
2021-04-05 03:23:24,187:INFO:Starting cross validation
2021-04-05 03:23:24,188:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:24,419:INFO:Calculating mean and std
2021-04-05 03:23:24,421:INFO:Creating metrics dataframe
2021-04-05 03:23:24,429:INFO:Uploading results into container
2021-04-05 03:23:24,429:INFO:Uploading model into container now
2021-04-05 03:23:24,430:INFO:create_model_container: 1
2021-04-05 03:23:24,430:INFO:master_model_container: 1
2021-04-05 03:23:24,430:INFO:display_container: 2
2021-04-05 03:23:24,431:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-05 03:23:24,431:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:24,585:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:24,586:INFO:Creating metrics dataframe
2021-04-05 03:23:24,623:INFO:Initializing Lasso Regression
2021-04-05 03:23:24,624:INFO:Total runtime is 0.008665390809377034 minutes
2021-04-05 03:23:24,637:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:24,639:INFO:Initializing create_model()
2021-04-05 03:23:24,639:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:24,639:INFO:Checking exceptions
2021-04-05 03:23:24,640:INFO:Importing libraries
2021-04-05 03:23:24,640:INFO:Copying training dataset
2021-04-05 03:23:24,643:INFO:Defining folds
2021-04-05 03:23:24,643:INFO:Declaring metric variables
2021-04-05 03:23:24,656:INFO:Importing untrained model
2021-04-05 03:23:24,673:INFO:Lasso Regression Imported succesfully
2021-04-05 03:23:24,709:INFO:Starting cross validation
2021-04-05 03:23:24,711:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:24,823:INFO:Calculating mean and std
2021-04-05 03:23:24,825:INFO:Creating metrics dataframe
2021-04-05 03:23:24,834:INFO:Uploading results into container
2021-04-05 03:23:24,834:INFO:Uploading model into container now
2021-04-05 03:23:24,835:INFO:create_model_container: 2
2021-04-05 03:23:24,835:INFO:master_model_container: 2
2021-04-05 03:23:24,835:INFO:display_container: 2
2021-04-05 03:23:24,838:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-05 03:23:24,838:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:24,957:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:24,957:INFO:Creating metrics dataframe
2021-04-05 03:23:24,980:INFO:Initializing Ridge Regression
2021-04-05 03:23:24,981:INFO:Total runtime is 0.014629491170247396 minutes
2021-04-05 03:23:25,000:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:25,001:INFO:Initializing create_model()
2021-04-05 03:23:25,002:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:25,002:INFO:Checking exceptions
2021-04-05 03:23:25,002:INFO:Importing libraries
2021-04-05 03:23:25,002:INFO:Copying training dataset
2021-04-05 03:23:25,005:INFO:Defining folds
2021-04-05 03:23:25,005:INFO:Declaring metric variables
2021-04-05 03:23:25,023:INFO:Importing untrained model
2021-04-05 03:23:25,040:INFO:Ridge Regression Imported succesfully
2021-04-05 03:23:25,076:INFO:Starting cross validation
2021-04-05 03:23:25,079:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:25,188:INFO:Calculating mean and std
2021-04-05 03:23:25,189:INFO:Creating metrics dataframe
2021-04-05 03:23:25,197:INFO:Uploading results into container
2021-04-05 03:23:25,197:INFO:Uploading model into container now
2021-04-05 03:23:25,197:INFO:create_model_container: 3
2021-04-05 03:23:25,197:INFO:master_model_container: 3
2021-04-05 03:23:25,198:INFO:display_container: 2
2021-04-05 03:23:25,199:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:23:25,199:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:25,295:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:25,295:INFO:Creating metrics dataframe
2021-04-05 03:23:25,315:INFO:Initializing Elastic Net
2021-04-05 03:23:25,315:INFO:Total runtime is 0.020189019044240315 minutes
2021-04-05 03:23:25,324:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:25,324:INFO:Initializing create_model()
2021-04-05 03:23:25,325:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:25,325:INFO:Checking exceptions
2021-04-05 03:23:25,325:INFO:Importing libraries
2021-04-05 03:23:25,325:INFO:Copying training dataset
2021-04-05 03:23:25,326:INFO:Defining folds
2021-04-05 03:23:25,328:INFO:Declaring metric variables
2021-04-05 03:23:25,343:INFO:Importing untrained model
2021-04-05 03:23:25,357:INFO:Elastic Net Imported succesfully
2021-04-05 03:23:25,383:INFO:Starting cross validation
2021-04-05 03:23:25,384:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:25,547:INFO:Calculating mean and std
2021-04-05 03:23:25,558:INFO:Creating metrics dataframe
2021-04-05 03:23:25,573:INFO:Uploading results into container
2021-04-05 03:23:25,573:INFO:Uploading model into container now
2021-04-05 03:23:25,574:INFO:create_model_container: 4
2021-04-05 03:23:25,574:INFO:master_model_container: 4
2021-04-05 03:23:25,574:INFO:display_container: 2
2021-04-05 03:23:25,576:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-05 03:23:25,577:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:25,785:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:25,785:INFO:Creating metrics dataframe
2021-04-05 03:23:25,831:INFO:Initializing Least Angle Regression
2021-04-05 03:23:25,832:INFO:Total runtime is 0.028795758883158364 minutes
2021-04-05 03:23:25,853:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:25,854:INFO:Initializing create_model()
2021-04-05 03:23:25,854:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:25,855:INFO:Checking exceptions
2021-04-05 03:23:25,855:INFO:Importing libraries
2021-04-05 03:23:25,855:INFO:Copying training dataset
2021-04-05 03:23:25,855:INFO:Defining folds
2021-04-05 03:23:25,856:INFO:Declaring metric variables
2021-04-05 03:23:25,871:INFO:Importing untrained model
2021-04-05 03:23:25,892:INFO:Least Angle Regression Imported succesfully
2021-04-05 03:23:25,924:INFO:Starting cross validation
2021-04-05 03:23:25,925:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:27,856:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-05 03:23:27,856:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-05 03:23:27,857:INFO:Initializing create_model()
2021-04-05 03:23:27,857:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:27,857:INFO:Checking exceptions
2021-04-05 03:23:27,857:INFO:Importing libraries
2021-04-05 03:23:27,857:INFO:Copying training dataset
2021-04-05 03:23:27,858:INFO:Defining folds
2021-04-05 03:23:27,858:INFO:Declaring metric variables
2021-04-05 03:23:27,867:INFO:Importing untrained model
2021-04-05 03:23:27,879:INFO:Least Angle Regression Imported succesfully
2021-04-05 03:23:27,904:INFO:Starting cross validation
2021-04-05 03:23:27,905:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:34,010:ERROR:create_model() for lar raised an exception:
2021-04-05 03:23:34,010:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-05 03:23:34,011:INFO:Initializing Lasso Least Angle Regression
2021-04-05 03:23:34,011:INFO:Total runtime is 0.16512700716654458 minutes
2021-04-05 03:23:34,020:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:34,020:INFO:Initializing create_model()
2021-04-05 03:23:34,020:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:34,020:INFO:Checking exceptions
2021-04-05 03:23:34,021:INFO:Importing libraries
2021-04-05 03:23:34,021:INFO:Copying training dataset
2021-04-05 03:23:34,023:INFO:Defining folds
2021-04-05 03:23:34,023:INFO:Declaring metric variables
2021-04-05 03:23:34,034:INFO:Importing untrained model
2021-04-05 03:23:34,044:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-05 03:23:34,068:INFO:Starting cross validation
2021-04-05 03:23:34,070:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:41,667:INFO:Calculating mean and std
2021-04-05 03:23:41,669:INFO:Creating metrics dataframe
2021-04-05 03:23:41,680:INFO:Uploading results into container
2021-04-05 03:23:41,681:INFO:Uploading model into container now
2021-04-05 03:23:41,681:INFO:create_model_container: 5
2021-04-05 03:23:41,682:INFO:master_model_container: 5
2021-04-05 03:23:41,682:INFO:display_container: 2
2021-04-05 03:23:41,685:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-05 03:23:41,686:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:41,818:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:41,818:INFO:Creating metrics dataframe
2021-04-05 03:23:41,851:INFO:Initializing Orthogonal Matching Pursuit
2021-04-05 03:23:41,852:INFO:Total runtime is 0.2957991480827331 minutes
2021-04-05 03:23:41,865:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:41,866:INFO:Initializing create_model()
2021-04-05 03:23:41,866:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:41,866:INFO:Checking exceptions
2021-04-05 03:23:41,866:INFO:Importing libraries
2021-04-05 03:23:41,866:INFO:Copying training dataset
2021-04-05 03:23:41,867:INFO:Defining folds
2021-04-05 03:23:41,868:INFO:Declaring metric variables
2021-04-05 03:23:41,883:INFO:Importing untrained model
2021-04-05 03:23:41,899:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-05 03:23:41,930:INFO:Starting cross validation
2021-04-05 03:23:41,931:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:42,026:INFO:Calculating mean and std
2021-04-05 03:23:42,029:INFO:Creating metrics dataframe
2021-04-05 03:23:42,033:INFO:Uploading results into container
2021-04-05 03:23:42,033:INFO:Uploading model into container now
2021-04-05 03:23:42,034:INFO:create_model_container: 6
2021-04-05 03:23:42,034:INFO:master_model_container: 6
2021-04-05 03:23:42,034:INFO:display_container: 2
2021-04-05 03:23:42,036:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-05 03:23:42,036:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:42,133:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:42,133:INFO:Creating metrics dataframe
2021-04-05 03:23:42,157:INFO:Initializing Bayesian Ridge
2021-04-05 03:23:42,157:INFO:Total runtime is 0.30089814662933345 minutes
2021-04-05 03:23:42,175:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:42,177:INFO:Initializing create_model()
2021-04-05 03:23:42,177:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:42,177:INFO:Checking exceptions
2021-04-05 03:23:42,178:INFO:Importing libraries
2021-04-05 03:23:42,178:INFO:Copying training dataset
2021-04-05 03:23:42,181:INFO:Defining folds
2021-04-05 03:23:42,181:INFO:Declaring metric variables
2021-04-05 03:23:42,201:INFO:Importing untrained model
2021-04-05 03:23:42,214:INFO:Bayesian Ridge Imported succesfully
2021-04-05 03:23:42,242:INFO:Starting cross validation
2021-04-05 03:23:42,243:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:42,328:INFO:Calculating mean and std
2021-04-05 03:23:42,329:INFO:Creating metrics dataframe
2021-04-05 03:23:42,335:INFO:Uploading results into container
2021-04-05 03:23:42,335:INFO:Uploading model into container now
2021-04-05 03:23:42,336:INFO:create_model_container: 7
2021-04-05 03:23:42,336:INFO:master_model_container: 7
2021-04-05 03:23:42,336:INFO:display_container: 2
2021-04-05 03:23:42,337:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:23:42,338:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:42,439:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:42,440:INFO:Creating metrics dataframe
2021-04-05 03:23:42,463:INFO:Initializing Passive Aggressive Regressor
2021-04-05 03:23:42,463:INFO:Total runtime is 0.30599405368169147 minutes
2021-04-05 03:23:42,475:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:42,476:INFO:Initializing create_model()
2021-04-05 03:23:42,476:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:42,476:INFO:Checking exceptions
2021-04-05 03:23:42,477:INFO:Importing libraries
2021-04-05 03:23:42,477:INFO:Copying training dataset
2021-04-05 03:23:42,480:INFO:Defining folds
2021-04-05 03:23:42,481:INFO:Declaring metric variables
2021-04-05 03:23:42,491:INFO:Importing untrained model
2021-04-05 03:23:42,505:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-05 03:23:42,531:INFO:Starting cross validation
2021-04-05 03:23:42,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:42,654:INFO:Calculating mean and std
2021-04-05 03:23:42,656:INFO:Creating metrics dataframe
2021-04-05 03:23:42,666:INFO:Uploading results into container
2021-04-05 03:23:42,666:INFO:Uploading model into container now
2021-04-05 03:23:42,667:INFO:create_model_container: 8
2021-04-05 03:23:42,668:INFO:master_model_container: 8
2021-04-05 03:23:42,668:INFO:display_container: 2
2021-04-05 03:23:42,669:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:23:42,670:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:42,823:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:42,823:INFO:Creating metrics dataframe
2021-04-05 03:23:42,867:INFO:Initializing Huber Regressor
2021-04-05 03:23:42,867:INFO:Total runtime is 0.3127251227696736 minutes
2021-04-05 03:23:42,885:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:42,885:INFO:Initializing create_model()
2021-04-05 03:23:42,886:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:42,886:INFO:Checking exceptions
2021-04-05 03:23:42,886:INFO:Importing libraries
2021-04-05 03:23:42,886:INFO:Copying training dataset
2021-04-05 03:23:42,887:INFO:Defining folds
2021-04-05 03:23:42,888:INFO:Declaring metric variables
2021-04-05 03:23:42,901:INFO:Importing untrained model
2021-04-05 03:23:42,915:INFO:Huber Regressor Imported succesfully
2021-04-05 03:23:42,942:INFO:Starting cross validation
2021-04-05 03:23:42,943:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:43,210:INFO:Calculating mean and std
2021-04-05 03:23:43,211:INFO:Creating metrics dataframe
2021-04-05 03:23:43,218:INFO:Uploading results into container
2021-04-05 03:23:43,218:INFO:Uploading model into container now
2021-04-05 03:23:43,218:INFO:create_model_container: 9
2021-04-05 03:23:43,218:INFO:master_model_container: 9
2021-04-05 03:23:43,218:INFO:display_container: 2
2021-04-05 03:23:43,219:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-05 03:23:43,219:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:43,318:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:43,318:INFO:Creating metrics dataframe
2021-04-05 03:23:43,342:INFO:Initializing K Neighbors Regressor
2021-04-05 03:23:43,342:INFO:Total runtime is 0.32064768870671584 minutes
2021-04-05 03:23:43,353:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:43,353:INFO:Initializing create_model()
2021-04-05 03:23:43,353:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:43,354:INFO:Checking exceptions
2021-04-05 03:23:43,354:INFO:Importing libraries
2021-04-05 03:23:43,354:INFO:Copying training dataset
2021-04-05 03:23:43,355:INFO:Defining folds
2021-04-05 03:23:43,355:INFO:Declaring metric variables
2021-04-05 03:23:43,368:INFO:Importing untrained model
2021-04-05 03:23:43,378:INFO:K Neighbors Regressor Imported succesfully
2021-04-05 03:23:43,400:INFO:Starting cross validation
2021-04-05 03:23:43,400:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:43,593:INFO:Calculating mean and std
2021-04-05 03:23:43,594:INFO:Creating metrics dataframe
2021-04-05 03:23:43,606:INFO:Uploading results into container
2021-04-05 03:23:43,606:INFO:Uploading model into container now
2021-04-05 03:23:43,606:INFO:create_model_container: 10
2021-04-05 03:23:43,607:INFO:master_model_container: 10
2021-04-05 03:23:43,607:INFO:display_container: 2
2021-04-05 03:23:43,608:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-05 03:23:43,609:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:43,786:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:43,786:INFO:Creating metrics dataframe
2021-04-05 03:23:43,841:INFO:Initializing Decision Tree Regressor
2021-04-05 03:23:43,841:INFO:Total runtime is 0.3289637446403503 minutes
2021-04-05 03:23:43,866:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:43,866:INFO:Initializing create_model()
2021-04-05 03:23:43,868:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:43,868:INFO:Checking exceptions
2021-04-05 03:23:43,868:INFO:Importing libraries
2021-04-05 03:23:43,868:INFO:Copying training dataset
2021-04-05 03:23:43,870:INFO:Defining folds
2021-04-05 03:23:43,871:INFO:Declaring metric variables
2021-04-05 03:23:43,892:INFO:Importing untrained model
2021-04-05 03:23:43,925:INFO:Decision Tree Regressor Imported succesfully
2021-04-05 03:23:43,982:INFO:Starting cross validation
2021-04-05 03:23:43,983:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:44,181:INFO:Calculating mean and std
2021-04-05 03:23:44,183:INFO:Creating metrics dataframe
2021-04-05 03:23:44,195:INFO:Uploading results into container
2021-04-05 03:23:44,196:INFO:Uploading model into container now
2021-04-05 03:23:44,198:INFO:create_model_container: 11
2021-04-05 03:23:44,198:INFO:master_model_container: 11
2021-04-05 03:23:44,198:INFO:display_container: 2
2021-04-05 03:23:44,202:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-05 03:23:44,202:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:44,357:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:44,357:INFO:Creating metrics dataframe
2021-04-05 03:23:44,389:INFO:Initializing Random Forest Regressor
2021-04-05 03:23:44,389:INFO:Total runtime is 0.33809308608373 minutes
2021-04-05 03:23:44,403:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:44,403:INFO:Initializing create_model()
2021-04-05 03:23:44,404:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:44,404:INFO:Checking exceptions
2021-04-05 03:23:44,404:INFO:Importing libraries
2021-04-05 03:23:44,404:INFO:Copying training dataset
2021-04-05 03:23:44,404:INFO:Defining folds
2021-04-05 03:23:44,405:INFO:Declaring metric variables
2021-04-05 03:23:44,420:INFO:Importing untrained model
2021-04-05 03:23:44,434:INFO:Random Forest Regressor Imported succesfully
2021-04-05 03:23:44,461:INFO:Starting cross validation
2021-04-05 03:23:44,462:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:45,643:INFO:Calculating mean and std
2021-04-05 03:23:45,646:INFO:Creating metrics dataframe
2021-04-05 03:23:45,653:INFO:Uploading results into container
2021-04-05 03:23:45,653:INFO:Uploading model into container now
2021-04-05 03:23:45,653:INFO:create_model_container: 12
2021-04-05 03:23:45,654:INFO:master_model_container: 12
2021-04-05 03:23:45,654:INFO:display_container: 2
2021-04-05 03:23:45,658:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-05 03:23:45,659:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:45,807:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:45,807:INFO:Creating metrics dataframe
2021-04-05 03:23:45,847:INFO:Initializing Extra Trees Regressor
2021-04-05 03:23:45,848:INFO:Total runtime is 0.36240048408508296 minutes
2021-04-05 03:23:45,865:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:45,866:INFO:Initializing create_model()
2021-04-05 03:23:45,866:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:45,866:INFO:Checking exceptions
2021-04-05 03:23:45,866:INFO:Importing libraries
2021-04-05 03:23:45,866:INFO:Copying training dataset
2021-04-05 03:23:45,868:INFO:Defining folds
2021-04-05 03:23:45,868:INFO:Declaring metric variables
2021-04-05 03:23:45,885:INFO:Importing untrained model
2021-04-05 03:23:45,901:INFO:Extra Trees Regressor Imported succesfully
2021-04-05 03:23:45,939:INFO:Starting cross validation
2021-04-05 03:23:45,939:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:46,904:INFO:Calculating mean and std
2021-04-05 03:23:46,906:INFO:Creating metrics dataframe
2021-04-05 03:23:46,911:INFO:Uploading results into container
2021-04-05 03:23:46,912:INFO:Uploading model into container now
2021-04-05 03:23:46,912:INFO:create_model_container: 13
2021-04-05 03:23:46,912:INFO:master_model_container: 13
2021-04-05 03:23:46,912:INFO:display_container: 2
2021-04-05 03:23:46,914:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-05 03:23:46,914:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:47,010:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:47,010:INFO:Creating metrics dataframe
2021-04-05 03:23:47,044:INFO:Initializing AdaBoost Regressor
2021-04-05 03:23:47,044:INFO:Total runtime is 0.38234308958053587 minutes
2021-04-05 03:23:47,057:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:47,057:INFO:Initializing create_model()
2021-04-05 03:23:47,057:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:47,057:INFO:Checking exceptions
2021-04-05 03:23:47,057:INFO:Importing libraries
2021-04-05 03:23:47,057:INFO:Copying training dataset
2021-04-05 03:23:47,060:INFO:Defining folds
2021-04-05 03:23:47,062:INFO:Declaring metric variables
2021-04-05 03:23:47,076:INFO:Importing untrained model
2021-04-05 03:23:47,088:INFO:AdaBoost Regressor Imported succesfully
2021-04-05 03:23:47,114:INFO:Starting cross validation
2021-04-05 03:23:47,115:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:47,492:INFO:Calculating mean and std
2021-04-05 03:23:47,493:INFO:Creating metrics dataframe
2021-04-05 03:23:47,502:INFO:Uploading results into container
2021-04-05 03:23:47,503:INFO:Uploading model into container now
2021-04-05 03:23:47,503:INFO:create_model_container: 14
2021-04-05 03:23:47,503:INFO:master_model_container: 14
2021-04-05 03:23:47,503:INFO:display_container: 2
2021-04-05 03:23:47,503:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-05 03:23:47,503:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:47,616:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:47,616:INFO:Creating metrics dataframe
2021-04-05 03:23:47,642:INFO:Initializing Gradient Boosting Regressor
2021-04-05 03:23:47,643:INFO:Total runtime is 0.3923208355903625 minutes
2021-04-05 03:23:47,655:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:47,656:INFO:Initializing create_model()
2021-04-05 03:23:47,656:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:47,656:INFO:Checking exceptions
2021-04-05 03:23:47,656:INFO:Importing libraries
2021-04-05 03:23:47,656:INFO:Copying training dataset
2021-04-05 03:23:47,658:INFO:Defining folds
2021-04-05 03:23:47,658:INFO:Declaring metric variables
2021-04-05 03:23:47,675:INFO:Importing untrained model
2021-04-05 03:23:47,689:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-05 03:23:47,720:INFO:Starting cross validation
2021-04-05 03:23:47,721:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:48,120:INFO:Calculating mean and std
2021-04-05 03:23:48,121:INFO:Creating metrics dataframe
2021-04-05 03:23:48,127:INFO:Uploading results into container
2021-04-05 03:23:48,127:INFO:Uploading model into container now
2021-04-05 03:23:48,129:INFO:create_model_container: 15
2021-04-05 03:23:48,129:INFO:master_model_container: 15
2021-04-05 03:23:48,129:INFO:display_container: 2
2021-04-05 03:23:48,132:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:23:48,132:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:48,232:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:48,232:INFO:Creating metrics dataframe
2021-04-05 03:23:48,258:INFO:Initializing Extreme Gradient Boosting
2021-04-05 03:23:48,258:INFO:Total runtime is 0.40257375240325927 minutes
2021-04-05 03:23:48,272:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:48,272:INFO:Initializing create_model()
2021-04-05 03:23:48,272:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:48,272:INFO:Checking exceptions
2021-04-05 03:23:48,272:INFO:Importing libraries
2021-04-05 03:23:48,273:INFO:Copying training dataset
2021-04-05 03:23:48,274:INFO:Defining folds
2021-04-05 03:23:48,274:INFO:Declaring metric variables
2021-04-05 03:23:48,289:INFO:Importing untrained model
2021-04-05 03:23:48,303:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-05 03:23:48,335:INFO:Starting cross validation
2021-04-05 03:23:48,336:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:50,921:INFO:Calculating mean and std
2021-04-05 03:23:50,923:INFO:Creating metrics dataframe
2021-04-05 03:23:50,933:INFO:Uploading results into container
2021-04-05 03:23:50,933:INFO:Uploading model into container now
2021-04-05 03:23:50,933:INFO:create_model_container: 16
2021-04-05 03:23:50,934:INFO:master_model_container: 16
2021-04-05 03:23:50,934:INFO:display_container: 2
2021-04-05 03:23:50,940:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-05 03:23:50,940:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:51,056:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:51,056:INFO:Creating metrics dataframe
2021-04-05 03:23:51,080:INFO:Initializing Light Gradient Boosting Machine
2021-04-05 03:23:51,080:INFO:Total runtime is 0.4496114333470662 minutes
2021-04-05 03:23:51,092:INFO:SubProcess create_model() called ==================================
2021-04-05 03:23:51,092:INFO:Initializing create_model()
2021-04-05 03:23:51,092:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503CD3370>, kwargs={})
2021-04-05 03:23:51,092:INFO:Checking exceptions
2021-04-05 03:23:51,093:INFO:Importing libraries
2021-04-05 03:23:51,093:INFO:Copying training dataset
2021-04-05 03:23:51,094:INFO:Defining folds
2021-04-05 03:23:51,095:INFO:Declaring metric variables
2021-04-05 03:23:51,106:INFO:Importing untrained model
2021-04-05 03:23:51,116:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-05 03:23:51,139:INFO:Starting cross validation
2021-04-05 03:23:51,140:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:23:51,717:INFO:Calculating mean and std
2021-04-05 03:23:51,719:INFO:Creating metrics dataframe
2021-04-05 03:23:51,727:INFO:Uploading results into container
2021-04-05 03:23:51,727:INFO:Uploading model into container now
2021-04-05 03:23:51,728:INFO:create_model_container: 17
2021-04-05 03:23:51,728:INFO:master_model_container: 17
2021-04-05 03:23:51,729:INFO:display_container: 2
2021-04-05 03:23:51,732:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-05 03:23:51,733:INFO:create_model() succesfully completed......................................
2021-04-05 03:23:51,859:INFO:SubProcess create_model() end ==================================
2021-04-05 03:23:51,859:INFO:Creating metrics dataframe
2021-04-05 03:23:51,920:INFO:Initializing create_model()
2021-04-05 03:23:51,920:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:23:51,920:INFO:Checking exceptions
2021-04-05 03:23:51,920:INFO:Importing libraries
2021-04-05 03:23:51,920:INFO:Copying training dataset
2021-04-05 03:23:51,921:INFO:Defining folds
2021-04-05 03:23:51,921:INFO:Declaring metric variables
2021-04-05 03:23:51,921:INFO:Importing untrained model
2021-04-05 03:23:51,921:INFO:Declaring custom model
2021-04-05 03:23:51,923:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-05 03:23:51,923:INFO:Cross validation set to False
2021-04-05 03:23:51,923:INFO:Fitting Model
2021-04-05 03:23:51,988:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:23:51,988:INFO:create_models() succesfully completed......................................
2021-04-05 03:23:52,075:INFO:Creating MLFlow logs
2021-04-05 03:23:52,090:INFO:Model: Gradient Boosting Regressor
2021-04-05 03:23:52,131:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:23:52,270:INFO:Initializing predict_model()
2021-04-05 03:23:52,270:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:23:52,270:INFO:Checking exceptions
2021-04-05 03:23:52,270:INFO:Preloading libraries
2021-04-05 03:23:52,553:INFO:Creating MLFlow logs
2021-04-05 03:23:52,566:INFO:Model: Extreme Gradient Boosting
2021-04-05 03:23:52,614:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-05 03:23:52,925:INFO:Creating MLFlow logs
2021-04-05 03:23:52,945:INFO:Model: Random Forest Regressor
2021-04-05 03:23:52,997:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-05 03:23:53,364:INFO:Creating MLFlow logs
2021-04-05 03:23:53,390:INFO:Model: Decision Tree Regressor
2021-04-05 03:23:53,460:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-05 03:23:54,099:INFO:Creating MLFlow logs
2021-04-05 03:23:54,121:INFO:Model: Extra Trees Regressor
2021-04-05 03:23:54,174:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-05 03:23:54,618:INFO:Creating MLFlow logs
2021-04-05 03:23:54,634:INFO:Model: Light Gradient Boosting Machine
2021-04-05 03:23:54,689:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-05 03:23:55,090:INFO:Creating MLFlow logs
2021-04-05 03:23:55,120:INFO:Model: AdaBoost Regressor
2021-04-05 03:23:55,180:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-05 03:23:55,566:INFO:Creating MLFlow logs
2021-04-05 03:23:55,612:INFO:Model: Huber Regressor
2021-04-05 03:23:55,776:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-05 03:23:56,203:INFO:Creating MLFlow logs
2021-04-05 03:23:56,225:INFO:Model: K Neighbors Regressor
2021-04-05 03:23:56,278:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-05 03:23:56,726:INFO:Creating MLFlow logs
2021-04-05 03:23:56,746:INFO:Model: Ridge Regression
2021-04-05 03:23:56,798:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-05 03:23:57,153:INFO:Creating MLFlow logs
2021-04-05 03:23:57,169:INFO:Model: Linear Regression
2021-04-05 03:23:57,226:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-05 03:23:57,531:INFO:Creating MLFlow logs
2021-04-05 03:23:57,550:INFO:Model: Bayesian Ridge
2021-04-05 03:23:57,622:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-05 03:23:58,181:INFO:Creating MLFlow logs
2021-04-05 03:23:58,197:INFO:Model: Orthogonal Matching Pursuit
2021-04-05 03:23:58,264:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-05 03:23:58,558:INFO:Creating MLFlow logs
2021-04-05 03:23:58,585:INFO:Model: Lasso Regression
2021-04-05 03:23:58,748:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-05 03:23:59,109:INFO:Creating MLFlow logs
2021-04-05 03:23:59,129:INFO:Model: Elastic Net
2021-04-05 03:23:59,205:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-05 03:23:59,622:INFO:Creating MLFlow logs
2021-04-05 03:23:59,643:INFO:Model: Least Angle Regression
2021-04-05 03:23:59,707:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-05 03:24:00,090:INFO:Creating MLFlow logs
2021-04-05 03:24:00,105:INFO:Model: Passive Aggressive Regressor
2021-04-05 03:24:00,147:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:24:00,689:INFO:create_model_container: 17
2021-04-05 03:24:00,690:INFO:master_model_container: 17
2021-04-05 03:24:00,690:INFO:display_container: 2
2021-04-05 03:24:00,693:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:24:00,693:INFO:compare_models() succesfully completed......................................
2021-04-05 03:24:00,706:INFO:Initializing create_model()
2021-04-05 03:24:00,706:INFO:create_model(estimator=gbr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-05 03:24:00,707:INFO:Checking exceptions
2021-04-05 03:24:00,707:INFO:Preparing display monitor
2021-04-05 03:24:00,758:INFO:Importing libraries
2021-04-05 03:24:00,758:INFO:Copying training dataset
2021-04-05 03:24:00,761:INFO:Defining folds
2021-04-05 03:24:00,761:INFO:Declaring metric variables
2021-04-05 03:24:00,786:INFO:Importing untrained model
2021-04-05 03:24:00,808:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-05 03:24:00,851:INFO:Starting cross validation
2021-04-05 03:24:00,852:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:01,393:INFO:Calculating mean and std
2021-04-05 03:24:01,395:INFO:Creating metrics dataframe
2021-04-05 03:24:01,417:INFO:Finalizing model
2021-04-05 03:24:01,498:INFO:Creating MLFlow logs
2021-04-05 03:24:01,513:INFO:Model: Gradient Boosting Regressor
2021-04-05 03:24:01,552:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:24:01,680:INFO:Initializing predict_model()
2021-04-05 03:24:01,680:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:24:01,680:INFO:Checking exceptions
2021-04-05 03:24:01,680:INFO:Preloading libraries
2021-04-05 03:24:01,957:INFO:Uploading results into container
2021-04-05 03:24:01,957:INFO:Uploading model into container now
2021-04-05 03:24:01,978:INFO:create_model_container: 18
2021-04-05 03:24:01,979:INFO:master_model_container: 18
2021-04-05 03:24:01,979:INFO:display_container: 3
2021-04-05 03:24:01,982:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:24:01,982:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:02,101:INFO:Initializing tune_model()
2021-04-05 03:24:02,102:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-05 03:24:02,102:INFO:Checking exceptions
2021-04-05 03:24:02,103:INFO:Preparing display monitor
2021-04-05 03:24:02,158:INFO:Copying training dataset
2021-04-05 03:24:02,161:INFO:Checking base model
2021-04-05 03:24:02,162:INFO:Base model : Gradient Boosting Regressor
2021-04-05 03:24:02,191:INFO:Declaring metric variables
2021-04-05 03:24:02,208:INFO:Defining Hyperparameters
2021-04-05 03:24:02,319:INFO:Tuning with n_jobs=-1
2021-04-05 03:24:02,319:INFO:Initializing RandomizedSearchCV
2021-04-05 03:24:05,322:INFO:best_params: {'actual_estimator__subsample': 0.85, 'actual_estimator__n_estimators': 50, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 1, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 5, 'actual_estimator__learning_rate': 0.1}
2021-04-05 03:24:05,324:INFO:Hyperparameter search completed
2021-04-05 03:24:05,325:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:05,330:INFO:Initializing create_model()
2021-04-05 03:24:05,331:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E504258880>, kwargs={'subsample': 0.85, 'n_estimators': 50, 'min_samples_split': 7, 'min_samples_leaf': 1, 'min_impurity_decrease': 0.05, 'max_features': 'log2', 'max_depth': 5, 'learning_rate': 0.1})
2021-04-05 03:24:05,331:INFO:Checking exceptions
2021-04-05 03:24:05,331:INFO:Importing libraries
2021-04-05 03:24:05,331:INFO:Copying training dataset
2021-04-05 03:24:05,334:INFO:Defining folds
2021-04-05 03:24:05,334:INFO:Declaring metric variables
2021-04-05 03:24:05,355:INFO:Importing untrained model
2021-04-05 03:24:05,356:INFO:Declaring custom model
2021-04-05 03:24:05,386:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-05 03:24:05,427:INFO:Starting cross validation
2021-04-05 03:24:05,430:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:05,642:INFO:Calculating mean and std
2021-04-05 03:24:05,643:INFO:Creating metrics dataframe
2021-04-05 03:24:05,666:INFO:Finalizing model
2021-04-05 03:24:05,708:INFO:Uploading results into container
2021-04-05 03:24:05,708:INFO:Uploading model into container now
2021-04-05 03:24:05,708:INFO:create_model_container: 19
2021-04-05 03:24:05,708:INFO:master_model_container: 19
2021-04-05 03:24:05,709:INFO:display_container: 4
2021-04-05 03:24:05,711:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:24:05,711:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:05,810:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:05,810:INFO:Creating MLFlow logs
2021-04-05 03:24:05,826:INFO:Model: Gradient Boosting Regressor
2021-04-05 03:24:05,883:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 5, 'max_features': 'log2', 'max_leaf_nodes': None, 'min_impurity_decrease': 0.05, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 7, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 50, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 0.85, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:24:06,025:INFO:Initializing predict_model()
2021-04-05 03:24:06,025:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:24:06,025:INFO:Checking exceptions
2021-04-05 03:24:06,025:INFO:Preloading libraries
2021-04-05 03:24:06,301:INFO:create_model_container: 19
2021-04-05 03:24:06,301:INFO:master_model_container: 19
2021-04-05 03:24:06,301:INFO:display_container: 4
2021-04-05 03:24:06,304:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:24:06,304:INFO:tune_model() succesfully completed......................................
2021-04-05 03:24:06,419:INFO:Initializing plot_model()
2021-04-05 03:24:06,419:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:24:06,420:INFO:Checking exceptions
2021-04-05 03:24:06,420:INFO:Preparing display monitor
2021-04-05 03:24:06,433:INFO:Preloading libraries
2021-04-05 03:24:06,449:INFO:Copying training dataset
2021-04-05 03:24:06,449:INFO:Copying test dataset
2021-04-05 03:24:06,450:INFO:Plot type: residuals
2021-04-05 03:24:06,505:INFO:Fitting Model
2021-04-05 03:24:06,545:INFO:Scoring test/hold-out set
2021-04-05 03:24:07,190:INFO:Visual Rendered Successfully
2021-04-05 03:24:07,287:INFO:plot_model() succesfully completed......................................
2021-04-05 03:24:07,305:INFO:Initializing plot_model()
2021-04-05 03:24:07,306:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:24:07,307:INFO:Checking exceptions
2021-04-05 03:24:07,307:INFO:Preparing display monitor
2021-04-05 03:24:07,319:INFO:Preloading libraries
2021-04-05 03:24:07,336:INFO:Copying training dataset
2021-04-05 03:24:07,338:INFO:Copying test dataset
2021-04-05 03:24:07,339:INFO:Plot type: error
2021-04-05 03:24:07,344:INFO:Fitting Model
2021-04-05 03:24:07,350:INFO:Scoring test/hold-out set
2021-04-05 03:24:07,717:INFO:Visual Rendered Successfully
2021-04-05 03:24:07,837:INFO:plot_model() succesfully completed......................................
2021-04-05 03:24:07,860:INFO:Initializing plot_model()
2021-04-05 03:24:07,860:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:24:07,861:INFO:Checking exceptions
2021-04-05 03:24:07,861:INFO:Preparing display monitor
2021-04-05 03:24:07,874:INFO:Preloading libraries
2021-04-05 03:24:07,884:INFO:Copying training dataset
2021-04-05 03:24:07,885:INFO:Copying test dataset
2021-04-05 03:24:07,887:INFO:Plot type: feature
2021-04-05 03:24:07,890:WARNING:No coef_ found. Trying feature_importances_
2021-04-05 03:24:08,124:INFO:Visual Rendered Successfully
2021-04-05 03:24:08,253:INFO:plot_model() succesfully completed......................................
2021-04-05 03:24:08,287:INFO:Initializing evaluate_model()
2021-04-05 03:24:08,287:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-05 03:24:08,327:INFO:Initializing plot_model()
2021-04-05 03:24:08,327:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=5,
                                max_features='log2', max_leaf_nodes=None,
                                min_impurity_decrease=0.05,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=7,
                                min_weight_fraction_leaf=0.0, n_estimators=50,
                                n_iter_no_change=None,
                                power_transformer_meth...
                                                                    min_impurity_decrease=0.05,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=7,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=50,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:24:08,327:INFO:Checking exceptions
2021-04-05 03:24:08,327:INFO:Preparing display monitor
2021-04-05 03:24:08,340:INFO:Preloading libraries
2021-04-05 03:24:08,349:INFO:Copying training dataset
2021-04-05 03:24:08,349:INFO:Copying test dataset
2021-04-05 03:24:08,350:INFO:Plot type: parameter
2021-04-05 03:24:08,366:INFO:Visual Rendered Successfully
2021-04-05 03:24:08,472:INFO:plot_model() succesfully completed......................................
2021-04-05 03:24:08,482:INFO:Initializing automl()
2021-04-05 03:24:08,483:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-05 03:24:08,483:INFO:Model Selection Basis : CV Results on Training set
2021-04-05 03:24:08,491:INFO:Initializing create_model()
2021-04-05 03:24:08,491:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:24:08,492:INFO:Checking exceptions
2021-04-05 03:24:08,492:INFO:Importing libraries
2021-04-05 03:24:08,492:INFO:Copying training dataset
2021-04-05 03:24:08,493:INFO:Defining folds
2021-04-05 03:24:08,493:INFO:Declaring metric variables
2021-04-05 03:24:08,493:INFO:Importing untrained model
2021-04-05 03:24:08,493:INFO:Declaring custom model
2021-04-05 03:24:08,497:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-05 03:24:08,497:INFO:Cross validation set to False
2021-04-05 03:24:08,498:INFO:Fitting Model
2021-04-05 03:24:08,577:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:24:08,577:INFO:create_models() succesfully completed......................................
2021-04-05 03:24:08,661:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:24:08,661:INFO:automl() succesfully completed......................................
2021-04-05 03:24:08,672:INFO:Initializing predict_model()
2021-04-05 03:24:08,672:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:24:08,673:INFO:Checking exceptions
2021-04-05 03:24:08,673:INFO:Preloading libraries
2021-04-05 03:24:08,673:INFO:Preparing display monitor
2021-04-05 03:24:08,811:INFO:Initializing finalize_model()
2021-04-05 03:24:08,812:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-05 03:24:08,817:INFO:Finalizing PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:24:08,822:INFO:Initializing create_model()
2021-04-05 03:24:08,823:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:24:08,823:INFO:Checking exceptions
2021-04-05 03:24:08,823:INFO:Importing libraries
2021-04-05 03:24:08,823:INFO:Copying training dataset
2021-04-05 03:24:08,824:INFO:Defining folds
2021-04-05 03:24:08,824:INFO:Declaring metric variables
2021-04-05 03:24:08,824:INFO:Importing untrained model
2021-04-05 03:24:08,824:INFO:Declaring custom model
2021-04-05 03:24:08,830:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-05 03:24:08,830:INFO:Starting cross validation
2021-04-05 03:24:08,831:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:09,305:INFO:Calculating mean and std
2021-04-05 03:24:09,306:INFO:Creating metrics dataframe
2021-04-05 03:24:09,309:INFO:Finalizing model
2021-04-05 03:24:09,397:INFO:Uploading results into container
2021-04-05 03:24:09,397:INFO:Uploading model into container now
2021-04-05 03:24:09,398:INFO:create_model_container: 20
2021-04-05 03:24:09,398:INFO:master_model_container: 20
2021-04-05 03:24:09,398:INFO:display_container: 6
2021-04-05 03:24:09,400:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:24:09,400:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:09,490:INFO:Creating MLFlow logs
2021-04-05 03:24:09,494:INFO:Model: Gradient Boosting Regressor
2021-04-05 03:24:09,532:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:24:09,682:INFO:Initializing predict_model()
2021-04-05 03:24:09,682:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:24:09,682:INFO:Checking exceptions
2021-04-05 03:24:09,682:INFO:Preloading libraries
2021-04-05 03:24:10,037:INFO:create_model_container: 20
2021-04-05 03:24:10,037:INFO:master_model_container: 20
2021-04-05 03:24:10,037:INFO:display_container: 5
2021-04-05 03:24:10,040:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:24:10,042:INFO:finalize_model() succesfully completed......................................
2021-04-05 03:24:10,185:INFO:Initializing predict_model()
2021-04-05 03:24:10,186:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:24:10,186:INFO:Checking exceptions
2021-04-05 03:24:10,187:INFO:Preloading libraries
2021-04-05 03:24:10,187:INFO:Preparing display monitor
2021-04-05 03:24:10,341:INFO:Initializing predict_model()
2021-04-05 03:24:10,342:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:24:10,342:INFO:Checking exceptions
2021-04-05 03:24:10,342:INFO:Preloading libraries
2021-04-05 03:24:10,342:INFO:Preparing display monitor
2021-04-05 03:24:10,616:INFO:Initializing save_model()
2021-04-05 03:24:10,617:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), model_name=saved_models/best_model_to_predict_median_income_gbr, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                ('dummy', Dummify(target='Median income')),
                ('fix_perfect', Remove_100(target='Median income')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Median income',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2021-04-05 03:24:10,618:INFO:Adding model into prep_pipe
2021-04-05 03:24:10,659:INFO:saved_models/best_model_to_predict_median_income_gbr.pkl saved in current working directory
2021-04-05 03:24:10,671:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='Median income',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_str...
                                                                                     min_impurity_decrease=0.0,
                                                                                     min_impurity_split=None,
                                                                                     min_samples_leaf=1,
                                                                                     min_samples_split=2,
                                                                                     min_weight_fraction_leaf=0.0,
                                                                                     n_estimators=100,
                                                                                     n_iter_no_change=None,
                                                                                     presort='deprecated',
                                                                                     random_state=786,
                                                                                     subsample=1.0,
                                                                                     tol=0.0001,
                                                                                     validation_fraction=0.1,
                                                                                     verbose=0,
                                                                                     warm_start=False),
                                                 subsample=1.0, tol=0.0001,
                                                 validation_fraction=0.1,
                                                 verbose=0,
                                                 warm_start=False)]],
         verbose=False)
2021-04-05 03:24:10,672:INFO:save_model() succesfully completed......................................
2021-04-05 03:24:10,858:INFO:PyCaret Supervised Module
2021-04-05 03:24:10,858:INFO:ML Usecase: regression
2021-04-05 03:24:10,859:INFO:version 2.3.0
2021-04-05 03:24:10,859:INFO:Initializing setup()
2021-04-05 03:24:10,859:INFO:setup(target=highschool_graduation_rate, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-05 03:24:10,859:INFO:Checking environment
2021-04-05 03:24:10,859:INFO:python_version: 3.9.1
2021-04-05 03:24:10,859:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-05 03:24:10,859:INFO:machine: AMD64
2021-04-05 03:24:10,859:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-05 03:24:10,861:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-05 03:24:10,862:INFO:Checking libraries
2021-04-05 03:24:10,862:INFO:pd==1.2.2
2021-04-05 03:24:10,862:INFO:numpy==1.19.5
2021-04-05 03:24:10,862:INFO:sklearn==0.23.2
2021-04-05 03:24:10,862:INFO:lightgbm==3.1.1
2021-04-05 03:24:10,865:WARNING:catboost not found
2021-04-05 03:24:10,865:INFO:xgboost==1.3.3
2021-04-05 03:24:10,865:INFO:mlflow==1.14.1
2021-04-05 03:24:10,865:INFO:Checking Exceptions
2021-04-05 03:24:10,866:INFO:Declaring global variables
2021-04-05 03:24:10,866:INFO:USI: 3792
2021-04-05 03:24:10,866:INFO:pycaret_globals: {'fold_groups_param', 'X_test', 'display_container', '_available_plots', 'target_param', 'data_before_preprocess', 'USI', 'X_train', 'exp_name_log', 'transform_target_param', 'prep_pipe', 'fold_shuffle_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'fix_imbalance_method_param', 'X', '_all_models', '_all_metrics', '_ml_usecase', 'transform_target_method_param', 'pycaret_globals', 'imputation_regressor', 'create_model_container', 'y_train', 'n_jobs_param', 'seed', 'iterative_imputation_iters_param', 'y_test', 'y', 'experiment__', 'html_param', 'imputation_classifier', '_internal_pipeline', '_gpu_n_jobs_param', 'master_model_container', 'stratify_param', '_all_models_internal', 'logging_param', 'fix_imbalance_param', 'fold_param'}
2021-04-05 03:24:10,866:INFO:Preparing display monitor
2021-04-05 03:24:10,866:INFO:Preparing display monitor
2021-04-05 03:24:10,888:INFO:Importing libraries
2021-04-05 03:24:10,888:INFO:Copying data for preprocessing
2021-04-05 03:24:10,904:INFO:Declaring preprocessing parameters
2021-04-05 03:24:10,905:INFO:Creating preprocessing pipeline
2021-04-05 03:24:10,917:INFO:Preprocessing pipeline created successfully
2021-04-05 03:24:10,918:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-05 03:24:10,918:INFO:Creating global containers
2021-04-05 03:24:10,919:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-05 03:24:13,200:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-05 03:24:13,326:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-05 03:24:13,327:INFO:Creating grid variables
2021-04-05 03:24:13,342:INFO:Logging experiment in MLFlow
2021-04-05 03:24:13,345:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-05 03:24:13,346:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-05 03:24:13,509:INFO:SubProcess save_model() called ==================================
2021-04-05 03:24:13,522:INFO:Initializing save_model()
2021-04-05 03:24:13,522:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False, kwargs={})
2021-04-05 03:24:13,523:INFO:Adding model into prep_pipe
2021-04-05 03:24:13,525:WARNING:Only Model saved as it was a pipeline.
2021-04-05 03:24:13,546:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-05 03:24:13,552:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-05 03:24:13,552:INFO:save_model() succesfully completed......................................
2021-04-05 03:24:13,628:INFO:SubProcess save_model() end ==================================
2021-04-05 03:24:13,727:INFO:create_model_container: 0
2021-04-05 03:24:13,727:INFO:master_model_container: 0
2021-04-05 03:24:13,727:INFO:display_container: 1
2021-04-05 03:24:13,739:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-05 03:24:13,739:INFO:setup() succesfully completed......................................
2021-04-05 03:24:13,842:INFO:Initializing compare_models()
2021-04-05 03:24:13,843:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-05 03:24:13,843:INFO:Checking exceptions
2021-04-05 03:24:13,843:INFO:Preparing display monitor
2021-04-05 03:24:13,843:INFO:Preparing display monitor
2021-04-05 03:24:13,885:INFO:Initializing Linear Regression
2021-04-05 03:24:13,885:INFO:Total runtime is 0.0 minutes
2021-04-05 03:24:13,899:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:13,900:INFO:Initializing create_model()
2021-04-05 03:24:13,900:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:13,900:INFO:Checking exceptions
2021-04-05 03:24:13,900:INFO:Importing libraries
2021-04-05 03:24:13,900:INFO:Copying training dataset
2021-04-05 03:24:13,902:INFO:Defining folds
2021-04-05 03:24:13,902:INFO:Declaring metric variables
2021-04-05 03:24:13,915:INFO:Importing untrained model
2021-04-05 03:24:13,926:INFO:Linear Regression Imported succesfully
2021-04-05 03:24:13,959:INFO:Starting cross validation
2021-04-05 03:24:13,959:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:14,181:INFO:Calculating mean and std
2021-04-05 03:24:14,184:INFO:Creating metrics dataframe
2021-04-05 03:24:14,196:INFO:Uploading results into container
2021-04-05 03:24:14,196:INFO:Uploading model into container now
2021-04-05 03:24:14,197:INFO:create_model_container: 1
2021-04-05 03:24:14,197:INFO:master_model_container: 1
2021-04-05 03:24:14,197:INFO:display_container: 2
2021-04-05 03:24:14,199:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-05 03:24:14,199:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:14,373:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:14,373:INFO:Creating metrics dataframe
2021-04-05 03:24:14,405:INFO:Initializing Lasso Regression
2021-04-05 03:24:14,405:INFO:Total runtime is 0.00867552359898885 minutes
2021-04-05 03:24:14,424:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:14,424:INFO:Initializing create_model()
2021-04-05 03:24:14,425:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:14,426:INFO:Checking exceptions
2021-04-05 03:24:14,427:INFO:Importing libraries
2021-04-05 03:24:14,427:INFO:Copying training dataset
2021-04-05 03:24:14,434:INFO:Defining folds
2021-04-05 03:24:14,435:INFO:Declaring metric variables
2021-04-05 03:24:14,453:INFO:Importing untrained model
2021-04-05 03:24:14,473:INFO:Lasso Regression Imported succesfully
2021-04-05 03:24:14,517:INFO:Starting cross validation
2021-04-05 03:24:14,519:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:14,637:INFO:Calculating mean and std
2021-04-05 03:24:14,638:INFO:Creating metrics dataframe
2021-04-05 03:24:14,644:INFO:Uploading results into container
2021-04-05 03:24:14,644:INFO:Uploading model into container now
2021-04-05 03:24:14,645:INFO:create_model_container: 2
2021-04-05 03:24:14,645:INFO:master_model_container: 2
2021-04-05 03:24:14,646:INFO:display_container: 2
2021-04-05 03:24:14,650:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-05 03:24:14,650:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:14,769:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:14,769:INFO:Creating metrics dataframe
2021-04-05 03:24:14,803:INFO:Initializing Ridge Regression
2021-04-05 03:24:14,803:INFO:Total runtime is 0.0153084397315979 minutes
2021-04-05 03:24:14,823:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:14,824:INFO:Initializing create_model()
2021-04-05 03:24:14,824:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:14,825:INFO:Checking exceptions
2021-04-05 03:24:14,825:INFO:Importing libraries
2021-04-05 03:24:14,825:INFO:Copying training dataset
2021-04-05 03:24:14,826:INFO:Defining folds
2021-04-05 03:24:14,827:INFO:Declaring metric variables
2021-04-05 03:24:14,847:INFO:Importing untrained model
2021-04-05 03:24:14,868:INFO:Ridge Regression Imported succesfully
2021-04-05 03:24:14,916:INFO:Starting cross validation
2021-04-05 03:24:14,917:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:15,041:INFO:Calculating mean and std
2021-04-05 03:24:15,042:INFO:Creating metrics dataframe
2021-04-05 03:24:15,054:INFO:Uploading results into container
2021-04-05 03:24:15,055:INFO:Uploading model into container now
2021-04-05 03:24:15,055:INFO:create_model_container: 3
2021-04-05 03:24:15,055:INFO:master_model_container: 3
2021-04-05 03:24:15,055:INFO:display_container: 2
2021-04-05 03:24:15,057:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:24:15,058:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:15,159:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:15,159:INFO:Creating metrics dataframe
2021-04-05 03:24:15,195:INFO:Initializing Elastic Net
2021-04-05 03:24:15,195:INFO:Total runtime is 0.02184552748998006 minutes
2021-04-05 03:24:15,209:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:15,210:INFO:Initializing create_model()
2021-04-05 03:24:15,210:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:15,210:INFO:Checking exceptions
2021-04-05 03:24:15,210:INFO:Importing libraries
2021-04-05 03:24:15,210:INFO:Copying training dataset
2021-04-05 03:24:15,214:INFO:Defining folds
2021-04-05 03:24:15,215:INFO:Declaring metric variables
2021-04-05 03:24:15,231:INFO:Importing untrained model
2021-04-05 03:24:15,242:INFO:Elastic Net Imported succesfully
2021-04-05 03:24:15,261:INFO:Starting cross validation
2021-04-05 03:24:15,263:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:15,494:INFO:Calculating mean and std
2021-04-05 03:24:15,497:INFO:Creating metrics dataframe
2021-04-05 03:24:15,504:INFO:Uploading results into container
2021-04-05 03:24:15,504:INFO:Uploading model into container now
2021-04-05 03:24:15,505:INFO:create_model_container: 4
2021-04-05 03:24:15,505:INFO:master_model_container: 4
2021-04-05 03:24:15,505:INFO:display_container: 2
2021-04-05 03:24:15,506:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-05 03:24:15,506:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:15,640:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:15,640:INFO:Creating metrics dataframe
2021-04-05 03:24:15,673:INFO:Initializing Least Angle Regression
2021-04-05 03:24:15,673:INFO:Total runtime is 0.02981172402699788 minutes
2021-04-05 03:24:15,688:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:15,689:INFO:Initializing create_model()
2021-04-05 03:24:15,689:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:15,689:INFO:Checking exceptions
2021-04-05 03:24:15,689:INFO:Importing libraries
2021-04-05 03:24:15,689:INFO:Copying training dataset
2021-04-05 03:24:15,690:INFO:Defining folds
2021-04-05 03:24:15,690:INFO:Declaring metric variables
2021-04-05 03:24:15,704:INFO:Importing untrained model
2021-04-05 03:24:15,722:INFO:Least Angle Regression Imported succesfully
2021-04-05 03:24:15,743:INFO:Starting cross validation
2021-04-05 03:24:15,744:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:17,995:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-05 03:24:17,995:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-05 03:24:17,995:INFO:Initializing create_model()
2021-04-05 03:24:17,996:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:17,996:INFO:Checking exceptions
2021-04-05 03:24:17,996:INFO:Importing libraries
2021-04-05 03:24:17,996:INFO:Copying training dataset
2021-04-05 03:24:17,996:INFO:Defining folds
2021-04-05 03:24:17,997:INFO:Declaring metric variables
2021-04-05 03:24:18,005:INFO:Importing untrained model
2021-04-05 03:24:18,017:INFO:Least Angle Regression Imported succesfully
2021-04-05 03:24:18,044:INFO:Starting cross validation
2021-04-05 03:24:18,045:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:23,813:ERROR:create_model() for lar raised an exception:
2021-04-05 03:24:23,814:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-05 03:24:23,814:INFO:Initializing Lasso Least Angle Regression
2021-04-05 03:24:23,814:INFO:Total runtime is 0.16548756758371988 minutes
2021-04-05 03:24:23,824:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:23,825:INFO:Initializing create_model()
2021-04-05 03:24:23,825:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:23,825:INFO:Checking exceptions
2021-04-05 03:24:23,826:INFO:Importing libraries
2021-04-05 03:24:23,826:INFO:Copying training dataset
2021-04-05 03:24:23,826:INFO:Defining folds
2021-04-05 03:24:23,827:INFO:Declaring metric variables
2021-04-05 03:24:23,837:INFO:Importing untrained model
2021-04-05 03:24:23,847:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-05 03:24:23,874:INFO:Starting cross validation
2021-04-05 03:24:23,875:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:29,298:INFO:Calculating mean and std
2021-04-05 03:24:29,300:INFO:Creating metrics dataframe
2021-04-05 03:24:29,306:INFO:Uploading results into container
2021-04-05 03:24:29,306:INFO:Uploading model into container now
2021-04-05 03:24:29,306:INFO:create_model_container: 5
2021-04-05 03:24:29,306:INFO:master_model_container: 5
2021-04-05 03:24:29,306:INFO:display_container: 2
2021-04-05 03:24:29,309:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-05 03:24:29,309:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:29,410:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:29,410:INFO:Creating metrics dataframe
2021-04-05 03:24:29,427:INFO:Initializing Orthogonal Matching Pursuit
2021-04-05 03:24:29,427:INFO:Total runtime is 0.2590306560198466 minutes
2021-04-05 03:24:29,437:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:29,438:INFO:Initializing create_model()
2021-04-05 03:24:29,439:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:29,439:INFO:Checking exceptions
2021-04-05 03:24:29,439:INFO:Importing libraries
2021-04-05 03:24:29,439:INFO:Copying training dataset
2021-04-05 03:24:29,439:INFO:Defining folds
2021-04-05 03:24:29,439:INFO:Declaring metric variables
2021-04-05 03:24:29,450:INFO:Importing untrained model
2021-04-05 03:24:29,462:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-05 03:24:29,488:INFO:Starting cross validation
2021-04-05 03:24:29,488:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:29,577:INFO:Calculating mean and std
2021-04-05 03:24:29,579:INFO:Creating metrics dataframe
2021-04-05 03:24:29,582:INFO:Uploading results into container
2021-04-05 03:24:29,583:INFO:Uploading model into container now
2021-04-05 03:24:29,583:INFO:create_model_container: 6
2021-04-05 03:24:29,583:INFO:master_model_container: 6
2021-04-05 03:24:29,583:INFO:display_container: 2
2021-04-05 03:24:29,585:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-05 03:24:29,585:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:29,683:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:29,683:INFO:Creating metrics dataframe
2021-04-05 03:24:29,705:INFO:Initializing Bayesian Ridge
2021-04-05 03:24:29,705:INFO:Total runtime is 0.2636729041735331 minutes
2021-04-05 03:24:29,721:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:29,722:INFO:Initializing create_model()
2021-04-05 03:24:29,722:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:29,723:INFO:Checking exceptions
2021-04-05 03:24:29,723:INFO:Importing libraries
2021-04-05 03:24:29,723:INFO:Copying training dataset
2021-04-05 03:24:29,725:INFO:Defining folds
2021-04-05 03:24:29,725:INFO:Declaring metric variables
2021-04-05 03:24:29,737:INFO:Importing untrained model
2021-04-05 03:24:29,750:INFO:Bayesian Ridge Imported succesfully
2021-04-05 03:24:29,777:INFO:Starting cross validation
2021-04-05 03:24:29,778:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:29,873:INFO:Calculating mean and std
2021-04-05 03:24:29,874:INFO:Creating metrics dataframe
2021-04-05 03:24:29,882:INFO:Uploading results into container
2021-04-05 03:24:29,883:INFO:Uploading model into container now
2021-04-05 03:24:29,883:INFO:create_model_container: 7
2021-04-05 03:24:29,883:INFO:master_model_container: 7
2021-04-05 03:24:29,883:INFO:display_container: 2
2021-04-05 03:24:29,885:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:24:29,885:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:29,982:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:29,983:INFO:Creating metrics dataframe
2021-04-05 03:24:30,009:INFO:Initializing Passive Aggressive Regressor
2021-04-05 03:24:30,009:INFO:Total runtime is 0.26873089869817096 minutes
2021-04-05 03:24:30,028:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:30,028:INFO:Initializing create_model()
2021-04-05 03:24:30,028:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:30,028:INFO:Checking exceptions
2021-04-05 03:24:30,028:INFO:Importing libraries
2021-04-05 03:24:30,028:INFO:Copying training dataset
2021-04-05 03:24:30,030:INFO:Defining folds
2021-04-05 03:24:30,031:INFO:Declaring metric variables
2021-04-05 03:24:30,042:INFO:Importing untrained model
2021-04-05 03:24:30,057:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-05 03:24:30,087:INFO:Starting cross validation
2021-04-05 03:24:30,088:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:30,199:INFO:Calculating mean and std
2021-04-05 03:24:30,201:INFO:Creating metrics dataframe
2021-04-05 03:24:30,205:INFO:Uploading results into container
2021-04-05 03:24:30,205:INFO:Uploading model into container now
2021-04-05 03:24:30,206:INFO:create_model_container: 8
2021-04-05 03:24:30,206:INFO:master_model_container: 8
2021-04-05 03:24:30,206:INFO:display_container: 2
2021-04-05 03:24:30,207:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:24:30,207:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:30,304:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:30,304:INFO:Creating metrics dataframe
2021-04-05 03:24:30,332:INFO:Initializing Huber Regressor
2021-04-05 03:24:30,332:INFO:Total runtime is 0.2741261124610901 minutes
2021-04-05 03:24:30,348:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:30,349:INFO:Initializing create_model()
2021-04-05 03:24:30,349:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:30,349:INFO:Checking exceptions
2021-04-05 03:24:30,349:INFO:Importing libraries
2021-04-05 03:24:30,349:INFO:Copying training dataset
2021-04-05 03:24:30,351:INFO:Defining folds
2021-04-05 03:24:30,351:INFO:Declaring metric variables
2021-04-05 03:24:30,360:INFO:Importing untrained model
2021-04-05 03:24:30,372:INFO:Huber Regressor Imported succesfully
2021-04-05 03:24:30,399:INFO:Starting cross validation
2021-04-05 03:24:30,400:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:30,721:INFO:Calculating mean and std
2021-04-05 03:24:30,723:INFO:Creating metrics dataframe
2021-04-05 03:24:30,732:INFO:Uploading results into container
2021-04-05 03:24:30,732:INFO:Uploading model into container now
2021-04-05 03:24:30,732:INFO:create_model_container: 9
2021-04-05 03:24:30,733:INFO:master_model_container: 9
2021-04-05 03:24:30,733:INFO:display_container: 2
2021-04-05 03:24:30,735:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-05 03:24:30,735:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:30,829:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:30,829:INFO:Creating metrics dataframe
2021-04-05 03:24:30,860:INFO:Initializing K Neighbors Regressor
2021-04-05 03:24:30,861:INFO:Total runtime is 0.2829427202542623 minutes
2021-04-05 03:24:30,875:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:30,875:INFO:Initializing create_model()
2021-04-05 03:24:30,875:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:30,875:INFO:Checking exceptions
2021-04-05 03:24:30,875:INFO:Importing libraries
2021-04-05 03:24:30,875:INFO:Copying training dataset
2021-04-05 03:24:30,877:INFO:Defining folds
2021-04-05 03:24:30,877:INFO:Declaring metric variables
2021-04-05 03:24:30,893:INFO:Importing untrained model
2021-04-05 03:24:30,904:INFO:K Neighbors Regressor Imported succesfully
2021-04-05 03:24:30,929:INFO:Starting cross validation
2021-04-05 03:24:30,930:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:31,046:INFO:Calculating mean and std
2021-04-05 03:24:31,047:INFO:Creating metrics dataframe
2021-04-05 03:24:31,053:INFO:Uploading results into container
2021-04-05 03:24:31,053:INFO:Uploading model into container now
2021-04-05 03:24:31,054:INFO:create_model_container: 10
2021-04-05 03:24:31,054:INFO:master_model_container: 10
2021-04-05 03:24:31,054:INFO:display_container: 2
2021-04-05 03:24:31,055:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-05 03:24:31,055:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:31,148:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:31,149:INFO:Creating metrics dataframe
2021-04-05 03:24:31,185:INFO:Initializing Decision Tree Regressor
2021-04-05 03:24:31,186:INFO:Total runtime is 0.2883489767710368 minutes
2021-04-05 03:24:31,199:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:31,200:INFO:Initializing create_model()
2021-04-05 03:24:31,200:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:31,200:INFO:Checking exceptions
2021-04-05 03:24:31,200:INFO:Importing libraries
2021-04-05 03:24:31,200:INFO:Copying training dataset
2021-04-05 03:24:31,202:INFO:Defining folds
2021-04-05 03:24:31,202:INFO:Declaring metric variables
2021-04-05 03:24:31,215:INFO:Importing untrained model
2021-04-05 03:24:31,235:INFO:Decision Tree Regressor Imported succesfully
2021-04-05 03:24:31,254:INFO:Starting cross validation
2021-04-05 03:24:31,256:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:31,352:INFO:Calculating mean and std
2021-04-05 03:24:31,354:INFO:Creating metrics dataframe
2021-04-05 03:24:31,363:INFO:Uploading results into container
2021-04-05 03:24:31,364:INFO:Uploading model into container now
2021-04-05 03:24:31,364:INFO:create_model_container: 11
2021-04-05 03:24:31,364:INFO:master_model_container: 11
2021-04-05 03:24:31,364:INFO:display_container: 2
2021-04-05 03:24:31,367:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-05 03:24:31,367:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:31,461:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:31,461:INFO:Creating metrics dataframe
2021-04-05 03:24:31,495:INFO:Initializing Random Forest Regressor
2021-04-05 03:24:31,495:INFO:Total runtime is 0.2934986750284831 minutes
2021-04-05 03:24:31,506:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:31,507:INFO:Initializing create_model()
2021-04-05 03:24:31,507:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:31,507:INFO:Checking exceptions
2021-04-05 03:24:31,507:INFO:Importing libraries
2021-04-05 03:24:31,507:INFO:Copying training dataset
2021-04-05 03:24:31,508:INFO:Defining folds
2021-04-05 03:24:31,508:INFO:Declaring metric variables
2021-04-05 03:24:31,520:INFO:Importing untrained model
2021-04-05 03:24:31,532:INFO:Random Forest Regressor Imported succesfully
2021-04-05 03:24:31,558:INFO:Starting cross validation
2021-04-05 03:24:31,559:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:32,689:INFO:Calculating mean and std
2021-04-05 03:24:32,690:INFO:Creating metrics dataframe
2021-04-05 03:24:32,694:INFO:Uploading results into container
2021-04-05 03:24:32,694:INFO:Uploading model into container now
2021-04-05 03:24:32,694:INFO:create_model_container: 12
2021-04-05 03:24:32,694:INFO:master_model_container: 12
2021-04-05 03:24:32,694:INFO:display_container: 2
2021-04-05 03:24:32,696:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-05 03:24:32,696:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:32,768:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:32,768:INFO:Creating metrics dataframe
2021-04-05 03:24:32,790:INFO:Initializing Extra Trees Regressor
2021-04-05 03:24:32,790:INFO:Total runtime is 0.3150830348332723 minutes
2021-04-05 03:24:32,799:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:32,800:INFO:Initializing create_model()
2021-04-05 03:24:32,800:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:32,800:INFO:Checking exceptions
2021-04-05 03:24:32,800:INFO:Importing libraries
2021-04-05 03:24:32,801:INFO:Copying training dataset
2021-04-05 03:24:32,801:INFO:Defining folds
2021-04-05 03:24:32,802:INFO:Declaring metric variables
2021-04-05 03:24:32,810:INFO:Importing untrained model
2021-04-05 03:24:32,821:INFO:Extra Trees Regressor Imported succesfully
2021-04-05 03:24:32,847:INFO:Starting cross validation
2021-04-05 03:24:32,849:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:33,574:INFO:Calculating mean and std
2021-04-05 03:24:33,575:INFO:Creating metrics dataframe
2021-04-05 03:24:33,580:INFO:Uploading results into container
2021-04-05 03:24:33,580:INFO:Uploading model into container now
2021-04-05 03:24:33,580:INFO:create_model_container: 13
2021-04-05 03:24:33,581:INFO:master_model_container: 13
2021-04-05 03:24:33,581:INFO:display_container: 2
2021-04-05 03:24:33,584:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-05 03:24:33,584:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:33,675:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:33,675:INFO:Creating metrics dataframe
2021-04-05 03:24:33,696:INFO:Initializing AdaBoost Regressor
2021-04-05 03:24:33,696:INFO:Total runtime is 0.33019207715988164 minutes
2021-04-05 03:24:33,704:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:33,705:INFO:Initializing create_model()
2021-04-05 03:24:33,705:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:33,705:INFO:Checking exceptions
2021-04-05 03:24:33,705:INFO:Importing libraries
2021-04-05 03:24:33,705:INFO:Copying training dataset
2021-04-05 03:24:33,707:INFO:Defining folds
2021-04-05 03:24:33,707:INFO:Declaring metric variables
2021-04-05 03:24:33,716:INFO:Importing untrained model
2021-04-05 03:24:33,727:INFO:AdaBoost Regressor Imported succesfully
2021-04-05 03:24:33,753:INFO:Starting cross validation
2021-04-05 03:24:33,754:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:34,206:INFO:Calculating mean and std
2021-04-05 03:24:34,207:INFO:Creating metrics dataframe
2021-04-05 03:24:34,213:INFO:Uploading results into container
2021-04-05 03:24:34,213:INFO:Uploading model into container now
2021-04-05 03:24:34,213:INFO:create_model_container: 14
2021-04-05 03:24:34,213:INFO:master_model_container: 14
2021-04-05 03:24:34,214:INFO:display_container: 2
2021-04-05 03:24:34,214:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-05 03:24:34,214:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:34,291:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:34,292:INFO:Creating metrics dataframe
2021-04-05 03:24:34,314:INFO:Initializing Gradient Boosting Regressor
2021-04-05 03:24:34,314:INFO:Total runtime is 0.3404813170433045 minutes
2021-04-05 03:24:34,324:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:34,324:INFO:Initializing create_model()
2021-04-05 03:24:34,325:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:34,325:INFO:Checking exceptions
2021-04-05 03:24:34,325:INFO:Importing libraries
2021-04-05 03:24:34,325:INFO:Copying training dataset
2021-04-05 03:24:34,326:INFO:Defining folds
2021-04-05 03:24:34,326:INFO:Declaring metric variables
2021-04-05 03:24:34,336:INFO:Importing untrained model
2021-04-05 03:24:34,350:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-05 03:24:34,373:INFO:Starting cross validation
2021-04-05 03:24:34,373:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:34,682:INFO:Calculating mean and std
2021-04-05 03:24:34,683:INFO:Creating metrics dataframe
2021-04-05 03:24:34,689:INFO:Uploading results into container
2021-04-05 03:24:34,689:INFO:Uploading model into container now
2021-04-05 03:24:34,689:INFO:create_model_container: 15
2021-04-05 03:24:34,690:INFO:master_model_container: 15
2021-04-05 03:24:34,690:INFO:display_container: 2
2021-04-05 03:24:34,692:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:24:34,692:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:34,795:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:34,795:INFO:Creating metrics dataframe
2021-04-05 03:24:34,823:INFO:Initializing Extreme Gradient Boosting
2021-04-05 03:24:34,823:INFO:Total runtime is 0.3489777326583863 minutes
2021-04-05 03:24:34,832:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:34,833:INFO:Initializing create_model()
2021-04-05 03:24:34,833:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:34,833:INFO:Checking exceptions
2021-04-05 03:24:34,833:INFO:Importing libraries
2021-04-05 03:24:34,833:INFO:Copying training dataset
2021-04-05 03:24:34,834:INFO:Defining folds
2021-04-05 03:24:34,834:INFO:Declaring metric variables
2021-04-05 03:24:34,843:INFO:Importing untrained model
2021-04-05 03:24:34,857:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-05 03:24:34,886:INFO:Starting cross validation
2021-04-05 03:24:34,887:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:37,227:INFO:Calculating mean and std
2021-04-05 03:24:37,229:INFO:Creating metrics dataframe
2021-04-05 03:24:37,240:INFO:Uploading results into container
2021-04-05 03:24:37,240:INFO:Uploading model into container now
2021-04-05 03:24:37,240:INFO:create_model_container: 16
2021-04-05 03:24:37,241:INFO:master_model_container: 16
2021-04-05 03:24:37,241:INFO:display_container: 2
2021-04-05 03:24:37,247:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-05 03:24:37,248:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:37,365:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:37,365:INFO:Creating metrics dataframe
2021-04-05 03:24:37,386:INFO:Initializing Light Gradient Boosting Machine
2021-04-05 03:24:37,386:INFO:Total runtime is 0.39168583552042646 minutes
2021-04-05 03:24:37,395:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:37,396:INFO:Initializing create_model()
2021-04-05 03:24:37,396:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E5045BC760>, kwargs={})
2021-04-05 03:24:37,396:INFO:Checking exceptions
2021-04-05 03:24:37,396:INFO:Importing libraries
2021-04-05 03:24:37,396:INFO:Copying training dataset
2021-04-05 03:24:37,397:INFO:Defining folds
2021-04-05 03:24:37,397:INFO:Declaring metric variables
2021-04-05 03:24:37,406:INFO:Importing untrained model
2021-04-05 03:24:37,418:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-05 03:24:37,442:INFO:Starting cross validation
2021-04-05 03:24:37,443:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:38,101:INFO:Calculating mean and std
2021-04-05 03:24:38,102:INFO:Creating metrics dataframe
2021-04-05 03:24:38,111:INFO:Uploading results into container
2021-04-05 03:24:38,111:INFO:Uploading model into container now
2021-04-05 03:24:38,111:INFO:create_model_container: 17
2021-04-05 03:24:38,111:INFO:master_model_container: 17
2021-04-05 03:24:38,111:INFO:display_container: 2
2021-04-05 03:24:38,115:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-05 03:24:38,115:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:38,235:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:38,235:INFO:Creating metrics dataframe
2021-04-05 03:24:38,278:INFO:Initializing create_model()
2021-04-05 03:24:38,278:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:24:38,279:INFO:Checking exceptions
2021-04-05 03:24:38,279:INFO:Importing libraries
2021-04-05 03:24:38,279:INFO:Copying training dataset
2021-04-05 03:24:38,280:INFO:Defining folds
2021-04-05 03:24:38,280:INFO:Declaring metric variables
2021-04-05 03:24:38,280:INFO:Importing untrained model
2021-04-05 03:24:38,280:INFO:Declaring custom model
2021-04-05 03:24:38,281:INFO:Ridge Regression Imported succesfully
2021-04-05 03:24:38,281:INFO:Cross validation set to False
2021-04-05 03:24:38,281:INFO:Fitting Model
2021-04-05 03:24:38,287:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:24:38,287:INFO:create_models() succesfully completed......................................
2021-04-05 03:24:38,378:INFO:Creating MLFlow logs
2021-04-05 03:24:38,393:INFO:Model: Ridge Regression
2021-04-05 03:24:38,444:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-05 03:24:38,543:INFO:Initializing predict_model()
2021-04-05 03:24:38,543:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:24:38,543:INFO:Checking exceptions
2021-04-05 03:24:38,543:INFO:Preloading libraries
2021-04-05 03:24:38,771:INFO:Creating MLFlow logs
2021-04-05 03:24:38,784:INFO:Model: Bayesian Ridge
2021-04-05 03:24:38,828:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-05 03:24:39,058:INFO:Creating MLFlow logs
2021-04-05 03:24:39,070:INFO:Model: Linear Regression
2021-04-05 03:24:39,120:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-05 03:24:39,378:INFO:Creating MLFlow logs
2021-04-05 03:24:39,392:INFO:Model: Huber Regressor
2021-04-05 03:24:39,448:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-05 03:24:39,723:INFO:Creating MLFlow logs
2021-04-05 03:24:39,750:INFO:Model: Extra Trees Regressor
2021-04-05 03:24:39,836:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-05 03:24:40,114:INFO:Creating MLFlow logs
2021-04-05 03:24:40,125:INFO:Model: Random Forest Regressor
2021-04-05 03:24:40,182:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-05 03:24:40,437:INFO:Creating MLFlow logs
2021-04-05 03:24:40,449:INFO:Model: Gradient Boosting Regressor
2021-04-05 03:24:40,499:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:24:40,752:INFO:Creating MLFlow logs
2021-04-05 03:24:40,766:INFO:Model: Light Gradient Boosting Machine
2021-04-05 03:24:40,813:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-05 03:24:41,072:INFO:Creating MLFlow logs
2021-04-05 03:24:41,083:INFO:Model: AdaBoost Regressor
2021-04-05 03:24:41,138:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-05 03:24:41,408:INFO:Creating MLFlow logs
2021-04-05 03:24:41,425:INFO:Model: Extreme Gradient Boosting
2021-04-05 03:24:41,484:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-05 03:24:41,766:INFO:Creating MLFlow logs
2021-04-05 03:24:41,794:INFO:Model: K Neighbors Regressor
2021-04-05 03:24:41,883:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-05 03:24:42,271:INFO:Creating MLFlow logs
2021-04-05 03:24:42,288:INFO:Model: Decision Tree Regressor
2021-04-05 03:24:42,358:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-05 03:24:42,683:INFO:Creating MLFlow logs
2021-04-05 03:24:42,697:INFO:Model: Orthogonal Matching Pursuit
2021-04-05 03:24:42,757:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-05 03:24:43,037:INFO:Creating MLFlow logs
2021-04-05 03:24:43,053:INFO:Model: Passive Aggressive Regressor
2021-04-05 03:24:43,110:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:24:43,407:INFO:Creating MLFlow logs
2021-04-05 03:24:43,419:INFO:Model: Elastic Net
2021-04-05 03:24:43,479:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-05 03:24:43,726:INFO:Creating MLFlow logs
2021-04-05 03:24:43,739:INFO:Model: Lasso Regression
2021-04-05 03:24:43,794:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-05 03:24:44,039:INFO:Creating MLFlow logs
2021-04-05 03:24:44,052:INFO:Model: Least Angle Regression
2021-04-05 03:24:44,110:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-05 03:24:44,404:INFO:create_model_container: 17
2021-04-05 03:24:44,405:INFO:master_model_container: 17
2021-04-05 03:24:44,405:INFO:display_container: 2
2021-04-05 03:24:44,405:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:24:44,406:INFO:compare_models() succesfully completed......................................
2021-04-05 03:24:44,413:INFO:Initializing create_model()
2021-04-05 03:24:44,414:INFO:create_model(estimator=br, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-05 03:24:44,414:INFO:Checking exceptions
2021-04-05 03:24:44,414:INFO:Preparing display monitor
2021-04-05 03:24:44,441:INFO:Importing libraries
2021-04-05 03:24:44,441:INFO:Copying training dataset
2021-04-05 03:24:44,444:INFO:Defining folds
2021-04-05 03:24:44,444:INFO:Declaring metric variables
2021-04-05 03:24:44,458:INFO:Importing untrained model
2021-04-05 03:24:44,470:INFO:Bayesian Ridge Imported succesfully
2021-04-05 03:24:44,506:INFO:Starting cross validation
2021-04-05 03:24:44,507:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:44,809:INFO:Calculating mean and std
2021-04-05 03:24:44,811:INFO:Creating metrics dataframe
2021-04-05 03:24:44,848:INFO:Finalizing model
2021-04-05 03:24:44,860:INFO:Creating MLFlow logs
2021-04-05 03:24:44,886:INFO:Model: Bayesian Ridge
2021-04-05 03:24:44,956:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-05 03:24:45,139:INFO:Initializing predict_model()
2021-04-05 03:24:45,139:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:24:45,140:INFO:Checking exceptions
2021-04-05 03:24:45,140:INFO:Preloading libraries
2021-04-05 03:24:45,530:INFO:Uploading results into container
2021-04-05 03:24:45,530:INFO:Uploading model into container now
2021-04-05 03:24:45,554:INFO:create_model_container: 18
2021-04-05 03:24:45,554:INFO:master_model_container: 18
2021-04-05 03:24:45,554:INFO:display_container: 3
2021-04-05 03:24:45,558:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:24:45,558:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:45,737:INFO:Initializing tune_model()
2021-04-05 03:24:45,737:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-05 03:24:45,738:INFO:Checking exceptions
2021-04-05 03:24:45,738:INFO:Preparing display monitor
2021-04-05 03:24:45,763:INFO:Copying training dataset
2021-04-05 03:24:45,765:INFO:Checking base model
2021-04-05 03:24:45,766:INFO:Base model : Bayesian Ridge
2021-04-05 03:24:45,781:INFO:Declaring metric variables
2021-04-05 03:24:45,794:INFO:Defining Hyperparameters
2021-04-05 03:24:45,908:INFO:Tuning with n_jobs=-1
2021-04-05 03:24:45,909:INFO:Initializing RandomizedSearchCV
2021-04-05 03:24:46,458:INFO:best_params: {'actual_estimator__normalize': False, 'actual_estimator__lambda_2': 0.001, 'actual_estimator__lambda_1': 0.005, 'actual_estimator__fit_intercept': True, 'actual_estimator__compute_score': False, 'actual_estimator__alpha_2': 0.3, 'actual_estimator__alpha_1': 0.15}
2021-04-05 03:24:46,459:INFO:Hyperparameter search completed
2021-04-05 03:24:46,459:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:46,461:INFO:Initializing create_model()
2021-04-05 03:24:46,461:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E504579FA0>, kwargs={'normalize': False, 'lambda_2': 0.001, 'lambda_1': 0.005, 'fit_intercept': True, 'compute_score': False, 'alpha_2': 0.3, 'alpha_1': 0.15})
2021-04-05 03:24:46,461:INFO:Checking exceptions
2021-04-05 03:24:46,461:INFO:Importing libraries
2021-04-05 03:24:46,461:INFO:Copying training dataset
2021-04-05 03:24:46,462:INFO:Defining folds
2021-04-05 03:24:46,463:INFO:Declaring metric variables
2021-04-05 03:24:46,474:INFO:Importing untrained model
2021-04-05 03:24:46,474:INFO:Declaring custom model
2021-04-05 03:24:46,490:INFO:Bayesian Ridge Imported succesfully
2021-04-05 03:24:46,536:INFO:Starting cross validation
2021-04-05 03:24:46,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:46,663:INFO:Calculating mean and std
2021-04-05 03:24:46,666:INFO:Creating metrics dataframe
2021-04-05 03:24:46,687:INFO:Finalizing model
2021-04-05 03:24:46,699:INFO:Uploading results into container
2021-04-05 03:24:46,699:INFO:Uploading model into container now
2021-04-05 03:24:46,700:INFO:create_model_container: 19
2021-04-05 03:24:46,700:INFO:master_model_container: 19
2021-04-05 03:24:46,700:INFO:display_container: 4
2021-04-05 03:24:46,701:INFO:PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:24:46,702:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:46,821:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:46,822:INFO:Creating MLFlow logs
2021-04-05 03:24:46,836:INFO:Model: Bayesian Ridge
2021-04-05 03:24:46,886:INFO:logged params: {'alpha_1': 0.15, 'alpha_2': 0.3, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 0.005, 'lambda_2': 0.001, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-05 03:24:47,094:INFO:Initializing predict_model()
2021-04-05 03:24:47,094:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:24:47,094:INFO:Checking exceptions
2021-04-05 03:24:47,095:INFO:Preloading libraries
2021-04-05 03:24:47,426:INFO:create_model_container: 19
2021-04-05 03:24:47,426:INFO:master_model_container: 19
2021-04-05 03:24:47,427:INFO:display_container: 4
2021-04-05 03:24:47,428:INFO:PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:24:47,429:INFO:tune_model() succesfully completed......................................
2021-04-05 03:24:47,574:INFO:Initializing plot_model()
2021-04-05 03:24:47,574:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:24:47,574:INFO:Checking exceptions
2021-04-05 03:24:47,575:INFO:Preparing display monitor
2021-04-05 03:24:47,590:INFO:Preloading libraries
2021-04-05 03:24:47,593:INFO:Copying training dataset
2021-04-05 03:24:47,594:INFO:Copying test dataset
2021-04-05 03:24:47,594:INFO:Plot type: residuals
2021-04-05 03:24:47,648:INFO:Fitting Model
2021-04-05 03:24:47,690:INFO:Scoring test/hold-out set
2021-04-05 03:24:48,305:INFO:Visual Rendered Successfully
2021-04-05 03:24:48,450:INFO:plot_model() succesfully completed......................................
2021-04-05 03:24:48,462:INFO:Initializing plot_model()
2021-04-05 03:24:48,462:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:24:48,462:INFO:Checking exceptions
2021-04-05 03:24:48,463:INFO:Preparing display monitor
2021-04-05 03:24:48,474:INFO:Preloading libraries
2021-04-05 03:24:48,477:INFO:Copying training dataset
2021-04-05 03:24:48,478:INFO:Copying test dataset
2021-04-05 03:24:48,478:INFO:Plot type: error
2021-04-05 03:24:48,481:INFO:Fitting Model
2021-04-05 03:24:48,483:INFO:Scoring test/hold-out set
2021-04-05 03:24:48,868:INFO:Visual Rendered Successfully
2021-04-05 03:24:48,988:INFO:plot_model() succesfully completed......................................
2021-04-05 03:24:49,009:INFO:Initializing plot_model()
2021-04-05 03:24:49,009:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:24:49,009:INFO:Checking exceptions
2021-04-05 03:24:49,009:INFO:Preparing display monitor
2021-04-05 03:24:49,017:INFO:Preloading libraries
2021-04-05 03:24:49,020:INFO:Copying training dataset
2021-04-05 03:24:49,021:INFO:Copying test dataset
2021-04-05 03:24:49,022:INFO:Plot type: feature
2021-04-05 03:24:49,224:INFO:Visual Rendered Successfully
2021-04-05 03:24:49,300:INFO:plot_model() succesfully completed......................................
2021-04-05 03:24:49,343:INFO:Initializing evaluate_model()
2021-04-05 03:24:49,343:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-05 03:24:49,395:INFO:Initializing plot_model()
2021-04-05 03:24:49,395:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha_1=0.15, alpha_2=0.3, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=0.005,
                                lambda_2=0.001, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.15,
                                                        alpha_2=0.3,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.005,
                                                        lambda_2=0.001,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:24:49,396:INFO:Checking exceptions
2021-04-05 03:24:49,396:INFO:Preparing display monitor
2021-04-05 03:24:49,405:INFO:Preloading libraries
2021-04-05 03:24:49,410:INFO:Copying training dataset
2021-04-05 03:24:49,411:INFO:Copying test dataset
2021-04-05 03:24:49,412:INFO:Plot type: parameter
2021-04-05 03:24:49,436:INFO:Visual Rendered Successfully
2021-04-05 03:24:49,567:INFO:plot_model() succesfully completed......................................
2021-04-05 03:24:49,590:INFO:Initializing automl()
2021-04-05 03:24:49,590:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-05 03:24:49,590:INFO:Model Selection Basis : CV Results on Training set
2021-04-05 03:24:49,597:INFO:Initializing create_model()
2021-04-05 03:24:49,597:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:24:49,597:INFO:Checking exceptions
2021-04-05 03:24:49,598:INFO:Importing libraries
2021-04-05 03:24:49,598:INFO:Copying training dataset
2021-04-05 03:24:49,599:INFO:Defining folds
2021-04-05 03:24:49,599:INFO:Declaring metric variables
2021-04-05 03:24:49,599:INFO:Importing untrained model
2021-04-05 03:24:49,599:INFO:Declaring custom model
2021-04-05 03:24:49,600:INFO:Ridge Regression Imported succesfully
2021-04-05 03:24:49,601:INFO:Cross validation set to False
2021-04-05 03:24:49,601:INFO:Fitting Model
2021-04-05 03:24:49,607:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:24:49,608:INFO:create_models() succesfully completed......................................
2021-04-05 03:24:49,697:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:24:49,697:INFO:automl() succesfully completed......................................
2021-04-05 03:24:49,712:INFO:Initializing predict_model()
2021-04-05 03:24:49,713:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:24:49,713:INFO:Checking exceptions
2021-04-05 03:24:49,713:INFO:Preloading libraries
2021-04-05 03:24:49,714:INFO:Preparing display monitor
2021-04-05 03:24:49,853:INFO:Initializing finalize_model()
2021-04-05 03:24:49,853:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-05 03:24:49,855:INFO:Finalizing PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:24:49,857:INFO:Initializing create_model()
2021-04-05 03:24:49,857:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:24:49,858:INFO:Checking exceptions
2021-04-05 03:24:49,858:INFO:Importing libraries
2021-04-05 03:24:49,858:INFO:Copying training dataset
2021-04-05 03:24:49,859:INFO:Defining folds
2021-04-05 03:24:49,859:INFO:Declaring metric variables
2021-04-05 03:24:49,859:INFO:Importing untrained model
2021-04-05 03:24:49,859:INFO:Declaring custom model
2021-04-05 03:24:49,860:INFO:Ridge Regression Imported succesfully
2021-04-05 03:24:49,861:INFO:Starting cross validation
2021-04-05 03:24:49,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:50,149:INFO:Calculating mean and std
2021-04-05 03:24:50,149:INFO:Creating metrics dataframe
2021-04-05 03:24:50,153:INFO:Finalizing model
2021-04-05 03:24:50,163:INFO:Uploading results into container
2021-04-05 03:24:50,163:INFO:Uploading model into container now
2021-04-05 03:24:50,163:INFO:create_model_container: 20
2021-04-05 03:24:50,163:INFO:master_model_container: 20
2021-04-05 03:24:50,163:INFO:display_container: 6
2021-04-05 03:24:50,164:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:24:50,164:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:50,234:INFO:Creating MLFlow logs
2021-04-05 03:24:50,237:INFO:Model: Ridge Regression
2021-04-05 03:24:50,275:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-05 03:24:50,393:INFO:Initializing predict_model()
2021-04-05 03:24:50,393:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:24:50,393:INFO:Checking exceptions
2021-04-05 03:24:50,393:INFO:Preloading libraries
2021-04-05 03:24:50,712:INFO:create_model_container: 20
2021-04-05 03:24:50,712:INFO:master_model_container: 20
2021-04-05 03:24:50,712:INFO:display_container: 5
2021-04-05 03:24:50,714:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:24:50,714:INFO:finalize_model() succesfully completed......................................
2021-04-05 03:24:50,803:INFO:Initializing predict_model()
2021-04-05 03:24:50,804:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:24:50,804:INFO:Checking exceptions
2021-04-05 03:24:50,804:INFO:Preloading libraries
2021-04-05 03:24:50,804:INFO:Preparing display monitor
2021-04-05 03:24:50,959:INFO:Initializing predict_model()
2021-04-05 03:24:50,959:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:24:50,960:INFO:Checking exceptions
2021-04-05 03:24:50,960:INFO:Preloading libraries
2021-04-05 03:24:50,961:INFO:Preparing display monitor
2021-04-05 03:24:51,276:INFO:Initializing save_model()
2021-04-05 03:24:51,276:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), model_name=saved_models/best_2nd_model_to_predict_highschool_graduation_rate_br, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2021-04-05 03:24:51,277:INFO:Adding model into prep_pipe
2021-04-05 03:24:51,313:INFO:saved_models/best_2nd_model_to_predict_highschool_graduation_rate_br.pkl saved in current working directory
2021-04-05 03:24:51,332:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                                 fit_intercept=True,
                                                 max_iter=None, normalize=False,
                                                 power_transformer_method='box-cox',
                                                 power_transformer_standardize=True,
                                                 random_state=786,
                                                 regressor=Ridge(alpha=1.0,
                                                                 copy_X=True,
                                                                 fit_intercept=True,
                                                                 max_iter=None,
                                                                 normalize=False,
                                                                 random_state=786,
                                                                 solver='auto',
                                                                 tol=0.001),
                                                 solver='auto', tol=0.001)]],
         verbose=False)
2021-04-05 03:24:51,333:INFO:save_model() succesfully completed......................................
2021-04-05 03:24:51,580:INFO:PyCaret Supervised Module
2021-04-05 03:24:51,582:INFO:ML Usecase: regression
2021-04-05 03:24:51,582:INFO:version 2.3.0
2021-04-05 03:24:51,582:INFO:Initializing setup()
2021-04-05 03:24:51,582:INFO:setup(target=highschool_graduation_rate, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-05 03:24:51,582:INFO:Checking environment
2021-04-05 03:24:51,582:INFO:python_version: 3.9.1
2021-04-05 03:24:51,582:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-05 03:24:51,583:INFO:machine: AMD64
2021-04-05 03:24:51,583:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-05 03:24:51,583:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-05 03:24:51,584:INFO:Checking libraries
2021-04-05 03:24:51,585:INFO:pd==1.2.2
2021-04-05 03:24:51,585:INFO:numpy==1.19.5
2021-04-05 03:24:51,585:INFO:sklearn==0.23.2
2021-04-05 03:24:51,585:INFO:lightgbm==3.1.1
2021-04-05 03:24:51,585:WARNING:catboost not found
2021-04-05 03:24:51,585:INFO:xgboost==1.3.3
2021-04-05 03:24:51,586:INFO:mlflow==1.14.1
2021-04-05 03:24:51,586:INFO:Checking Exceptions
2021-04-05 03:24:51,586:INFO:Declaring global variables
2021-04-05 03:24:51,586:INFO:USI: e33a
2021-04-05 03:24:51,586:INFO:pycaret_globals: {'fold_groups_param', 'X_test', 'display_container', '_available_plots', 'target_param', 'data_before_preprocess', 'USI', 'X_train', 'exp_name_log', 'transform_target_param', 'prep_pipe', 'fold_shuffle_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'fix_imbalance_method_param', 'X', '_all_models', '_all_metrics', '_ml_usecase', 'transform_target_method_param', 'pycaret_globals', 'imputation_regressor', 'create_model_container', 'y_train', 'n_jobs_param', 'seed', 'iterative_imputation_iters_param', 'y_test', 'y', 'experiment__', 'html_param', 'imputation_classifier', '_internal_pipeline', '_gpu_n_jobs_param', 'master_model_container', 'stratify_param', '_all_models_internal', 'logging_param', 'fix_imbalance_param', 'fold_param'}
2021-04-05 03:24:51,587:INFO:Preparing display monitor
2021-04-05 03:24:51,587:INFO:Preparing display monitor
2021-04-05 03:24:51,607:INFO:Importing libraries
2021-04-05 03:24:51,607:INFO:Copying data for preprocessing
2021-04-05 03:24:51,622:INFO:Declaring preprocessing parameters
2021-04-05 03:24:51,626:INFO:Creating preprocessing pipeline
2021-04-05 03:24:51,638:INFO:Preprocessing pipeline created successfully
2021-04-05 03:24:51,638:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-05 03:24:51,639:INFO:Creating global containers
2021-04-05 03:24:51,639:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-05 03:24:54,765:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-05 03:24:54,965:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-05 03:24:54,966:INFO:Creating grid variables
2021-04-05 03:24:55,004:INFO:Logging experiment in MLFlow
2021-04-05 03:24:55,011:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-05 03:24:55,011:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-05 03:24:55,203:INFO:SubProcess save_model() called ==================================
2021-04-05 03:24:55,217:INFO:Initializing save_model()
2021-04-05 03:24:55,217:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False, kwargs={})
2021-04-05 03:24:55,217:INFO:Adding model into prep_pipe
2021-04-05 03:24:55,219:WARNING:Only Model saved as it was a pipeline.
2021-04-05 03:24:55,242:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-05 03:24:55,250:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-05 03:24:55,250:INFO:save_model() succesfully completed......................................
2021-04-05 03:24:55,342:INFO:SubProcess save_model() end ==================================
2021-04-05 03:24:55,435:INFO:create_model_container: 0
2021-04-05 03:24:55,435:INFO:master_model_container: 0
2021-04-05 03:24:55,436:INFO:display_container: 1
2021-04-05 03:24:55,442:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-05 03:24:55,442:INFO:setup() succesfully completed......................................
2021-04-05 03:24:55,557:INFO:Initializing compare_models()
2021-04-05 03:24:55,558:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-05 03:24:55,558:INFO:Checking exceptions
2021-04-05 03:24:55,558:INFO:Preparing display monitor
2021-04-05 03:24:55,559:INFO:Preparing display monitor
2021-04-05 03:24:55,609:INFO:Initializing Linear Regression
2021-04-05 03:24:55,610:INFO:Total runtime is 0.0 minutes
2021-04-05 03:24:55,629:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:55,629:INFO:Initializing create_model()
2021-04-05 03:24:55,630:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:24:55,630:INFO:Checking exceptions
2021-04-05 03:24:55,630:INFO:Importing libraries
2021-04-05 03:24:55,630:INFO:Copying training dataset
2021-04-05 03:24:55,632:INFO:Defining folds
2021-04-05 03:24:55,632:INFO:Declaring metric variables
2021-04-05 03:24:55,652:INFO:Importing untrained model
2021-04-05 03:24:55,670:INFO:Linear Regression Imported succesfully
2021-04-05 03:24:55,716:INFO:Starting cross validation
2021-04-05 03:24:55,717:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:55,943:INFO:Calculating mean and std
2021-04-05 03:24:55,945:INFO:Creating metrics dataframe
2021-04-05 03:24:55,957:INFO:Uploading results into container
2021-04-05 03:24:55,957:INFO:Uploading model into container now
2021-04-05 03:24:55,958:INFO:create_model_container: 1
2021-04-05 03:24:55,958:INFO:master_model_container: 1
2021-04-05 03:24:55,958:INFO:display_container: 2
2021-04-05 03:24:55,960:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-05 03:24:55,961:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:56,238:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:56,238:INFO:Creating metrics dataframe
2021-04-05 03:24:56,285:INFO:Initializing Lasso Regression
2021-04-05 03:24:56,285:INFO:Total runtime is 0.011263314882914226 minutes
2021-04-05 03:24:56,311:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:56,312:INFO:Initializing create_model()
2021-04-05 03:24:56,312:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:24:56,313:INFO:Checking exceptions
2021-04-05 03:24:56,313:INFO:Importing libraries
2021-04-05 03:24:56,313:INFO:Copying training dataset
2021-04-05 03:24:56,318:INFO:Defining folds
2021-04-05 03:24:56,318:INFO:Declaring metric variables
2021-04-05 03:24:56,352:INFO:Importing untrained model
2021-04-05 03:24:56,384:INFO:Lasso Regression Imported succesfully
2021-04-05 03:24:56,435:INFO:Starting cross validation
2021-04-05 03:24:56,437:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:56,559:INFO:Calculating mean and std
2021-04-05 03:24:56,560:INFO:Creating metrics dataframe
2021-04-05 03:24:56,566:INFO:Uploading results into container
2021-04-05 03:24:56,567:INFO:Uploading model into container now
2021-04-05 03:24:56,567:INFO:create_model_container: 2
2021-04-05 03:24:56,568:INFO:master_model_container: 2
2021-04-05 03:24:56,568:INFO:display_container: 2
2021-04-05 03:24:56,569:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-05 03:24:56,570:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:56,682:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:56,682:INFO:Creating metrics dataframe
2021-04-05 03:24:56,706:INFO:Initializing Ridge Regression
2021-04-05 03:24:56,707:INFO:Total runtime is 0.018297604719797772 minutes
2021-04-05 03:24:56,726:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:56,727:INFO:Initializing create_model()
2021-04-05 03:24:56,727:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:24:56,727:INFO:Checking exceptions
2021-04-05 03:24:56,727:INFO:Importing libraries
2021-04-05 03:24:56,727:INFO:Copying training dataset
2021-04-05 03:24:56,729:INFO:Defining folds
2021-04-05 03:24:56,730:INFO:Declaring metric variables
2021-04-05 03:24:56,746:INFO:Importing untrained model
2021-04-05 03:24:56,768:INFO:Ridge Regression Imported succesfully
2021-04-05 03:24:56,807:INFO:Starting cross validation
2021-04-05 03:24:56,808:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:56,949:INFO:Calculating mean and std
2021-04-05 03:24:56,952:INFO:Creating metrics dataframe
2021-04-05 03:24:56,970:INFO:Uploading results into container
2021-04-05 03:24:56,970:INFO:Uploading model into container now
2021-04-05 03:24:56,971:INFO:create_model_container: 3
2021-04-05 03:24:56,971:INFO:master_model_container: 3
2021-04-05 03:24:56,971:INFO:display_container: 2
2021-04-05 03:24:56,973:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:24:56,973:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:57,094:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:57,095:INFO:Creating metrics dataframe
2021-04-05 03:24:57,126:INFO:Initializing Elastic Net
2021-04-05 03:24:57,127:INFO:Total runtime is 0.02529352108637492 minutes
2021-04-05 03:24:57,140:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:57,141:INFO:Initializing create_model()
2021-04-05 03:24:57,141:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:24:57,141:INFO:Checking exceptions
2021-04-05 03:24:57,141:INFO:Importing libraries
2021-04-05 03:24:57,142:INFO:Copying training dataset
2021-04-05 03:24:57,143:INFO:Defining folds
2021-04-05 03:24:57,143:INFO:Declaring metric variables
2021-04-05 03:24:57,162:INFO:Importing untrained model
2021-04-05 03:24:57,186:INFO:Elastic Net Imported succesfully
2021-04-05 03:24:57,236:INFO:Starting cross validation
2021-04-05 03:24:57,237:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:57,420:INFO:Calculating mean and std
2021-04-05 03:24:57,423:INFO:Creating metrics dataframe
2021-04-05 03:24:57,433:INFO:Uploading results into container
2021-04-05 03:24:57,434:INFO:Uploading model into container now
2021-04-05 03:24:57,434:INFO:create_model_container: 4
2021-04-05 03:24:57,434:INFO:master_model_container: 4
2021-04-05 03:24:57,435:INFO:display_container: 2
2021-04-05 03:24:57,438:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-05 03:24:57,438:INFO:create_model() succesfully completed......................................
2021-04-05 03:24:57,600:INFO:SubProcess create_model() end ==================================
2021-04-05 03:24:57,601:INFO:Creating metrics dataframe
2021-04-05 03:24:57,628:INFO:Initializing Least Angle Regression
2021-04-05 03:24:57,628:INFO:Total runtime is 0.03364547888437907 minutes
2021-04-05 03:24:57,648:INFO:SubProcess create_model() called ==================================
2021-04-05 03:24:57,648:INFO:Initializing create_model()
2021-04-05 03:24:57,649:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:24:57,649:INFO:Checking exceptions
2021-04-05 03:24:57,650:INFO:Importing libraries
2021-04-05 03:24:57,650:INFO:Copying training dataset
2021-04-05 03:24:57,657:INFO:Defining folds
2021-04-05 03:24:57,657:INFO:Declaring metric variables
2021-04-05 03:24:57,678:INFO:Importing untrained model
2021-04-05 03:24:57,696:INFO:Least Angle Regression Imported succesfully
2021-04-05 03:24:57,735:INFO:Starting cross validation
2021-04-05 03:24:57,737:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:24:59,429:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-05 03:24:59,430:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-05 03:24:59,430:INFO:Initializing create_model()
2021-04-05 03:24:59,430:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:24:59,431:INFO:Checking exceptions
2021-04-05 03:24:59,431:INFO:Importing libraries
2021-04-05 03:24:59,431:INFO:Copying training dataset
2021-04-05 03:24:59,431:INFO:Defining folds
2021-04-05 03:24:59,432:INFO:Declaring metric variables
2021-04-05 03:24:59,441:INFO:Importing untrained model
2021-04-05 03:24:59,454:INFO:Least Angle Regression Imported succesfully
2021-04-05 03:24:59,486:INFO:Starting cross validation
2021-04-05 03:24:59,487:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:07,330:ERROR:create_model() for lar raised an exception:
2021-04-05 03:25:07,332:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-05 03:25:07,333:INFO:Initializing Lasso Least Angle Regression
2021-04-05 03:25:07,333:INFO:Total runtime is 0.1953876773516337 minutes
2021-04-05 03:25:07,347:INFO:SubProcess create_model() called ==================================
2021-04-05 03:25:07,348:INFO:Initializing create_model()
2021-04-05 03:25:07,348:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:25:07,349:INFO:Checking exceptions
2021-04-05 03:25:07,349:INFO:Importing libraries
2021-04-05 03:25:07,350:INFO:Copying training dataset
2021-04-05 03:25:07,352:INFO:Defining folds
2021-04-05 03:25:07,353:INFO:Declaring metric variables
2021-04-05 03:25:07,369:INFO:Importing untrained model
2021-04-05 03:25:07,384:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-05 03:25:07,415:INFO:Starting cross validation
2021-04-05 03:25:07,416:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:13,623:INFO:Calculating mean and std
2021-04-05 03:25:13,626:INFO:Creating metrics dataframe
2021-04-05 03:25:13,637:INFO:Uploading results into container
2021-04-05 03:25:13,637:INFO:Uploading model into container now
2021-04-05 03:25:13,637:INFO:create_model_container: 5
2021-04-05 03:25:13,638:INFO:master_model_container: 5
2021-04-05 03:25:13,638:INFO:display_container: 2
2021-04-05 03:25:13,639:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-05 03:25:13,640:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:13,727:INFO:SubProcess create_model() end ==================================
2021-04-05 03:25:13,727:INFO:Creating metrics dataframe
2021-04-05 03:25:13,746:INFO:Initializing Orthogonal Matching Pursuit
2021-04-05 03:25:13,746:INFO:Total runtime is 0.3022744655609131 minutes
2021-04-05 03:25:13,756:INFO:SubProcess create_model() called ==================================
2021-04-05 03:25:13,756:INFO:Initializing create_model()
2021-04-05 03:25:13,757:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:25:13,757:INFO:Checking exceptions
2021-04-05 03:25:13,757:INFO:Importing libraries
2021-04-05 03:25:13,757:INFO:Copying training dataset
2021-04-05 03:25:13,758:INFO:Defining folds
2021-04-05 03:25:13,758:INFO:Declaring metric variables
2021-04-05 03:25:13,768:INFO:Importing untrained model
2021-04-05 03:25:13,776:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-05 03:25:13,796:INFO:Starting cross validation
2021-04-05 03:25:13,796:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:13,855:INFO:Calculating mean and std
2021-04-05 03:25:13,856:INFO:Creating metrics dataframe
2021-04-05 03:25:13,861:INFO:Uploading results into container
2021-04-05 03:25:13,861:INFO:Uploading model into container now
2021-04-05 03:25:13,861:INFO:create_model_container: 6
2021-04-05 03:25:13,861:INFO:master_model_container: 6
2021-04-05 03:25:13,861:INFO:display_container: 2
2021-04-05 03:25:13,862:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-05 03:25:13,862:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:13,937:INFO:SubProcess create_model() end ==================================
2021-04-05 03:25:13,937:INFO:Creating metrics dataframe
2021-04-05 03:25:13,960:INFO:Initializing Bayesian Ridge
2021-04-05 03:25:13,960:INFO:Total runtime is 0.30583754777908323 minutes
2021-04-05 03:25:13,972:INFO:SubProcess create_model() called ==================================
2021-04-05 03:25:13,972:INFO:Initializing create_model()
2021-04-05 03:25:13,972:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:25:13,972:INFO:Checking exceptions
2021-04-05 03:25:13,973:INFO:Importing libraries
2021-04-05 03:25:13,973:INFO:Copying training dataset
2021-04-05 03:25:13,974:INFO:Defining folds
2021-04-05 03:25:13,974:INFO:Declaring metric variables
2021-04-05 03:25:13,985:INFO:Importing untrained model
2021-04-05 03:25:13,999:INFO:Bayesian Ridge Imported succesfully
2021-04-05 03:25:14,023:INFO:Starting cross validation
2021-04-05 03:25:14,024:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:14,089:INFO:Calculating mean and std
2021-04-05 03:25:14,090:INFO:Creating metrics dataframe
2021-04-05 03:25:14,094:INFO:Uploading results into container
2021-04-05 03:25:14,094:INFO:Uploading model into container now
2021-04-05 03:25:14,094:INFO:create_model_container: 7
2021-04-05 03:25:14,094:INFO:master_model_container: 7
2021-04-05 03:25:14,094:INFO:display_container: 2
2021-04-05 03:25:14,096:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:25:14,096:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:14,170:INFO:SubProcess create_model() end ==================================
2021-04-05 03:25:14,170:INFO:Creating metrics dataframe
2021-04-05 03:25:14,190:INFO:Initializing Passive Aggressive Regressor
2021-04-05 03:25:14,190:INFO:Total runtime is 0.3096771240234375 minutes
2021-04-05 03:25:14,200:INFO:SubProcess create_model() called ==================================
2021-04-05 03:25:14,201:INFO:Initializing create_model()
2021-04-05 03:25:14,201:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:25:14,201:INFO:Checking exceptions
2021-04-05 03:25:14,201:INFO:Importing libraries
2021-04-05 03:25:14,201:INFO:Copying training dataset
2021-04-05 03:25:14,202:INFO:Defining folds
2021-04-05 03:25:14,202:INFO:Declaring metric variables
2021-04-05 03:25:14,212:INFO:Importing untrained model
2021-04-05 03:25:14,223:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-05 03:25:14,245:INFO:Starting cross validation
2021-04-05 03:25:14,246:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:14,339:INFO:Calculating mean and std
2021-04-05 03:25:14,340:INFO:Creating metrics dataframe
2021-04-05 03:25:14,344:INFO:Uploading results into container
2021-04-05 03:25:14,344:INFO:Uploading model into container now
2021-04-05 03:25:14,344:INFO:create_model_container: 8
2021-04-05 03:25:14,344:INFO:master_model_container: 8
2021-04-05 03:25:14,344:INFO:display_container: 2
2021-04-05 03:25:14,346:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:25:14,346:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:14,431:INFO:SubProcess create_model() end ==================================
2021-04-05 03:25:14,431:INFO:Creating metrics dataframe
2021-04-05 03:25:14,456:INFO:Initializing Huber Regressor
2021-04-05 03:25:14,456:INFO:Total runtime is 0.3141144076983134 minutes
2021-04-05 03:25:14,466:INFO:SubProcess create_model() called ==================================
2021-04-05 03:25:14,467:INFO:Initializing create_model()
2021-04-05 03:25:14,467:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:25:14,467:INFO:Checking exceptions
2021-04-05 03:25:14,467:INFO:Importing libraries
2021-04-05 03:25:14,468:INFO:Copying training dataset
2021-04-05 03:25:14,469:INFO:Defining folds
2021-04-05 03:25:14,469:INFO:Declaring metric variables
2021-04-05 03:25:14,478:INFO:Importing untrained model
2021-04-05 03:25:14,491:INFO:Huber Regressor Imported succesfully
2021-04-05 03:25:14,513:INFO:Starting cross validation
2021-04-05 03:25:14,514:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:14,666:INFO:Calculating mean and std
2021-04-05 03:25:14,668:INFO:Creating metrics dataframe
2021-04-05 03:25:14,674:INFO:Uploading results into container
2021-04-05 03:25:14,675:INFO:Uploading model into container now
2021-04-05 03:25:14,675:INFO:create_model_container: 9
2021-04-05 03:25:14,675:INFO:master_model_container: 9
2021-04-05 03:25:14,676:INFO:display_container: 2
2021-04-05 03:25:14,677:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-05 03:25:14,678:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:14,778:INFO:SubProcess create_model() end ==================================
2021-04-05 03:25:14,779:INFO:Creating metrics dataframe
2021-04-05 03:25:14,799:INFO:Initializing K Neighbors Regressor
2021-04-05 03:25:14,799:INFO:Total runtime is 0.31982144912083943 minutes
2021-04-05 03:25:14,809:INFO:SubProcess create_model() called ==================================
2021-04-05 03:25:14,810:INFO:Initializing create_model()
2021-04-05 03:25:14,810:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:25:14,810:INFO:Checking exceptions
2021-04-05 03:25:14,810:INFO:Importing libraries
2021-04-05 03:25:14,810:INFO:Copying training dataset
2021-04-05 03:25:14,812:INFO:Defining folds
2021-04-05 03:25:14,812:INFO:Declaring metric variables
2021-04-05 03:25:14,824:INFO:Importing untrained model
2021-04-05 03:25:14,835:INFO:K Neighbors Regressor Imported succesfully
2021-04-05 03:25:14,858:INFO:Starting cross validation
2021-04-05 03:25:14,859:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:15,006:INFO:Calculating mean and std
2021-04-05 03:25:15,008:INFO:Creating metrics dataframe
2021-04-05 03:25:15,015:INFO:Uploading results into container
2021-04-05 03:25:15,015:INFO:Uploading model into container now
2021-04-05 03:25:15,016:INFO:create_model_container: 10
2021-04-05 03:25:15,016:INFO:master_model_container: 10
2021-04-05 03:25:15,016:INFO:display_container: 2
2021-04-05 03:25:15,019:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-05 03:25:15,019:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:15,109:INFO:SubProcess create_model() end ==================================
2021-04-05 03:25:15,109:INFO:Creating metrics dataframe
2021-04-05 03:25:15,133:INFO:Initializing Decision Tree Regressor
2021-04-05 03:25:15,133:INFO:Total runtime is 0.3253844896952311 minutes
2021-04-05 03:25:15,144:INFO:SubProcess create_model() called ==================================
2021-04-05 03:25:15,145:INFO:Initializing create_model()
2021-04-05 03:25:15,145:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:25:15,145:INFO:Checking exceptions
2021-04-05 03:25:15,146:INFO:Importing libraries
2021-04-05 03:25:15,146:INFO:Copying training dataset
2021-04-05 03:25:15,148:INFO:Defining folds
2021-04-05 03:25:15,150:INFO:Declaring metric variables
2021-04-05 03:25:15,161:INFO:Importing untrained model
2021-04-05 03:25:15,173:INFO:Decision Tree Regressor Imported succesfully
2021-04-05 03:25:15,194:INFO:Starting cross validation
2021-04-05 03:25:15,195:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:15,279:INFO:Calculating mean and std
2021-04-05 03:25:15,281:INFO:Creating metrics dataframe
2021-04-05 03:25:15,289:INFO:Uploading results into container
2021-04-05 03:25:15,289:INFO:Uploading model into container now
2021-04-05 03:25:15,289:INFO:create_model_container: 11
2021-04-05 03:25:15,289:INFO:master_model_container: 11
2021-04-05 03:25:15,289:INFO:display_container: 2
2021-04-05 03:25:15,291:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-05 03:25:15,291:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:15,378:INFO:SubProcess create_model() end ==================================
2021-04-05 03:25:15,378:INFO:Creating metrics dataframe
2021-04-05 03:25:15,401:INFO:Initializing Random Forest Regressor
2021-04-05 03:25:15,401:INFO:Total runtime is 0.3298614978790283 minutes
2021-04-05 03:25:15,413:INFO:SubProcess create_model() called ==================================
2021-04-05 03:25:15,413:INFO:Initializing create_model()
2021-04-05 03:25:15,414:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:25:15,414:INFO:Checking exceptions
2021-04-05 03:25:15,414:INFO:Importing libraries
2021-04-05 03:25:15,414:INFO:Copying training dataset
2021-04-05 03:25:15,416:INFO:Defining folds
2021-04-05 03:25:15,417:INFO:Declaring metric variables
2021-04-05 03:25:15,426:INFO:Importing untrained model
2021-04-05 03:25:15,437:INFO:Random Forest Regressor Imported succesfully
2021-04-05 03:25:15,459:INFO:Starting cross validation
2021-04-05 03:25:15,460:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:16,325:INFO:Calculating mean and std
2021-04-05 03:25:16,327:INFO:Creating metrics dataframe
2021-04-05 03:25:16,333:INFO:Uploading results into container
2021-04-05 03:25:16,333:INFO:Uploading model into container now
2021-04-05 03:25:16,334:INFO:create_model_container: 12
2021-04-05 03:25:16,334:INFO:master_model_container: 12
2021-04-05 03:25:16,334:INFO:display_container: 2
2021-04-05 03:25:16,337:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-05 03:25:16,337:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:16,432:INFO:SubProcess create_model() end ==================================
2021-04-05 03:25:16,432:INFO:Creating metrics dataframe
2021-04-05 03:25:16,455:INFO:Initializing Extra Trees Regressor
2021-04-05 03:25:16,456:INFO:Total runtime is 0.3474415024121602 minutes
2021-04-05 03:25:16,465:INFO:SubProcess create_model() called ==================================
2021-04-05 03:25:16,466:INFO:Initializing create_model()
2021-04-05 03:25:16,466:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:25:16,466:INFO:Checking exceptions
2021-04-05 03:25:16,466:INFO:Importing libraries
2021-04-05 03:25:16,466:INFO:Copying training dataset
2021-04-05 03:25:16,467:INFO:Defining folds
2021-04-05 03:25:16,467:INFO:Declaring metric variables
2021-04-05 03:25:16,476:INFO:Importing untrained model
2021-04-05 03:25:16,487:INFO:Extra Trees Regressor Imported succesfully
2021-04-05 03:25:16,506:INFO:Starting cross validation
2021-04-05 03:25:16,507:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:17,155:INFO:Calculating mean and std
2021-04-05 03:25:17,156:INFO:Creating metrics dataframe
2021-04-05 03:25:17,161:INFO:Uploading results into container
2021-04-05 03:25:17,162:INFO:Uploading model into container now
2021-04-05 03:25:17,162:INFO:create_model_container: 13
2021-04-05 03:25:17,162:INFO:master_model_container: 13
2021-04-05 03:25:17,162:INFO:display_container: 2
2021-04-05 03:25:17,164:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-05 03:25:17,164:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:17,238:INFO:SubProcess create_model() end ==================================
2021-04-05 03:25:17,238:INFO:Creating metrics dataframe
2021-04-05 03:25:17,260:INFO:Initializing AdaBoost Regressor
2021-04-05 03:25:17,260:INFO:Total runtime is 0.36083509922027585 minutes
2021-04-05 03:25:17,270:INFO:SubProcess create_model() called ==================================
2021-04-05 03:25:17,271:INFO:Initializing create_model()
2021-04-05 03:25:17,271:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:25:17,271:INFO:Checking exceptions
2021-04-05 03:25:17,271:INFO:Importing libraries
2021-04-05 03:25:17,271:INFO:Copying training dataset
2021-04-05 03:25:17,272:INFO:Defining folds
2021-04-05 03:25:17,272:INFO:Declaring metric variables
2021-04-05 03:25:17,281:INFO:Importing untrained model
2021-04-05 03:25:17,293:INFO:AdaBoost Regressor Imported succesfully
2021-04-05 03:25:17,317:INFO:Starting cross validation
2021-04-05 03:25:17,318:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:17,741:INFO:Calculating mean and std
2021-04-05 03:25:17,742:INFO:Creating metrics dataframe
2021-04-05 03:25:17,746:INFO:Uploading results into container
2021-04-05 03:25:17,747:INFO:Uploading model into container now
2021-04-05 03:25:17,747:INFO:create_model_container: 14
2021-04-05 03:25:17,747:INFO:master_model_container: 14
2021-04-05 03:25:17,747:INFO:display_container: 2
2021-04-05 03:25:17,748:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-05 03:25:17,749:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:17,821:INFO:SubProcess create_model() end ==================================
2021-04-05 03:25:17,821:INFO:Creating metrics dataframe
2021-04-05 03:25:17,843:INFO:Initializing Gradient Boosting Regressor
2021-04-05 03:25:17,843:INFO:Total runtime is 0.3705615639686584 minutes
2021-04-05 03:25:17,853:INFO:SubProcess create_model() called ==================================
2021-04-05 03:25:17,854:INFO:Initializing create_model()
2021-04-05 03:25:17,854:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:25:17,854:INFO:Checking exceptions
2021-04-05 03:25:17,855:INFO:Importing libraries
2021-04-05 03:25:17,855:INFO:Copying training dataset
2021-04-05 03:25:17,855:INFO:Defining folds
2021-04-05 03:25:17,855:INFO:Declaring metric variables
2021-04-05 03:25:17,864:INFO:Importing untrained model
2021-04-05 03:25:17,874:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-05 03:25:17,894:INFO:Starting cross validation
2021-04-05 03:25:17,895:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:18,141:INFO:Calculating mean and std
2021-04-05 03:25:18,142:INFO:Creating metrics dataframe
2021-04-05 03:25:18,146:INFO:Uploading results into container
2021-04-05 03:25:18,146:INFO:Uploading model into container now
2021-04-05 03:25:18,146:INFO:create_model_container: 15
2021-04-05 03:25:18,146:INFO:master_model_container: 15
2021-04-05 03:25:18,146:INFO:display_container: 2
2021-04-05 03:25:18,147:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:25:18,147:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:18,227:INFO:SubProcess create_model() end ==================================
2021-04-05 03:25:18,228:INFO:Creating metrics dataframe
2021-04-05 03:25:18,258:INFO:Initializing Extreme Gradient Boosting
2021-04-05 03:25:18,258:INFO:Total runtime is 0.3774728496869405 minutes
2021-04-05 03:25:18,270:INFO:SubProcess create_model() called ==================================
2021-04-05 03:25:18,271:INFO:Initializing create_model()
2021-04-05 03:25:18,271:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:25:18,271:INFO:Checking exceptions
2021-04-05 03:25:18,271:INFO:Importing libraries
2021-04-05 03:25:18,271:INFO:Copying training dataset
2021-04-05 03:25:18,272:INFO:Defining folds
2021-04-05 03:25:18,272:INFO:Declaring metric variables
2021-04-05 03:25:18,284:INFO:Importing untrained model
2021-04-05 03:25:18,297:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-05 03:25:18,322:INFO:Starting cross validation
2021-04-05 03:25:18,322:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:20,794:INFO:Calculating mean and std
2021-04-05 03:25:20,796:INFO:Creating metrics dataframe
2021-04-05 03:25:20,807:INFO:Uploading results into container
2021-04-05 03:25:20,807:INFO:Uploading model into container now
2021-04-05 03:25:20,807:INFO:create_model_container: 16
2021-04-05 03:25:20,808:INFO:master_model_container: 16
2021-04-05 03:25:20,808:INFO:display_container: 2
2021-04-05 03:25:20,813:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-05 03:25:20,813:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:20,932:INFO:SubProcess create_model() end ==================================
2021-04-05 03:25:20,932:INFO:Creating metrics dataframe
2021-04-05 03:25:20,956:INFO:Initializing Light Gradient Boosting Machine
2021-04-05 03:25:20,956:INFO:Total runtime is 0.42244222164154055 minutes
2021-04-05 03:25:20,970:INFO:SubProcess create_model() called ==================================
2021-04-05 03:25:20,971:INFO:Initializing create_model()
2021-04-05 03:25:20,971:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D798E0>, kwargs={})
2021-04-05 03:25:20,971:INFO:Checking exceptions
2021-04-05 03:25:20,971:INFO:Importing libraries
2021-04-05 03:25:20,971:INFO:Copying training dataset
2021-04-05 03:25:20,972:INFO:Defining folds
2021-04-05 03:25:20,973:INFO:Declaring metric variables
2021-04-05 03:25:20,987:INFO:Importing untrained model
2021-04-05 03:25:20,998:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-05 03:25:21,031:INFO:Starting cross validation
2021-04-05 03:25:21,033:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:21,800:INFO:Calculating mean and std
2021-04-05 03:25:21,801:INFO:Creating metrics dataframe
2021-04-05 03:25:21,809:INFO:Uploading results into container
2021-04-05 03:25:21,809:INFO:Uploading model into container now
2021-04-05 03:25:21,809:INFO:create_model_container: 17
2021-04-05 03:25:21,810:INFO:master_model_container: 17
2021-04-05 03:25:21,810:INFO:display_container: 2
2021-04-05 03:25:21,813:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-05 03:25:21,813:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:21,922:INFO:SubProcess create_model() end ==================================
2021-04-05 03:25:21,922:INFO:Creating metrics dataframe
2021-04-05 03:25:21,970:INFO:Initializing create_model()
2021-04-05 03:25:21,970:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:25:21,970:INFO:Checking exceptions
2021-04-05 03:25:21,970:INFO:Importing libraries
2021-04-05 03:25:21,970:INFO:Copying training dataset
2021-04-05 03:25:21,971:INFO:Defining folds
2021-04-05 03:25:21,971:INFO:Declaring metric variables
2021-04-05 03:25:21,971:INFO:Importing untrained model
2021-04-05 03:25:21,972:INFO:Declaring custom model
2021-04-05 03:25:21,972:INFO:Ridge Regression Imported succesfully
2021-04-05 03:25:21,973:INFO:Cross validation set to False
2021-04-05 03:25:21,973:INFO:Fitting Model
2021-04-05 03:25:21,979:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:25:21,980:INFO:create_models() succesfully completed......................................
2021-04-05 03:25:22,059:INFO:Creating MLFlow logs
2021-04-05 03:25:22,073:INFO:Model: Ridge Regression
2021-04-05 03:25:22,109:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-05 03:25:22,219:INFO:Initializing predict_model()
2021-04-05 03:25:22,219:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:25:22,219:INFO:Checking exceptions
2021-04-05 03:25:22,219:INFO:Preloading libraries
2021-04-05 03:25:22,443:INFO:Creating MLFlow logs
2021-04-05 03:25:22,456:INFO:Model: Bayesian Ridge
2021-04-05 03:25:22,496:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-05 03:25:22,752:INFO:Creating MLFlow logs
2021-04-05 03:25:22,765:INFO:Model: Linear Regression
2021-04-05 03:25:22,806:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-05 03:25:23,155:INFO:Creating MLFlow logs
2021-04-05 03:25:23,174:INFO:Model: Huber Regressor
2021-04-05 03:25:23,226:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-05 03:25:23,625:INFO:Creating MLFlow logs
2021-04-05 03:25:23,644:INFO:Model: Extra Trees Regressor
2021-04-05 03:25:23,694:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-05 03:25:24,002:INFO:Creating MLFlow logs
2021-04-05 03:25:24,018:INFO:Model: Random Forest Regressor
2021-04-05 03:25:24,078:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-05 03:25:24,549:INFO:Creating MLFlow logs
2021-04-05 03:25:24,586:INFO:Model: Gradient Boosting Regressor
2021-04-05 03:25:24,686:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:25:25,220:INFO:Creating MLFlow logs
2021-04-05 03:25:25,236:INFO:Model: Light Gradient Boosting Machine
2021-04-05 03:25:25,316:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-05 03:25:25,728:INFO:Creating MLFlow logs
2021-04-05 03:25:25,745:INFO:Model: AdaBoost Regressor
2021-04-05 03:25:25,815:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-05 03:25:26,245:INFO:Creating MLFlow logs
2021-04-05 03:25:26,273:INFO:Model: Extreme Gradient Boosting
2021-04-05 03:25:26,396:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-05 03:25:26,908:INFO:Creating MLFlow logs
2021-04-05 03:25:26,924:INFO:Model: K Neighbors Regressor
2021-04-05 03:25:27,015:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-05 03:25:27,359:INFO:Creating MLFlow logs
2021-04-05 03:25:27,375:INFO:Model: Decision Tree Regressor
2021-04-05 03:25:27,446:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-05 03:25:27,863:INFO:Creating MLFlow logs
2021-04-05 03:25:27,895:INFO:Model: Orthogonal Matching Pursuit
2021-04-05 03:25:27,994:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-05 03:25:28,326:INFO:Creating MLFlow logs
2021-04-05 03:25:28,345:INFO:Model: Passive Aggressive Regressor
2021-04-05 03:25:28,434:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:25:28,843:INFO:Creating MLFlow logs
2021-04-05 03:25:28,880:INFO:Model: Elastic Net
2021-04-05 03:25:28,960:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-05 03:25:29,404:INFO:Creating MLFlow logs
2021-04-05 03:25:29,421:INFO:Model: Lasso Regression
2021-04-05 03:25:29,471:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-05 03:25:29,793:INFO:Creating MLFlow logs
2021-04-05 03:25:29,805:INFO:Model: Least Angle Regression
2021-04-05 03:25:29,847:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-05 03:25:30,328:INFO:create_model_container: 17
2021-04-05 03:25:30,328:INFO:master_model_container: 17
2021-04-05 03:25:30,328:INFO:display_container: 2
2021-04-05 03:25:30,331:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:25:30,331:INFO:compare_models() succesfully completed......................................
2021-04-05 03:25:30,344:INFO:Initializing create_model()
2021-04-05 03:25:30,344:INFO:create_model(estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-05 03:25:30,345:INFO:Checking exceptions
2021-04-05 03:25:30,346:INFO:Preparing display monitor
2021-04-05 03:25:30,379:INFO:Importing libraries
2021-04-05 03:25:30,379:INFO:Copying training dataset
2021-04-05 03:25:30,380:INFO:Defining folds
2021-04-05 03:25:30,381:INFO:Declaring metric variables
2021-04-05 03:25:30,401:INFO:Importing untrained model
2021-04-05 03:25:30,419:INFO:Ridge Regression Imported succesfully
2021-04-05 03:25:30,459:INFO:Starting cross validation
2021-04-05 03:25:30,460:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:30,822:INFO:Calculating mean and std
2021-04-05 03:25:30,824:INFO:Creating metrics dataframe
2021-04-05 03:25:30,864:INFO:Finalizing model
2021-04-05 03:25:30,876:INFO:Creating MLFlow logs
2021-04-05 03:25:30,901:INFO:Model: Ridge Regression
2021-04-05 03:25:30,952:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-05 03:25:31,147:INFO:Initializing predict_model()
2021-04-05 03:25:31,147:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:25:31,147:INFO:Checking exceptions
2021-04-05 03:25:31,147:INFO:Preloading libraries
2021-04-05 03:25:31,544:INFO:Uploading results into container
2021-04-05 03:25:31,544:INFO:Uploading model into container now
2021-04-05 03:25:31,565:INFO:create_model_container: 18
2021-04-05 03:25:31,566:INFO:master_model_container: 18
2021-04-05 03:25:31,566:INFO:display_container: 3
2021-04-05 03:25:31,567:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:25:31,568:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:31,693:INFO:Initializing tune_model()
2021-04-05 03:25:31,694:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-05 03:25:31,694:INFO:Checking exceptions
2021-04-05 03:25:31,694:INFO:Preparing display monitor
2021-04-05 03:25:31,715:INFO:Copying training dataset
2021-04-05 03:25:31,718:INFO:Checking base model
2021-04-05 03:25:31,718:INFO:Base model : Ridge Regression
2021-04-05 03:25:31,733:INFO:Declaring metric variables
2021-04-05 03:25:31,742:INFO:Defining Hyperparameters
2021-04-05 03:25:31,845:INFO:Tuning with n_jobs=-1
2021-04-05 03:25:31,846:INFO:Initializing RandomizedSearchCV
2021-04-05 03:25:32,476:INFO:best_params: {'actual_estimator__normalize': True, 'actual_estimator__fit_intercept': False, 'actual_estimator__alpha': 0.72}
2021-04-05 03:25:32,476:INFO:Hyperparameter search completed
2021-04-05 03:25:32,477:INFO:SubProcess create_model() called ==================================
2021-04-05 03:25:32,478:INFO:Initializing create_model()
2021-04-05 03:25:32,479:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C040>, kwargs={'normalize': True, 'fit_intercept': False, 'alpha': 0.72})
2021-04-05 03:25:32,479:INFO:Checking exceptions
2021-04-05 03:25:32,479:INFO:Importing libraries
2021-04-05 03:25:32,480:INFO:Copying training dataset
2021-04-05 03:25:32,482:INFO:Defining folds
2021-04-05 03:25:32,484:INFO:Declaring metric variables
2021-04-05 03:25:32,499:INFO:Importing untrained model
2021-04-05 03:25:32,499:INFO:Declaring custom model
2021-04-05 03:25:32,509:INFO:Ridge Regression Imported succesfully
2021-04-05 03:25:32,536:INFO:Starting cross validation
2021-04-05 03:25:32,537:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:32,626:INFO:Calculating mean and std
2021-04-05 03:25:32,627:INFO:Creating metrics dataframe
2021-04-05 03:25:32,643:INFO:Finalizing model
2021-04-05 03:25:32,656:INFO:Uploading results into container
2021-04-05 03:25:32,656:INFO:Uploading model into container now
2021-04-05 03:25:32,656:INFO:create_model_container: 19
2021-04-05 03:25:32,656:INFO:master_model_container: 19
2021-04-05 03:25:32,656:INFO:display_container: 4
2021-04-05 03:25:32,658:INFO:PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:25:32,658:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:32,751:INFO:SubProcess create_model() end ==================================
2021-04-05 03:25:32,751:INFO:Creating MLFlow logs
2021-04-05 03:25:32,765:INFO:Model: Ridge Regression
2021-04-05 03:25:32,807:INFO:logged params: {'alpha': 0.72, 'copy_X': True, 'fit_intercept': False, 'max_iter': None, 'normalize': True, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-05 03:25:32,930:INFO:Initializing predict_model()
2021-04-05 03:25:32,930:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:25:32,930:INFO:Checking exceptions
2021-04-05 03:25:32,930:INFO:Preloading libraries
2021-04-05 03:25:33,263:INFO:create_model_container: 19
2021-04-05 03:25:33,264:INFO:master_model_container: 19
2021-04-05 03:25:33,264:INFO:display_container: 4
2021-04-05 03:25:33,265:INFO:PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:25:33,266:INFO:tune_model() succesfully completed......................................
2021-04-05 03:25:33,370:INFO:Initializing plot_model()
2021-04-05 03:25:33,371:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:25:33,371:INFO:Checking exceptions
2021-04-05 03:25:33,371:INFO:Preparing display monitor
2021-04-05 03:25:33,377:INFO:Preloading libraries
2021-04-05 03:25:33,379:INFO:Copying training dataset
2021-04-05 03:25:33,380:INFO:Copying test dataset
2021-04-05 03:25:33,380:INFO:Plot type: residuals
2021-04-05 03:25:33,422:INFO:Fitting Model
2021-04-05 03:25:33,462:INFO:Scoring test/hold-out set
2021-04-05 03:25:34,189:INFO:Visual Rendered Successfully
2021-04-05 03:25:34,292:INFO:plot_model() succesfully completed......................................
2021-04-05 03:25:34,308:INFO:Initializing plot_model()
2021-04-05 03:25:34,308:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:25:34,308:INFO:Checking exceptions
2021-04-05 03:25:34,308:INFO:Preparing display monitor
2021-04-05 03:25:34,316:INFO:Preloading libraries
2021-04-05 03:25:34,320:INFO:Copying training dataset
2021-04-05 03:25:34,321:INFO:Copying test dataset
2021-04-05 03:25:34,322:INFO:Plot type: error
2021-04-05 03:25:34,324:INFO:Fitting Model
2021-04-05 03:25:34,326:INFO:Scoring test/hold-out set
2021-04-05 03:25:34,680:INFO:Visual Rendered Successfully
2021-04-05 03:25:34,777:INFO:plot_model() succesfully completed......................................
2021-04-05 03:25:34,795:INFO:Initializing plot_model()
2021-04-05 03:25:34,795:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:25:34,795:INFO:Checking exceptions
2021-04-05 03:25:34,795:INFO:Preparing display monitor
2021-04-05 03:25:34,802:INFO:Preloading libraries
2021-04-05 03:25:34,804:INFO:Copying training dataset
2021-04-05 03:25:34,804:INFO:Copying test dataset
2021-04-05 03:25:34,805:INFO:Plot type: feature
2021-04-05 03:25:35,007:INFO:Visual Rendered Successfully
2021-04-05 03:25:35,104:INFO:plot_model() succesfully completed......................................
2021-04-05 03:25:35,140:INFO:Initializing evaluate_model()
2021-04-05 03:25:35,140:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-05 03:25:35,164:INFO:Initializing plot_model()
2021-04-05 03:25:35,164:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.72, copy_X=True, fit_intercept=False,
                                max_iter=None, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=0.72, copy_X=True,
                                                fit_intercept=False,
                                                max_iter=None, normalize=True,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:25:35,164:INFO:Checking exceptions
2021-04-05 03:25:35,164:INFO:Preparing display monitor
2021-04-05 03:25:35,173:INFO:Preloading libraries
2021-04-05 03:25:35,175:INFO:Copying training dataset
2021-04-05 03:25:35,175:INFO:Copying test dataset
2021-04-05 03:25:35,176:INFO:Plot type: parameter
2021-04-05 03:25:35,188:INFO:Visual Rendered Successfully
2021-04-05 03:25:35,287:INFO:plot_model() succesfully completed......................................
2021-04-05 03:25:35,311:INFO:Initializing automl()
2021-04-05 03:25:35,312:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-05 03:25:35,312:INFO:Model Selection Basis : CV Results on Training set
2021-04-05 03:25:35,316:INFO:Initializing create_model()
2021-04-05 03:25:35,317:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:25:35,317:INFO:Checking exceptions
2021-04-05 03:25:35,317:INFO:Importing libraries
2021-04-05 03:25:35,318:INFO:Copying training dataset
2021-04-05 03:25:35,318:INFO:Defining folds
2021-04-05 03:25:35,319:INFO:Declaring metric variables
2021-04-05 03:25:35,319:INFO:Importing untrained model
2021-04-05 03:25:35,319:INFO:Declaring custom model
2021-04-05 03:25:35,320:INFO:Ridge Regression Imported succesfully
2021-04-05 03:25:35,321:INFO:Cross validation set to False
2021-04-05 03:25:35,321:INFO:Fitting Model
2021-04-05 03:25:35,327:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:25:35,328:INFO:create_models() succesfully completed......................................
2021-04-05 03:25:35,427:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:25:35,428:INFO:automl() succesfully completed......................................
2021-04-05 03:25:35,436:INFO:Initializing predict_model()
2021-04-05 03:25:35,437:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:25:35,438:INFO:Checking exceptions
2021-04-05 03:25:35,438:INFO:Preloading libraries
2021-04-05 03:25:35,438:INFO:Preparing display monitor
2021-04-05 03:25:35,594:INFO:Initializing finalize_model()
2021-04-05 03:25:35,594:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-05 03:25:35,595:INFO:Finalizing PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:25:35,596:INFO:Initializing create_model()
2021-04-05 03:25:35,596:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:25:35,596:INFO:Checking exceptions
2021-04-05 03:25:35,597:INFO:Importing libraries
2021-04-05 03:25:35,597:INFO:Copying training dataset
2021-04-05 03:25:35,598:INFO:Defining folds
2021-04-05 03:25:35,598:INFO:Declaring metric variables
2021-04-05 03:25:35,598:INFO:Importing untrained model
2021-04-05 03:25:35,599:INFO:Declaring custom model
2021-04-05 03:25:35,600:INFO:Ridge Regression Imported succesfully
2021-04-05 03:25:35,601:INFO:Starting cross validation
2021-04-05 03:25:35,601:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:25:35,864:INFO:Calculating mean and std
2021-04-05 03:25:35,865:INFO:Creating metrics dataframe
2021-04-05 03:25:35,874:INFO:Finalizing model
2021-04-05 03:25:35,889:INFO:Uploading results into container
2021-04-05 03:25:35,889:INFO:Uploading model into container now
2021-04-05 03:25:35,890:INFO:create_model_container: 20
2021-04-05 03:25:35,890:INFO:master_model_container: 20
2021-04-05 03:25:35,890:INFO:display_container: 6
2021-04-05 03:25:35,891:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:25:35,891:INFO:create_model() succesfully completed......................................
2021-04-05 03:25:36,010:INFO:Creating MLFlow logs
2021-04-05 03:25:36,014:INFO:Model: Ridge Regression
2021-04-05 03:25:36,068:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-05 03:25:36,218:INFO:Initializing predict_model()
2021-04-05 03:25:36,218:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:25:36,218:INFO:Checking exceptions
2021-04-05 03:25:36,218:INFO:Preloading libraries
2021-04-05 03:25:36,495:INFO:create_model_container: 20
2021-04-05 03:25:36,495:INFO:master_model_container: 20
2021-04-05 03:25:36,495:INFO:display_container: 5
2021-04-05 03:25:36,496:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:25:36,496:INFO:finalize_model() succesfully completed......................................
2021-04-05 03:25:36,603:INFO:Initializing predict_model()
2021-04-05 03:25:36,603:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:25:36,604:INFO:Checking exceptions
2021-04-05 03:25:36,604:INFO:Preloading libraries
2021-04-05 03:25:36,604:INFO:Preparing display monitor
2021-04-05 03:25:36,760:INFO:Initializing predict_model()
2021-04-05 03:25:36,760:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:25:36,760:INFO:Checking exceptions
2021-04-05 03:25:36,760:INFO:Preloading libraries
2021-04-05 03:25:36,760:INFO:Preparing display monitor
2021-04-05 03:25:37,025:INFO:Initializing save_model()
2021-04-05 03:25:37,025:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), model_name=saved_models/best_model_to_predict_highschool_graduation_rate_ridge_regression, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 Remove_100(target='highschool_graduation_rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='highschool_graduation_rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2021-04-05 03:25:37,026:INFO:Adding model into prep_pipe
2021-04-05 03:25:37,060:INFO:saved_models/best_model_to_predict_highschool_graduation_rate_ridge_regression.pkl saved in current working directory
2021-04-05 03:25:37,072:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='highschool_graduation_rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=No...
                 PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                                 fit_intercept=True,
                                                 max_iter=None, normalize=False,
                                                 power_transformer_method='box-cox',
                                                 power_transformer_standardize=True,
                                                 random_state=786,
                                                 regressor=Ridge(alpha=1.0,
                                                                 copy_X=True,
                                                                 fit_intercept=True,
                                                                 max_iter=None,
                                                                 normalize=False,
                                                                 random_state=786,
                                                                 solver='auto',
                                                                 tol=0.001),
                                                 solver='auto', tol=0.001)]],
         verbose=False)
2021-04-05 03:25:37,073:INFO:save_model() succesfully completed......................................
2021-04-05 03:25:37,360:INFO:PyCaret Supervised Module
2021-04-05 03:25:37,360:INFO:ML Usecase: regression
2021-04-05 03:25:37,361:INFO:version 2.3.0
2021-04-05 03:25:37,361:INFO:Initializing setup()
2021-04-05 03:25:37,361:INFO:setup(target=College Enrollment Rate, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-05 03:25:37,361:INFO:Checking environment
2021-04-05 03:25:37,362:INFO:python_version: 3.9.1
2021-04-05 03:25:37,363:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-05 03:25:37,363:INFO:machine: AMD64
2021-04-05 03:25:37,363:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-05 03:25:37,366:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-05 03:25:37,366:INFO:Checking libraries
2021-04-05 03:25:37,367:INFO:pd==1.2.2
2021-04-05 03:25:37,367:INFO:numpy==1.19.5
2021-04-05 03:25:37,367:INFO:sklearn==0.23.2
2021-04-05 03:25:37,367:INFO:lightgbm==3.1.1
2021-04-05 03:25:37,369:WARNING:catboost not found
2021-04-05 03:25:37,369:INFO:xgboost==1.3.3
2021-04-05 03:25:37,369:INFO:mlflow==1.14.1
2021-04-05 03:25:37,369:INFO:Checking Exceptions
2021-04-05 03:25:37,370:INFO:Declaring global variables
2021-04-05 03:25:37,370:INFO:USI: b92b
2021-04-05 03:25:37,370:INFO:pycaret_globals: {'fold_groups_param', 'X_test', 'display_container', '_available_plots', 'target_param', 'data_before_preprocess', 'USI', 'X_train', 'exp_name_log', 'transform_target_param', 'prep_pipe', 'fold_shuffle_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'fix_imbalance_method_param', 'X', '_all_models', '_all_metrics', '_ml_usecase', 'transform_target_method_param', 'pycaret_globals', 'imputation_regressor', 'create_model_container', 'y_train', 'n_jobs_param', 'seed', 'iterative_imputation_iters_param', 'y_test', 'y', 'experiment__', 'html_param', 'imputation_classifier', '_internal_pipeline', '_gpu_n_jobs_param', 'master_model_container', 'stratify_param', '_all_models_internal', 'logging_param', 'fix_imbalance_param', 'fold_param'}
2021-04-05 03:25:37,370:INFO:Preparing display monitor
2021-04-05 03:25:37,370:INFO:Preparing display monitor
2021-04-05 03:25:37,390:INFO:Importing libraries
2021-04-05 03:25:37,390:INFO:Copying data for preprocessing
2021-04-05 03:25:37,402:INFO:Declaring preprocessing parameters
2021-04-05 03:25:37,404:INFO:Creating preprocessing pipeline
2021-04-05 03:25:37,410:INFO:Preprocessing pipeline created successfully
2021-04-05 03:25:37,410:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-05 03:25:37,410:INFO:Creating global containers
2021-04-05 03:25:37,410:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-05 03:26:16,019:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-05 03:26:16,140:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-05 03:26:16,141:INFO:Creating grid variables
2021-04-05 03:26:16,160:INFO:Logging experiment in MLFlow
2021-04-05 03:26:16,164:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-05 03:26:16,165:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-05 03:26:16,321:INFO:SubProcess save_model() called ==================================
2021-04-05 03:26:16,335:INFO:Initializing save_model()
2021-04-05 03:26:16,335:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False, kwargs={})
2021-04-05 03:26:16,335:INFO:Adding model into prep_pipe
2021-04-05 03:26:16,336:WARNING:Only Model saved as it was a pipeline.
2021-04-05 03:26:16,353:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-05 03:26:16,359:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-05 03:26:16,359:INFO:save_model() succesfully completed......................................
2021-04-05 03:26:16,459:INFO:SubProcess save_model() end ==================================
2021-04-05 03:26:16,525:INFO:create_model_container: 0
2021-04-05 03:26:16,525:INFO:master_model_container: 0
2021-04-05 03:26:16,526:INFO:display_container: 1
2021-04-05 03:26:16,533:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-05 03:26:16,533:INFO:setup() succesfully completed......................................
2021-04-05 03:26:16,638:INFO:Initializing compare_models()
2021-04-05 03:26:16,638:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-05 03:26:16,638:INFO:Checking exceptions
2021-04-05 03:26:16,638:INFO:Preparing display monitor
2021-04-05 03:26:16,638:INFO:Preparing display monitor
2021-04-05 03:26:16,684:INFO:Initializing Linear Regression
2021-04-05 03:26:16,684:INFO:Total runtime is 0.0 minutes
2021-04-05 03:26:16,710:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:16,710:INFO:Initializing create_model()
2021-04-05 03:26:16,710:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:16,710:INFO:Checking exceptions
2021-04-05 03:26:16,711:INFO:Importing libraries
2021-04-05 03:26:16,711:INFO:Copying training dataset
2021-04-05 03:26:16,716:INFO:Defining folds
2021-04-05 03:26:16,716:INFO:Declaring metric variables
2021-04-05 03:26:16,748:INFO:Importing untrained model
2021-04-05 03:26:16,765:INFO:Linear Regression Imported succesfully
2021-04-05 03:26:16,815:INFO:Starting cross validation
2021-04-05 03:26:16,816:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:17,144:INFO:Calculating mean and std
2021-04-05 03:26:17,147:INFO:Creating metrics dataframe
2021-04-05 03:26:17,159:INFO:Uploading results into container
2021-04-05 03:26:17,159:INFO:Uploading model into container now
2021-04-05 03:26:17,159:INFO:create_model_container: 1
2021-04-05 03:26:17,160:INFO:master_model_container: 1
2021-04-05 03:26:17,160:INFO:display_container: 2
2021-04-05 03:26:17,161:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-05 03:26:17,162:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:17,347:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:17,347:INFO:Creating metrics dataframe
2021-04-05 03:26:17,386:INFO:Initializing Lasso Regression
2021-04-05 03:26:17,387:INFO:Total runtime is 0.011714359124501547 minutes
2021-04-05 03:26:17,409:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:17,410:INFO:Initializing create_model()
2021-04-05 03:26:17,410:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:17,410:INFO:Checking exceptions
2021-04-05 03:26:17,410:INFO:Importing libraries
2021-04-05 03:26:17,411:INFO:Copying training dataset
2021-04-05 03:26:17,413:INFO:Defining folds
2021-04-05 03:26:17,413:INFO:Declaring metric variables
2021-04-05 03:26:17,437:INFO:Importing untrained model
2021-04-05 03:26:17,461:INFO:Lasso Regression Imported succesfully
2021-04-05 03:26:17,513:INFO:Starting cross validation
2021-04-05 03:26:17,514:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:17,661:INFO:Calculating mean and std
2021-04-05 03:26:17,663:INFO:Creating metrics dataframe
2021-04-05 03:26:17,672:INFO:Uploading results into container
2021-04-05 03:26:17,672:INFO:Uploading model into container now
2021-04-05 03:26:17,672:INFO:create_model_container: 2
2021-04-05 03:26:17,673:INFO:master_model_container: 2
2021-04-05 03:26:17,674:INFO:display_container: 2
2021-04-05 03:26:17,677:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-05 03:26:17,678:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:18,022:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:18,022:INFO:Creating metrics dataframe
2021-04-05 03:26:18,075:INFO:Initializing Ridge Regression
2021-04-05 03:26:18,076:INFO:Total runtime is 0.023204898834228514 minutes
2021-04-05 03:26:18,095:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:18,096:INFO:Initializing create_model()
2021-04-05 03:26:18,097:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:18,097:INFO:Checking exceptions
2021-04-05 03:26:18,097:INFO:Importing libraries
2021-04-05 03:26:18,097:INFO:Copying training dataset
2021-04-05 03:26:18,099:INFO:Defining folds
2021-04-05 03:26:18,099:INFO:Declaring metric variables
2021-04-05 03:26:18,116:INFO:Importing untrained model
2021-04-05 03:26:18,135:INFO:Ridge Regression Imported succesfully
2021-04-05 03:26:18,174:INFO:Starting cross validation
2021-04-05 03:26:18,175:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:18,501:INFO:Calculating mean and std
2021-04-05 03:26:18,505:INFO:Creating metrics dataframe
2021-04-05 03:26:18,518:INFO:Uploading results into container
2021-04-05 03:26:18,518:INFO:Uploading model into container now
2021-04-05 03:26:18,519:INFO:create_model_container: 3
2021-04-05 03:26:18,520:INFO:master_model_container: 3
2021-04-05 03:26:18,520:INFO:display_container: 2
2021-04-05 03:26:18,522:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:26:18,523:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:18,746:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:18,746:INFO:Creating metrics dataframe
2021-04-05 03:26:18,772:INFO:Initializing Elastic Net
2021-04-05 03:26:18,772:INFO:Total runtime is 0.03480525016784668 minutes
2021-04-05 03:26:18,785:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:18,786:INFO:Initializing create_model()
2021-04-05 03:26:18,787:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:18,787:INFO:Checking exceptions
2021-04-05 03:26:18,788:INFO:Importing libraries
2021-04-05 03:26:18,788:INFO:Copying training dataset
2021-04-05 03:26:18,788:INFO:Defining folds
2021-04-05 03:26:18,789:INFO:Declaring metric variables
2021-04-05 03:26:18,806:INFO:Importing untrained model
2021-04-05 03:26:18,816:INFO:Elastic Net Imported succesfully
2021-04-05 03:26:18,843:INFO:Starting cross validation
2021-04-05 03:26:18,844:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:18,934:INFO:Calculating mean and std
2021-04-05 03:26:18,936:INFO:Creating metrics dataframe
2021-04-05 03:26:18,941:INFO:Uploading results into container
2021-04-05 03:26:18,941:INFO:Uploading model into container now
2021-04-05 03:26:18,941:INFO:create_model_container: 4
2021-04-05 03:26:18,942:INFO:master_model_container: 4
2021-04-05 03:26:18,942:INFO:display_container: 2
2021-04-05 03:26:18,944:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-05 03:26:18,944:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:19,047:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:19,047:INFO:Creating metrics dataframe
2021-04-05 03:26:19,067:INFO:Initializing Least Angle Regression
2021-04-05 03:26:19,067:INFO:Total runtime is 0.039723269144694005 minutes
2021-04-05 03:26:19,079:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:19,080:INFO:Initializing create_model()
2021-04-05 03:26:19,080:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:19,080:INFO:Checking exceptions
2021-04-05 03:26:19,081:INFO:Importing libraries
2021-04-05 03:26:19,081:INFO:Copying training dataset
2021-04-05 03:26:19,082:INFO:Defining folds
2021-04-05 03:26:19,082:INFO:Declaring metric variables
2021-04-05 03:26:19,098:INFO:Importing untrained model
2021-04-05 03:26:19,111:INFO:Least Angle Regression Imported succesfully
2021-04-05 03:26:19,137:INFO:Starting cross validation
2021-04-05 03:26:19,138:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:21,426:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-05 03:26:21,427:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-05 03:26:21,427:INFO:Initializing create_model()
2021-04-05 03:26:21,427:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:21,427:INFO:Checking exceptions
2021-04-05 03:26:21,427:INFO:Importing libraries
2021-04-05 03:26:21,427:INFO:Copying training dataset
2021-04-05 03:26:21,428:INFO:Defining folds
2021-04-05 03:26:21,428:INFO:Declaring metric variables
2021-04-05 03:26:21,438:INFO:Importing untrained model
2021-04-05 03:26:21,448:INFO:Least Angle Regression Imported succesfully
2021-04-05 03:26:21,480:INFO:Starting cross validation
2021-04-05 03:26:21,481:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:29,664:ERROR:create_model() for lar raised an exception:
2021-04-05 03:26:29,665:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 433, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-05 03:26:29,665:INFO:Initializing Lasso Least Angle Regression
2021-04-05 03:26:29,665:INFO:Total runtime is 0.2163550893465678 minutes
2021-04-05 03:26:29,678:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:29,679:INFO:Initializing create_model()
2021-04-05 03:26:29,680:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:29,680:INFO:Checking exceptions
2021-04-05 03:26:29,681:INFO:Importing libraries
2021-04-05 03:26:29,681:INFO:Copying training dataset
2021-04-05 03:26:29,683:INFO:Defining folds
2021-04-05 03:26:29,684:INFO:Declaring metric variables
2021-04-05 03:26:29,695:INFO:Importing untrained model
2021-04-05 03:26:29,710:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-05 03:26:29,744:INFO:Starting cross validation
2021-04-05 03:26:29,745:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:36,765:INFO:Calculating mean and std
2021-04-05 03:26:36,766:INFO:Creating metrics dataframe
2021-04-05 03:26:36,773:INFO:Uploading results into container
2021-04-05 03:26:36,773:INFO:Uploading model into container now
2021-04-05 03:26:36,773:INFO:create_model_container: 5
2021-04-05 03:26:36,774:INFO:master_model_container: 5
2021-04-05 03:26:36,774:INFO:display_container: 2
2021-04-05 03:26:36,775:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-05 03:26:36,775:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:36,879:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:36,880:INFO:Creating metrics dataframe
2021-04-05 03:26:36,901:INFO:Initializing Orthogonal Matching Pursuit
2021-04-05 03:26:36,901:INFO:Total runtime is 0.33695680697758995 minutes
2021-04-05 03:26:36,911:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:36,912:INFO:Initializing create_model()
2021-04-05 03:26:36,912:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:36,912:INFO:Checking exceptions
2021-04-05 03:26:36,913:INFO:Importing libraries
2021-04-05 03:26:36,913:INFO:Copying training dataset
2021-04-05 03:26:36,915:INFO:Defining folds
2021-04-05 03:26:36,916:INFO:Declaring metric variables
2021-04-05 03:26:36,931:INFO:Importing untrained model
2021-04-05 03:26:36,942:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-05 03:26:36,974:INFO:Starting cross validation
2021-04-05 03:26:36,975:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:37,077:INFO:Calculating mean and std
2021-04-05 03:26:37,078:INFO:Creating metrics dataframe
2021-04-05 03:26:37,083:INFO:Uploading results into container
2021-04-05 03:26:37,083:INFO:Uploading model into container now
2021-04-05 03:26:37,084:INFO:create_model_container: 6
2021-04-05 03:26:37,085:INFO:master_model_container: 6
2021-04-05 03:26:37,085:INFO:display_container: 2
2021-04-05 03:26:37,088:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-05 03:26:37,088:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:37,190:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:37,190:INFO:Creating metrics dataframe
2021-04-05 03:26:37,214:INFO:Initializing Bayesian Ridge
2021-04-05 03:26:37,214:INFO:Total runtime is 0.34216549396514895 minutes
2021-04-05 03:26:37,228:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:37,228:INFO:Initializing create_model()
2021-04-05 03:26:37,229:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:37,229:INFO:Checking exceptions
2021-04-05 03:26:37,229:INFO:Importing libraries
2021-04-05 03:26:37,229:INFO:Copying training dataset
2021-04-05 03:26:37,230:INFO:Defining folds
2021-04-05 03:26:37,230:INFO:Declaring metric variables
2021-04-05 03:26:37,243:INFO:Importing untrained model
2021-04-05 03:26:37,255:INFO:Bayesian Ridge Imported succesfully
2021-04-05 03:26:37,280:INFO:Starting cross validation
2021-04-05 03:26:37,281:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:37,358:INFO:Calculating mean and std
2021-04-05 03:26:37,359:INFO:Creating metrics dataframe
2021-04-05 03:26:37,364:INFO:Uploading results into container
2021-04-05 03:26:37,365:INFO:Uploading model into container now
2021-04-05 03:26:37,365:INFO:create_model_container: 7
2021-04-05 03:26:37,365:INFO:master_model_container: 7
2021-04-05 03:26:37,365:INFO:display_container: 2
2021-04-05 03:26:37,367:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:26:37,367:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:37,463:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:37,464:INFO:Creating metrics dataframe
2021-04-05 03:26:37,485:INFO:Initializing Passive Aggressive Regressor
2021-04-05 03:26:37,485:INFO:Total runtime is 0.34668550093968714 minutes
2021-04-05 03:26:37,498:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:37,499:INFO:Initializing create_model()
2021-04-05 03:26:37,499:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:37,499:INFO:Checking exceptions
2021-04-05 03:26:37,500:INFO:Importing libraries
2021-04-05 03:26:37,500:INFO:Copying training dataset
2021-04-05 03:26:37,501:INFO:Defining folds
2021-04-05 03:26:37,501:INFO:Declaring metric variables
2021-04-05 03:26:37,516:INFO:Importing untrained model
2021-04-05 03:26:37,533:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-05 03:26:37,565:INFO:Starting cross validation
2021-04-05 03:26:37,566:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:37,733:INFO:Calculating mean and std
2021-04-05 03:26:37,737:INFO:Creating metrics dataframe
2021-04-05 03:26:37,753:INFO:Uploading results into container
2021-04-05 03:26:37,754:INFO:Uploading model into container now
2021-04-05 03:26:37,755:INFO:create_model_container: 8
2021-04-05 03:26:37,756:INFO:master_model_container: 8
2021-04-05 03:26:37,757:INFO:display_container: 2
2021-04-05 03:26:37,760:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:26:37,760:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:37,950:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:37,950:INFO:Creating metrics dataframe
2021-04-05 03:26:37,974:INFO:Initializing Huber Regressor
2021-04-05 03:26:37,974:INFO:Total runtime is 0.3548328757286072 minutes
2021-04-05 03:26:37,984:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:37,984:INFO:Initializing create_model()
2021-04-05 03:26:37,984:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:37,985:INFO:Checking exceptions
2021-04-05 03:26:37,985:INFO:Importing libraries
2021-04-05 03:26:37,985:INFO:Copying training dataset
2021-04-05 03:26:37,988:INFO:Defining folds
2021-04-05 03:26:37,989:INFO:Declaring metric variables
2021-04-05 03:26:38,001:INFO:Importing untrained model
2021-04-05 03:26:38,016:INFO:Huber Regressor Imported succesfully
2021-04-05 03:26:38,055:INFO:Starting cross validation
2021-04-05 03:26:38,056:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:38,372:INFO:Calculating mean and std
2021-04-05 03:26:38,375:INFO:Creating metrics dataframe
2021-04-05 03:26:38,384:INFO:Uploading results into container
2021-04-05 03:26:38,385:INFO:Uploading model into container now
2021-04-05 03:26:38,386:INFO:create_model_container: 9
2021-04-05 03:26:38,386:INFO:master_model_container: 9
2021-04-05 03:26:38,387:INFO:display_container: 2
2021-04-05 03:26:38,389:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-05 03:26:38,389:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:38,511:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:38,512:INFO:Creating metrics dataframe
2021-04-05 03:26:38,550:INFO:Initializing K Neighbors Regressor
2021-04-05 03:26:38,558:INFO:Total runtime is 0.36457238992055263 minutes
2021-04-05 03:26:38,575:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:38,575:INFO:Initializing create_model()
2021-04-05 03:26:38,576:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:38,576:INFO:Checking exceptions
2021-04-05 03:26:38,576:INFO:Importing libraries
2021-04-05 03:26:38,576:INFO:Copying training dataset
2021-04-05 03:26:38,577:INFO:Defining folds
2021-04-05 03:26:38,577:INFO:Declaring metric variables
2021-04-05 03:26:38,589:INFO:Importing untrained model
2021-04-05 03:26:38,602:INFO:K Neighbors Regressor Imported succesfully
2021-04-05 03:26:38,642:INFO:Starting cross validation
2021-04-05 03:26:38,643:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:38,795:INFO:Calculating mean and std
2021-04-05 03:26:38,796:INFO:Creating metrics dataframe
2021-04-05 03:26:38,803:INFO:Uploading results into container
2021-04-05 03:26:38,803:INFO:Uploading model into container now
2021-04-05 03:26:38,804:INFO:create_model_container: 10
2021-04-05 03:26:38,804:INFO:master_model_container: 10
2021-04-05 03:26:38,804:INFO:display_container: 2
2021-04-05 03:26:38,806:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-05 03:26:38,807:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:38,950:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:38,950:INFO:Creating metrics dataframe
2021-04-05 03:26:38,989:INFO:Initializing Decision Tree Regressor
2021-04-05 03:26:38,989:INFO:Total runtime is 0.37174751361211145 minutes
2021-04-05 03:26:39,000:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:39,001:INFO:Initializing create_model()
2021-04-05 03:26:39,001:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:39,002:INFO:Checking exceptions
2021-04-05 03:26:39,002:INFO:Importing libraries
2021-04-05 03:26:39,002:INFO:Copying training dataset
2021-04-05 03:26:39,003:INFO:Defining folds
2021-04-05 03:26:39,003:INFO:Declaring metric variables
2021-04-05 03:26:39,015:INFO:Importing untrained model
2021-04-05 03:26:39,036:INFO:Decision Tree Regressor Imported succesfully
2021-04-05 03:26:39,077:INFO:Starting cross validation
2021-04-05 03:26:39,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:39,223:INFO:Calculating mean and std
2021-04-05 03:26:39,226:INFO:Creating metrics dataframe
2021-04-05 03:26:39,237:INFO:Uploading results into container
2021-04-05 03:26:39,237:INFO:Uploading model into container now
2021-04-05 03:26:39,238:INFO:create_model_container: 11
2021-04-05 03:26:39,238:INFO:master_model_container: 11
2021-04-05 03:26:39,238:INFO:display_container: 2
2021-04-05 03:26:39,240:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-05 03:26:39,241:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:39,428:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:39,429:INFO:Creating metrics dataframe
2021-04-05 03:26:39,495:INFO:Initializing Random Forest Regressor
2021-04-05 03:26:39,496:INFO:Total runtime is 0.3802046895027161 minutes
2021-04-05 03:26:39,511:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:39,512:INFO:Initializing create_model()
2021-04-05 03:26:39,512:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:39,512:INFO:Checking exceptions
2021-04-05 03:26:39,512:INFO:Importing libraries
2021-04-05 03:26:39,512:INFO:Copying training dataset
2021-04-05 03:26:39,514:INFO:Defining folds
2021-04-05 03:26:39,515:INFO:Declaring metric variables
2021-04-05 03:26:39,532:INFO:Importing untrained model
2021-04-05 03:26:39,551:INFO:Random Forest Regressor Imported succesfully
2021-04-05 03:26:39,576:INFO:Starting cross validation
2021-04-05 03:26:39,576:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:40,894:INFO:Calculating mean and std
2021-04-05 03:26:40,895:INFO:Creating metrics dataframe
2021-04-05 03:26:40,900:INFO:Uploading results into container
2021-04-05 03:26:40,900:INFO:Uploading model into container now
2021-04-05 03:26:40,901:INFO:create_model_container: 12
2021-04-05 03:26:40,901:INFO:master_model_container: 12
2021-04-05 03:26:40,901:INFO:display_container: 2
2021-04-05 03:26:40,905:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-05 03:26:40,905:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:41,033:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:41,033:INFO:Creating metrics dataframe
2021-04-05 03:26:41,071:INFO:Initializing Extra Trees Regressor
2021-04-05 03:26:41,072:INFO:Total runtime is 0.4064748446146647 minutes
2021-04-05 03:26:41,088:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:41,088:INFO:Initializing create_model()
2021-04-05 03:26:41,089:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:41,089:INFO:Checking exceptions
2021-04-05 03:26:41,089:INFO:Importing libraries
2021-04-05 03:26:41,089:INFO:Copying training dataset
2021-04-05 03:26:41,090:INFO:Defining folds
2021-04-05 03:26:41,090:INFO:Declaring metric variables
2021-04-05 03:26:41,103:INFO:Importing untrained model
2021-04-05 03:26:41,115:INFO:Extra Trees Regressor Imported succesfully
2021-04-05 03:26:41,144:INFO:Starting cross validation
2021-04-05 03:26:41,145:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:42,276:INFO:Calculating mean and std
2021-04-05 03:26:42,281:INFO:Creating metrics dataframe
2021-04-05 03:26:42,290:INFO:Uploading results into container
2021-04-05 03:26:42,290:INFO:Uploading model into container now
2021-04-05 03:26:42,290:INFO:create_model_container: 13
2021-04-05 03:26:42,290:INFO:master_model_container: 13
2021-04-05 03:26:42,290:INFO:display_container: 2
2021-04-05 03:26:42,295:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-05 03:26:42,295:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:42,430:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:42,431:INFO:Creating metrics dataframe
2021-04-05 03:26:42,464:INFO:Initializing AdaBoost Regressor
2021-04-05 03:26:42,465:INFO:Total runtime is 0.4296809554100037 minutes
2021-04-05 03:26:42,479:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:42,480:INFO:Initializing create_model()
2021-04-05 03:26:42,480:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:42,481:INFO:Checking exceptions
2021-04-05 03:26:42,481:INFO:Importing libraries
2021-04-05 03:26:42,481:INFO:Copying training dataset
2021-04-05 03:26:42,482:INFO:Defining folds
2021-04-05 03:26:42,482:INFO:Declaring metric variables
2021-04-05 03:26:42,502:INFO:Importing untrained model
2021-04-05 03:26:42,526:INFO:AdaBoost Regressor Imported succesfully
2021-04-05 03:26:42,558:INFO:Starting cross validation
2021-04-05 03:26:42,559:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:42,978:INFO:Calculating mean and std
2021-04-05 03:26:42,980:INFO:Creating metrics dataframe
2021-04-05 03:26:42,990:INFO:Uploading results into container
2021-04-05 03:26:42,990:INFO:Uploading model into container now
2021-04-05 03:26:42,990:INFO:create_model_container: 14
2021-04-05 03:26:42,991:INFO:master_model_container: 14
2021-04-05 03:26:42,991:INFO:display_container: 2
2021-04-05 03:26:42,992:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-05 03:26:42,993:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:43,148:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:43,148:INFO:Creating metrics dataframe
2021-04-05 03:26:43,190:INFO:Initializing Gradient Boosting Regressor
2021-04-05 03:26:43,191:INFO:Total runtime is 0.4417837142944336 minutes
2021-04-05 03:26:43,207:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:43,208:INFO:Initializing create_model()
2021-04-05 03:26:43,208:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:43,208:INFO:Checking exceptions
2021-04-05 03:26:43,208:INFO:Importing libraries
2021-04-05 03:26:43,208:INFO:Copying training dataset
2021-04-05 03:26:43,210:INFO:Defining folds
2021-04-05 03:26:43,210:INFO:Declaring metric variables
2021-04-05 03:26:43,232:INFO:Importing untrained model
2021-04-05 03:26:43,248:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-05 03:26:43,280:INFO:Starting cross validation
2021-04-05 03:26:43,281:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:43,706:INFO:Calculating mean and std
2021-04-05 03:26:43,707:INFO:Creating metrics dataframe
2021-04-05 03:26:43,714:INFO:Uploading results into container
2021-04-05 03:26:43,714:INFO:Uploading model into container now
2021-04-05 03:26:43,715:INFO:create_model_container: 15
2021-04-05 03:26:43,715:INFO:master_model_container: 15
2021-04-05 03:26:43,715:INFO:display_container: 2
2021-04-05 03:26:43,719:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:26:43,719:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:43,840:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:43,840:INFO:Creating metrics dataframe
2021-04-05 03:26:43,885:INFO:Initializing Extreme Gradient Boosting
2021-04-05 03:26:43,886:INFO:Total runtime is 0.4533692479133606 minutes
2021-04-05 03:26:43,901:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:43,901:INFO:Initializing create_model()
2021-04-05 03:26:43,901:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:43,901:INFO:Checking exceptions
2021-04-05 03:26:43,901:INFO:Importing libraries
2021-04-05 03:26:43,901:INFO:Copying training dataset
2021-04-05 03:26:43,903:INFO:Defining folds
2021-04-05 03:26:43,903:INFO:Declaring metric variables
2021-04-05 03:26:43,925:INFO:Importing untrained model
2021-04-05 03:26:43,941:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-05 03:26:43,966:INFO:Starting cross validation
2021-04-05 03:26:43,967:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:46,325:INFO:Calculating mean and std
2021-04-05 03:26:46,327:INFO:Creating metrics dataframe
2021-04-05 03:26:46,336:INFO:Uploading results into container
2021-04-05 03:26:46,337:INFO:Uploading model into container now
2021-04-05 03:26:46,337:INFO:create_model_container: 16
2021-04-05 03:26:46,337:INFO:master_model_container: 16
2021-04-05 03:26:46,337:INFO:display_container: 2
2021-04-05 03:26:46,344:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-05 03:26:46,344:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:46,491:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:46,491:INFO:Creating metrics dataframe
2021-04-05 03:26:46,514:INFO:Initializing Light Gradient Boosting Machine
2021-04-05 03:26:46,515:INFO:Total runtime is 0.49718702634175616 minutes
2021-04-05 03:26:46,528:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:46,529:INFO:Initializing create_model()
2021-04-05 03:26:46,530:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50459C670>, kwargs={})
2021-04-05 03:26:46,530:INFO:Checking exceptions
2021-04-05 03:26:46,530:INFO:Importing libraries
2021-04-05 03:26:46,530:INFO:Copying training dataset
2021-04-05 03:26:46,531:INFO:Defining folds
2021-04-05 03:26:46,531:INFO:Declaring metric variables
2021-04-05 03:26:46,543:INFO:Importing untrained model
2021-04-05 03:26:46,566:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-05 03:26:46,595:INFO:Starting cross validation
2021-04-05 03:26:46,596:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:47,243:INFO:Calculating mean and std
2021-04-05 03:26:47,245:INFO:Creating metrics dataframe
2021-04-05 03:26:47,257:INFO:Uploading results into container
2021-04-05 03:26:47,257:INFO:Uploading model into container now
2021-04-05 03:26:47,258:INFO:create_model_container: 17
2021-04-05 03:26:47,258:INFO:master_model_container: 17
2021-04-05 03:26:47,258:INFO:display_container: 2
2021-04-05 03:26:47,261:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-05 03:26:47,262:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:47,397:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:47,399:INFO:Creating metrics dataframe
2021-04-05 03:26:47,453:INFO:Initializing create_model()
2021-04-05 03:26:47,454:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:26:47,454:INFO:Checking exceptions
2021-04-05 03:26:47,454:INFO:Importing libraries
2021-04-05 03:26:47,455:INFO:Copying training dataset
2021-04-05 03:26:47,455:INFO:Defining folds
2021-04-05 03:26:47,455:INFO:Declaring metric variables
2021-04-05 03:26:47,455:INFO:Importing untrained model
2021-04-05 03:26:47,455:INFO:Declaring custom model
2021-04-05 03:26:47,456:INFO:Bayesian Ridge Imported succesfully
2021-04-05 03:26:47,457:INFO:Cross validation set to False
2021-04-05 03:26:47,457:INFO:Fitting Model
2021-04-05 03:26:47,465:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:26:47,465:INFO:create_models() succesfully completed......................................
2021-04-05 03:26:47,559:INFO:Creating MLFlow logs
2021-04-05 03:26:47,572:INFO:Model: Bayesian Ridge
2021-04-05 03:26:47,612:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-05 03:26:47,750:INFO:Initializing predict_model()
2021-04-05 03:26:47,750:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:26:47,750:INFO:Checking exceptions
2021-04-05 03:26:47,751:INFO:Preloading libraries
2021-04-05 03:26:48,049:INFO:Creating MLFlow logs
2021-04-05 03:26:48,067:INFO:Model: Ridge Regression
2021-04-05 03:26:48,116:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-05 03:26:48,414:INFO:Creating MLFlow logs
2021-04-05 03:26:48,429:INFO:Model: Linear Regression
2021-04-05 03:26:48,473:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-05 03:26:48,807:INFO:Creating MLFlow logs
2021-04-05 03:26:48,829:INFO:Model: Huber Regressor
2021-04-05 03:26:48,887:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-05 03:26:49,325:INFO:Creating MLFlow logs
2021-04-05 03:26:49,338:INFO:Model: Random Forest Regressor
2021-04-05 03:26:49,378:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-05 03:26:49,693:INFO:Creating MLFlow logs
2021-04-05 03:26:49,708:INFO:Model: AdaBoost Regressor
2021-04-05 03:26:49,757:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-05 03:26:50,064:INFO:Creating MLFlow logs
2021-04-05 03:26:50,081:INFO:Model: Extra Trees Regressor
2021-04-05 03:26:50,138:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-05 03:26:50,493:INFO:Creating MLFlow logs
2021-04-05 03:26:50,504:INFO:Model: Gradient Boosting Regressor
2021-04-05 03:26:50,546:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:26:50,900:INFO:Creating MLFlow logs
2021-04-05 03:26:50,917:INFO:Model: Light Gradient Boosting Machine
2021-04-05 03:26:50,979:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-05 03:26:51,389:INFO:Creating MLFlow logs
2021-04-05 03:26:51,403:INFO:Model: Extreme Gradient Boosting
2021-04-05 03:26:51,455:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-05 03:26:51,904:INFO:Creating MLFlow logs
2021-04-05 03:26:51,922:INFO:Model: Decision Tree Regressor
2021-04-05 03:26:51,974:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-05 03:26:52,367:INFO:Creating MLFlow logs
2021-04-05 03:26:52,387:INFO:Model: Orthogonal Matching Pursuit
2021-04-05 03:26:52,458:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-05 03:26:52,768:INFO:Creating MLFlow logs
2021-04-05 03:26:52,790:INFO:Model: K Neighbors Regressor
2021-04-05 03:26:52,848:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-05 03:26:53,235:INFO:Creating MLFlow logs
2021-04-05 03:26:53,250:INFO:Model: Passive Aggressive Regressor
2021-04-05 03:26:53,300:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:26:53,640:INFO:Creating MLFlow logs
2021-04-05 03:26:53,686:INFO:Model: Elastic Net
2021-04-05 03:26:53,760:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-05 03:26:54,087:INFO:Creating MLFlow logs
2021-04-05 03:26:54,104:INFO:Model: Lasso Regression
2021-04-05 03:26:54,162:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-05 03:26:54,529:INFO:Creating MLFlow logs
2021-04-05 03:26:54,547:INFO:Model: Least Angle Regression
2021-04-05 03:26:54,596:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-05 03:26:55,182:INFO:create_model_container: 17
2021-04-05 03:26:55,183:INFO:master_model_container: 17
2021-04-05 03:26:55,183:INFO:display_container: 2
2021-04-05 03:26:55,186:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:26:55,187:INFO:compare_models() succesfully completed......................................
2021-04-05 03:26:55,216:INFO:Initializing create_model()
2021-04-05 03:26:55,216:INFO:create_model(estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-05 03:26:55,216:INFO:Checking exceptions
2021-04-05 03:26:55,216:INFO:Preparing display monitor
2021-04-05 03:26:55,259:INFO:Importing libraries
2021-04-05 03:26:55,259:INFO:Copying training dataset
2021-04-05 03:26:55,260:INFO:Defining folds
2021-04-05 03:26:55,261:INFO:Declaring metric variables
2021-04-05 03:26:55,281:INFO:Importing untrained model
2021-04-05 03:26:55,307:INFO:Linear Regression Imported succesfully
2021-04-05 03:26:55,351:INFO:Starting cross validation
2021-04-05 03:26:55,353:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:55,713:INFO:Calculating mean and std
2021-04-05 03:26:55,716:INFO:Creating metrics dataframe
2021-04-05 03:26:55,779:INFO:Finalizing model
2021-04-05 03:26:55,796:INFO:Creating MLFlow logs
2021-04-05 03:26:55,841:INFO:Model: Linear Regression
2021-04-05 03:26:55,939:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-05 03:26:56,147:INFO:Initializing predict_model()
2021-04-05 03:26:56,148:INFO:predict_model(estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False)), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:26:56,148:INFO:Checking exceptions
2021-04-05 03:26:56,148:INFO:Preloading libraries
2021-04-05 03:26:56,549:INFO:Uploading results into container
2021-04-05 03:26:56,549:INFO:Uploading model into container now
2021-04-05 03:26:56,573:INFO:create_model_container: 18
2021-04-05 03:26:56,573:INFO:master_model_container: 18
2021-04-05 03:26:56,573:INFO:display_container: 3
2021-04-05 03:26:56,575:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-05 03:26:56,575:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:56,799:INFO:Initializing tune_model()
2021-04-05 03:26:56,799:INFO:tune_model(estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False)), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-05 03:26:56,800:INFO:Checking exceptions
2021-04-05 03:26:56,800:INFO:Preparing display monitor
2021-04-05 03:26:56,849:INFO:Copying training dataset
2021-04-05 03:26:56,850:INFO:Checking base model
2021-04-05 03:26:56,850:INFO:Base model : Linear Regression
2021-04-05 03:26:56,875:INFO:Declaring metric variables
2021-04-05 03:26:56,897:INFO:Defining Hyperparameters
2021-04-05 03:26:56,897:INFO:10 is bigger than total combinations 4, setting search algorithm to grid
2021-04-05 03:26:57,043:INFO:Tuning with n_jobs=-1
2021-04-05 03:26:57,043:INFO:Initializing GridSearchCV
2021-04-05 03:26:57,426:INFO:best_params: {'actual_estimator__fit_intercept': False, 'actual_estimator__normalize': True}
2021-04-05 03:26:57,427:INFO:Hyperparameter search completed
2021-04-05 03:26:57,428:INFO:SubProcess create_model() called ==================================
2021-04-05 03:26:57,428:INFO:Initializing create_model()
2021-04-05 03:26:57,429:INFO:create_model(estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False)), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E50D830BE0>, kwargs={'fit_intercept': False, 'normalize': True})
2021-04-05 03:26:57,429:INFO:Checking exceptions
2021-04-05 03:26:57,429:INFO:Importing libraries
2021-04-05 03:26:57,429:INFO:Copying training dataset
2021-04-05 03:26:57,430:INFO:Defining folds
2021-04-05 03:26:57,431:INFO:Declaring metric variables
2021-04-05 03:26:57,448:INFO:Importing untrained model
2021-04-05 03:26:57,449:INFO:Declaring custom model
2021-04-05 03:26:57,469:INFO:Linear Regression Imported succesfully
2021-04-05 03:26:57,513:INFO:Starting cross validation
2021-04-05 03:26:57,514:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:26:57,634:INFO:Calculating mean and std
2021-04-05 03:26:57,636:INFO:Creating metrics dataframe
2021-04-05 03:26:57,656:INFO:Finalizing model
2021-04-05 03:26:57,667:INFO:Uploading results into container
2021-04-05 03:26:57,667:INFO:Uploading model into container now
2021-04-05 03:26:57,667:INFO:create_model_container: 19
2021-04-05 03:26:57,667:INFO:master_model_container: 19
2021-04-05 03:26:57,668:INFO:display_container: 4
2021-04-05 03:26:57,670:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True))
2021-04-05 03:26:57,670:INFO:create_model() succesfully completed......................................
2021-04-05 03:26:57,796:INFO:SubProcess create_model() end ==================================
2021-04-05 03:26:57,796:INFO:Creating MLFlow logs
2021-04-05 03:26:57,827:INFO:Model: Linear Regression
2021-04-05 03:26:57,890:INFO:logged params: {'copy_X': True, 'fit_intercept': False, 'n_jobs': -1, 'normalize': True}
2021-04-05 03:26:58,036:INFO:Initializing predict_model()
2021-04-05 03:26:58,037:INFO:predict_model(estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:26:58,037:INFO:Checking exceptions
2021-04-05 03:26:58,037:INFO:Preloading libraries
2021-04-05 03:26:58,337:INFO:create_model_container: 19
2021-04-05 03:26:58,337:INFO:master_model_container: 19
2021-04-05 03:26:58,337:INFO:display_container: 4
2021-04-05 03:26:58,338:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True))
2021-04-05 03:26:58,338:INFO:tune_model() succesfully completed......................................
2021-04-05 03:26:58,458:INFO:Initializing plot_model()
2021-04-05 03:26:58,459:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:26:58,459:INFO:Checking exceptions
2021-04-05 03:26:58,459:INFO:Preparing display monitor
2021-04-05 03:26:58,467:INFO:Preloading libraries
2021-04-05 03:26:58,468:INFO:Copying training dataset
2021-04-05 03:26:58,469:INFO:Copying test dataset
2021-04-05 03:26:58,470:INFO:Plot type: residuals
2021-04-05 03:26:58,510:INFO:Fitting Model
2021-04-05 03:26:58,551:INFO:Scoring test/hold-out set
2021-04-05 03:26:59,245:INFO:Visual Rendered Successfully
2021-04-05 03:26:59,410:INFO:plot_model() succesfully completed......................................
2021-04-05 03:26:59,425:INFO:Initializing plot_model()
2021-04-05 03:26:59,426:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:26:59,427:INFO:Checking exceptions
2021-04-05 03:26:59,427:INFO:Preparing display monitor
2021-04-05 03:26:59,440:INFO:Preloading libraries
2021-04-05 03:26:59,444:INFO:Copying training dataset
2021-04-05 03:26:59,445:INFO:Copying test dataset
2021-04-05 03:26:59,445:INFO:Plot type: error
2021-04-05 03:26:59,448:INFO:Fitting Model
2021-04-05 03:26:59,450:INFO:Scoring test/hold-out set
2021-04-05 03:26:59,847:INFO:Visual Rendered Successfully
2021-04-05 03:26:59,946:INFO:plot_model() succesfully completed......................................
2021-04-05 03:26:59,956:INFO:Initializing plot_model()
2021-04-05 03:26:59,956:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:26:59,956:INFO:Checking exceptions
2021-04-05 03:26:59,956:INFO:Preparing display monitor
2021-04-05 03:26:59,963:INFO:Preloading libraries
2021-04-05 03:26:59,965:INFO:Copying training dataset
2021-04-05 03:26:59,966:INFO:Copying test dataset
2021-04-05 03:26:59,967:INFO:Plot type: feature
2021-04-05 03:27:00,273:INFO:Visual Rendered Successfully
2021-04-05 03:27:00,363:INFO:plot_model() succesfully completed......................................
2021-04-05 03:27:00,394:INFO:Initializing evaluate_model()
2021-04-05 03:27:00,394:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-05 03:27:00,442:INFO:Initializing plot_model()
2021-04-05 03:27:00,443:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(copy_X=True, fit_intercept=False, n_jobs=-1,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=False,
                                                           n_jobs=-1,
                                                           normalize=True)), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:27:00,443:INFO:Checking exceptions
2021-04-05 03:27:00,443:INFO:Preparing display monitor
2021-04-05 03:27:00,459:INFO:Preloading libraries
2021-04-05 03:27:00,462:INFO:Copying training dataset
2021-04-05 03:27:00,462:INFO:Copying test dataset
2021-04-05 03:27:00,463:INFO:Plot type: parameter
2021-04-05 03:27:00,479:INFO:Visual Rendered Successfully
2021-04-05 03:27:00,587:INFO:plot_model() succesfully completed......................................
2021-04-05 03:27:00,615:INFO:Initializing automl()
2021-04-05 03:27:00,616:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-05 03:27:00,616:INFO:Model Selection Basis : CV Results on Training set
2021-04-05 03:27:00,626:INFO:Initializing create_model()
2021-04-05 03:27:00,626:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:27:00,626:INFO:Checking exceptions
2021-04-05 03:27:00,627:INFO:Importing libraries
2021-04-05 03:27:00,627:INFO:Copying training dataset
2021-04-05 03:27:00,627:INFO:Defining folds
2021-04-05 03:27:00,627:INFO:Declaring metric variables
2021-04-05 03:27:00,628:INFO:Importing untrained model
2021-04-05 03:27:00,628:INFO:Declaring custom model
2021-04-05 03:27:00,629:INFO:Bayesian Ridge Imported succesfully
2021-04-05 03:27:00,630:INFO:Cross validation set to False
2021-04-05 03:27:00,630:INFO:Fitting Model
2021-04-05 03:27:00,640:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:27:00,640:INFO:create_models() succesfully completed......................................
2021-04-05 03:27:00,756:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:27:00,756:INFO:automl() succesfully completed......................................
2021-04-05 03:27:00,768:INFO:Initializing predict_model()
2021-04-05 03:27:00,768:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:27:00,768:INFO:Checking exceptions
2021-04-05 03:27:00,768:INFO:Preloading libraries
2021-04-05 03:27:00,768:INFO:Preparing display monitor
2021-04-05 03:27:00,985:INFO:Initializing finalize_model()
2021-04-05 03:27:00,986:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-05 03:27:00,987:INFO:Finalizing PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:27:00,988:INFO:Initializing create_model()
2021-04-05 03:27:00,988:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:27:00,988:INFO:Checking exceptions
2021-04-05 03:27:00,988:INFO:Importing libraries
2021-04-05 03:27:00,988:INFO:Copying training dataset
2021-04-05 03:27:00,989:INFO:Defining folds
2021-04-05 03:27:00,989:INFO:Declaring metric variables
2021-04-05 03:27:00,989:INFO:Importing untrained model
2021-04-05 03:27:00,989:INFO:Declaring custom model
2021-04-05 03:27:00,990:INFO:Bayesian Ridge Imported succesfully
2021-04-05 03:27:00,990:INFO:Starting cross validation
2021-04-05 03:27:00,990:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:01,239:INFO:Calculating mean and std
2021-04-05 03:27:01,240:INFO:Creating metrics dataframe
2021-04-05 03:27:01,244:INFO:Finalizing model
2021-04-05 03:27:01,254:INFO:Uploading results into container
2021-04-05 03:27:01,254:INFO:Uploading model into container now
2021-04-05 03:27:01,254:INFO:create_model_container: 20
2021-04-05 03:27:01,255:INFO:master_model_container: 20
2021-04-05 03:27:01,255:INFO:display_container: 6
2021-04-05 03:27:01,256:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:27:01,256:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:01,394:INFO:Creating MLFlow logs
2021-04-05 03:27:01,398:INFO:Model: Bayesian Ridge
2021-04-05 03:27:01,471:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-05 03:27:01,608:INFO:Initializing predict_model()
2021-04-05 03:27:01,609:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:27:01,609:INFO:Checking exceptions
2021-04-05 03:27:01,609:INFO:Preloading libraries
2021-04-05 03:27:01,865:INFO:create_model_container: 20
2021-04-05 03:27:01,866:INFO:master_model_container: 20
2021-04-05 03:27:01,866:INFO:display_container: 5
2021-04-05 03:27:01,867:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:27:01,867:INFO:finalize_model() succesfully completed......................................
2021-04-05 03:27:02,063:INFO:Initializing predict_model()
2021-04-05 03:27:02,064:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:27:02,064:INFO:Checking exceptions
2021-04-05 03:27:02,064:INFO:Preloading libraries
2021-04-05 03:27:02,065:INFO:Preparing display monitor
2021-04-05 03:27:02,236:INFO:Initializing predict_model()
2021-04-05 03:27:02,237:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:27:02,237:INFO:Checking exceptions
2021-04-05 03:27:02,238:INFO:Preloading libraries
2021-04-05 03:27:02,238:INFO:Preparing display monitor
2021-04-05 03:27:02,604:INFO:Initializing save_model()
2021-04-05 03:27:02,605:INFO:save_model(model=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), model_name=saved_models/best_3rd_model_to_predict_CollegeEnrollmentRate_LR, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2021-04-05 03:27:02,605:INFO:Adding model into prep_pipe
2021-04-05 03:27:02,648:INFO:saved_models/best_3rd_model_to_predict_CollegeEnrollmentRate_LR.pkl saved in current working directory
2021-04-05 03:27:02,664:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                                                 lambda_init=None, n_iter=300,
                                                 normalize=False,
                                                 power_transformer_method='box-cox',
                                                 power_transformer_standardize=True,
                                                 regressor=BayesianRidge(alpha_1=1e-06,
                                                                         alpha_2=1e-06,
                                                                         alpha_init=None,
                                                                         compute_score=False,
                                                                         copy_X=True,
                                                                         fit_intercept=True,
                                                                         lambda_1=1e-06,
                                                                         lambda_2=1e-06,
                                                                         lambda_init=None,
                                                                         n_iter=300,
                                                                         normalize=False,
                                                                         tol=0.001,
                                                                         verbose=False),
                                                 tol=0.001, verbose=False)]],
         verbose=False)
2021-04-05 03:27:02,665:INFO:save_model() succesfully completed......................................
2021-04-05 03:27:02,948:INFO:PyCaret Supervised Module
2021-04-05 03:27:02,948:INFO:ML Usecase: regression
2021-04-05 03:27:02,948:INFO:version 2.3.0
2021-04-05 03:27:02,948:INFO:Initializing setup()
2021-04-05 03:27:02,948:INFO:setup(target=College Enrollment Rate, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.05, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=True, multicollinearity_threshold=0.95, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=786, log_experiment=True, experiment_name=school, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-05 03:27:02,949:INFO:Checking environment
2021-04-05 03:27:02,950:INFO:python_version: 3.9.1
2021-04-05 03:27:02,950:INFO:python_build: ('tags/v3.9.1:1e5d33e', 'Dec  7 2020 17:08:21')
2021-04-05 03:27:02,950:INFO:machine: AMD64
2021-04-05 03:27:02,950:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-05 03:27:02,952:WARNING:cannot find psutil installation. memory not traceable. Install psutil using pip to enable memory logging.
2021-04-05 03:27:02,952:INFO:Checking libraries
2021-04-05 03:27:02,952:INFO:pd==1.2.2
2021-04-05 03:27:02,952:INFO:numpy==1.19.5
2021-04-05 03:27:02,952:INFO:sklearn==0.23.2
2021-04-05 03:27:02,952:INFO:lightgbm==3.1.1
2021-04-05 03:27:02,953:WARNING:catboost not found
2021-04-05 03:27:02,953:INFO:xgboost==1.3.3
2021-04-05 03:27:02,953:INFO:mlflow==1.14.1
2021-04-05 03:27:02,953:INFO:Checking Exceptions
2021-04-05 03:27:02,953:INFO:Declaring global variables
2021-04-05 03:27:02,954:INFO:USI: 1a2d
2021-04-05 03:27:02,954:INFO:pycaret_globals: {'fold_groups_param', 'X_test', 'display_container', '_available_plots', 'target_param', 'data_before_preprocess', 'USI', 'X_train', 'exp_name_log', 'transform_target_param', 'prep_pipe', 'fold_shuffle_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'fix_imbalance_method_param', 'X', '_all_models', '_all_metrics', '_ml_usecase', 'transform_target_method_param', 'pycaret_globals', 'imputation_regressor', 'create_model_container', 'y_train', 'n_jobs_param', 'seed', 'iterative_imputation_iters_param', 'y_test', 'y', 'experiment__', 'html_param', 'imputation_classifier', '_internal_pipeline', '_gpu_n_jobs_param', 'master_model_container', 'stratify_param', '_all_models_internal', 'logging_param', 'fix_imbalance_param', 'fold_param'}
2021-04-05 03:27:02,954:INFO:Preparing display monitor
2021-04-05 03:27:02,954:INFO:Preparing display monitor
2021-04-05 03:27:02,976:INFO:Importing libraries
2021-04-05 03:27:02,976:INFO:Copying data for preprocessing
2021-04-05 03:27:02,998:INFO:Declaring preprocessing parameters
2021-04-05 03:27:02,999:INFO:Creating preprocessing pipeline
2021-04-05 03:27:03,012:INFO:Preprocessing pipeline created successfully
2021-04-05 03:27:03,013:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-05 03:27:03,013:INFO:Creating global containers
2021-04-05 03:27:03,013:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-05 03:27:04,924:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-05 03:27:05,056:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-05 03:27:05,056:INFO:Creating grid variables
2021-04-05 03:27:05,073:INFO:Logging experiment in MLFlow
2021-04-05 03:27:05,080:WARNING:Couldn't create mlflow experiment. Exception:
2021-04-05 03:27:05,082:WARNING:Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 1699, in setup
    mlflow.create_experiment(exp_name_log)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\fluent.py", line 830, in create_experiment
    return MlflowClient().create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\client.py", line 456, in create_experiment
    return self._tracking_client.create_experiment(name, artifact_location)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 140, in create_experiment
    return self.store.create_experiment(name=name, artifact_location=artifact_location,)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 286, in create_experiment
    self._validate_experiment_name(name)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\mlflow\store\tracking\file_store.py", line 279, in _validate_experiment_name
    raise MlflowException(
mlflow.exceptions.MlflowException: Experiment 'school' already exists.

2021-04-05 03:27:05,256:INFO:SubProcess save_model() called ==================================
2021-04-05 03:27:05,267:INFO:Initializing save_model()
2021-04-05 03:27:05,268:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False, kwargs={})
2021-04-05 03:27:05,268:INFO:Adding model into prep_pipe
2021-04-05 03:27:05,270:WARNING:Only Model saved as it was a pipeline.
2021-04-05 03:27:05,287:INFO:Transformation Pipeline.pkl saved in current working directory
2021-04-05 03:27:05,293:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-05 03:27:05,294:INFO:save_model() succesfully completed......................................
2021-04-05 03:27:05,383:INFO:SubProcess save_model() end ==================================
2021-04-05 03:27:05,455:INFO:create_model_container: 0
2021-04-05 03:27:05,455:INFO:master_model_container: 0
2021-04-05 03:27:05,455:INFO:display_container: 1
2021-04-05 03:27:05,462:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-05 03:27:05,462:INFO:setup() succesfully completed......................................
2021-04-05 03:27:05,562:INFO:Initializing compare_models()
2021-04-05 03:27:05,562:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-05 03:27:05,563:INFO:Checking exceptions
2021-04-05 03:27:05,563:INFO:Preparing display monitor
2021-04-05 03:27:05,563:INFO:Preparing display monitor
2021-04-05 03:27:05,610:INFO:Initializing Linear Regression
2021-04-05 03:27:05,610:INFO:Total runtime is 0.0 minutes
2021-04-05 03:27:05,626:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:05,627:INFO:Initializing create_model()
2021-04-05 03:27:05,627:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:05,628:INFO:Checking exceptions
2021-04-05 03:27:05,628:INFO:Importing libraries
2021-04-05 03:27:05,628:INFO:Copying training dataset
2021-04-05 03:27:05,629:INFO:Defining folds
2021-04-05 03:27:05,630:INFO:Declaring metric variables
2021-04-05 03:27:05,645:INFO:Importing untrained model
2021-04-05 03:27:05,658:INFO:Linear Regression Imported succesfully
2021-04-05 03:27:05,689:INFO:Starting cross validation
2021-04-05 03:27:05,690:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:05,966:INFO:Calculating mean and std
2021-04-05 03:27:05,968:INFO:Creating metrics dataframe
2021-04-05 03:27:05,980:INFO:Uploading results into container
2021-04-05 03:27:05,980:INFO:Uploading model into container now
2021-04-05 03:27:05,980:INFO:create_model_container: 1
2021-04-05 03:27:05,981:INFO:master_model_container: 1
2021-04-05 03:27:05,981:INFO:display_container: 2
2021-04-05 03:27:05,982:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-05 03:27:05,983:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:06,214:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:06,215:INFO:Creating metrics dataframe
2021-04-05 03:27:06,263:INFO:Initializing Lasso Regression
2021-04-05 03:27:06,263:INFO:Total runtime is 0.01087813377380371 minutes
2021-04-05 03:27:06,287:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:06,288:INFO:Initializing create_model()
2021-04-05 03:27:06,288:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:06,289:INFO:Checking exceptions
2021-04-05 03:27:06,289:INFO:Importing libraries
2021-04-05 03:27:06,289:INFO:Copying training dataset
2021-04-05 03:27:06,291:INFO:Defining folds
2021-04-05 03:27:06,291:INFO:Declaring metric variables
2021-04-05 03:27:06,309:INFO:Importing untrained model
2021-04-05 03:27:06,327:INFO:Lasso Regression Imported succesfully
2021-04-05 03:27:06,367:INFO:Starting cross validation
2021-04-05 03:27:06,368:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:06,502:INFO:Calculating mean and std
2021-04-05 03:27:06,505:INFO:Creating metrics dataframe
2021-04-05 03:27:06,518:INFO:Uploading results into container
2021-04-05 03:27:06,518:INFO:Uploading model into container now
2021-04-05 03:27:06,518:INFO:create_model_container: 2
2021-04-05 03:27:06,518:INFO:master_model_container: 2
2021-04-05 03:27:06,519:INFO:display_container: 2
2021-04-05 03:27:06,521:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=786,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-05 03:27:06,521:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:06,630:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:06,630:INFO:Creating metrics dataframe
2021-04-05 03:27:06,655:INFO:Initializing Ridge Regression
2021-04-05 03:27:06,655:INFO:Total runtime is 0.0174120823542277 minutes
2021-04-05 03:27:06,674:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:06,675:INFO:Initializing create_model()
2021-04-05 03:27:06,675:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:06,675:INFO:Checking exceptions
2021-04-05 03:27:06,675:INFO:Importing libraries
2021-04-05 03:27:06,675:INFO:Copying training dataset
2021-04-05 03:27:06,677:INFO:Defining folds
2021-04-05 03:27:06,677:INFO:Declaring metric variables
2021-04-05 03:27:06,705:INFO:Importing untrained model
2021-04-05 03:27:06,716:INFO:Ridge Regression Imported succesfully
2021-04-05 03:27:06,744:INFO:Starting cross validation
2021-04-05 03:27:06,745:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:06,851:INFO:Calculating mean and std
2021-04-05 03:27:06,854:INFO:Creating metrics dataframe
2021-04-05 03:27:06,862:INFO:Uploading results into container
2021-04-05 03:27:06,862:INFO:Uploading model into container now
2021-04-05 03:27:06,866:INFO:create_model_container: 3
2021-04-05 03:27:06,866:INFO:master_model_container: 3
2021-04-05 03:27:06,866:INFO:display_container: 2
2021-04-05 03:27:06,868:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-05 03:27:06,868:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:06,989:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:06,989:INFO:Creating metrics dataframe
2021-04-05 03:27:07,017:INFO:Initializing Elastic Net
2021-04-05 03:27:07,017:INFO:Total runtime is 0.023446277777353922 minutes
2021-04-05 03:27:07,043:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:07,044:INFO:Initializing create_model()
2021-04-05 03:27:07,044:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:07,044:INFO:Checking exceptions
2021-04-05 03:27:07,045:INFO:Importing libraries
2021-04-05 03:27:07,047:INFO:Copying training dataset
2021-04-05 03:27:07,050:INFO:Defining folds
2021-04-05 03:27:07,050:INFO:Declaring metric variables
2021-04-05 03:27:07,076:INFO:Importing untrained model
2021-04-05 03:27:07,093:INFO:Elastic Net Imported succesfully
2021-04-05 03:27:07,123:INFO:Starting cross validation
2021-04-05 03:27:07,125:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:07,383:INFO:Calculating mean and std
2021-04-05 03:27:07,384:INFO:Creating metrics dataframe
2021-04-05 03:27:07,391:INFO:Uploading results into container
2021-04-05 03:27:07,391:INFO:Uploading model into container now
2021-04-05 03:27:07,391:INFO:create_model_container: 4
2021-04-05 03:27:07,392:INFO:master_model_container: 4
2021-04-05 03:27:07,392:INFO:display_container: 2
2021-04-05 03:27:07,395:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=786,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=786,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-05 03:27:07,395:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:07,494:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:07,494:INFO:Creating metrics dataframe
2021-04-05 03:27:07,524:INFO:Initializing Least Angle Regression
2021-04-05 03:27:07,524:INFO:Total runtime is 0.031891024112701415 minutes
2021-04-05 03:27:07,538:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:07,539:INFO:Initializing create_model()
2021-04-05 03:27:07,539:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:07,539:INFO:Checking exceptions
2021-04-05 03:27:07,539:INFO:Importing libraries
2021-04-05 03:27:07,539:INFO:Copying training dataset
2021-04-05 03:27:07,541:INFO:Defining folds
2021-04-05 03:27:07,541:INFO:Declaring metric variables
2021-04-05 03:27:07,561:INFO:Importing untrained model
2021-04-05 03:27:07,577:INFO:Least Angle Regression Imported succesfully
2021-04-05 03:27:07,598:INFO:Starting cross validation
2021-04-05 03:27:07,600:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:09,650:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-05 03:27:09,650:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-05 03:27:09,651:INFO:Initializing create_model()
2021-04-05 03:27:09,651:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:09,651:INFO:Checking exceptions
2021-04-05 03:27:09,651:INFO:Importing libraries
2021-04-05 03:27:09,651:INFO:Copying training dataset
2021-04-05 03:27:09,652:INFO:Defining folds
2021-04-05 03:27:09,652:INFO:Declaring metric variables
2021-04-05 03:27:09,661:INFO:Importing untrained model
2021-04-05 03:27:09,671:INFO:Least Angle Regression Imported succesfully
2021-04-05 03:27:09,699:INFO:Starting cross validation
2021-04-05 03:27:09,700:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:15,975:ERROR:create_model() for lar raised an exception:
2021-04-05 03:27:15,975:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 440, in result
    return self.__get_result()
  File "c:\users\takhi\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-05 03:27:15,975:INFO:Initializing Lasso Least Angle Regression
2021-04-05 03:27:15,975:INFO:Total runtime is 0.17274215618769329 minutes
2021-04-05 03:27:15,984:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:15,985:INFO:Initializing create_model()
2021-04-05 03:27:15,985:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:15,985:INFO:Checking exceptions
2021-04-05 03:27:15,985:INFO:Importing libraries
2021-04-05 03:27:15,985:INFO:Copying training dataset
2021-04-05 03:27:15,986:INFO:Defining folds
2021-04-05 03:27:15,986:INFO:Declaring metric variables
2021-04-05 03:27:15,996:INFO:Importing untrained model
2021-04-05 03:27:16,015:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-05 03:27:16,055:INFO:Starting cross validation
2021-04-05 03:27:16,056:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:22,766:INFO:Calculating mean and std
2021-04-05 03:27:22,768:INFO:Creating metrics dataframe
2021-04-05 03:27:22,777:INFO:Uploading results into container
2021-04-05 03:27:22,777:INFO:Uploading model into container now
2021-04-05 03:27:22,777:INFO:create_model_container: 5
2021-04-05 03:27:22,778:INFO:master_model_container: 5
2021-04-05 03:27:22,778:INFO:display_container: 2
2021-04-05 03:27:22,780:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=786,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=786,
                                                    verbose=False),
                                verbose=False)
2021-04-05 03:27:22,780:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:22,898:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:22,898:INFO:Creating metrics dataframe
2021-04-05 03:27:22,924:INFO:Initializing Orthogonal Matching Pursuit
2021-04-05 03:27:22,924:INFO:Total runtime is 0.2885597626368205 minutes
2021-04-05 03:27:22,935:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:22,936:INFO:Initializing create_model()
2021-04-05 03:27:22,937:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:22,939:INFO:Checking exceptions
2021-04-05 03:27:22,940:INFO:Importing libraries
2021-04-05 03:27:22,941:INFO:Copying training dataset
2021-04-05 03:27:22,943:INFO:Defining folds
2021-04-05 03:27:22,944:INFO:Declaring metric variables
2021-04-05 03:27:22,959:INFO:Importing untrained model
2021-04-05 03:27:22,978:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-05 03:27:23,027:INFO:Starting cross validation
2021-04-05 03:27:23,028:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:23,141:INFO:Calculating mean and std
2021-04-05 03:27:23,142:INFO:Creating metrics dataframe
2021-04-05 03:27:23,147:INFO:Uploading results into container
2021-04-05 03:27:23,147:INFO:Uploading model into container now
2021-04-05 03:27:23,147:INFO:create_model_container: 6
2021-04-05 03:27:23,147:INFO:master_model_container: 6
2021-04-05 03:27:23,147:INFO:display_container: 2
2021-04-05 03:27:23,149:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-05 03:27:23,149:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:23,281:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:23,281:INFO:Creating metrics dataframe
2021-04-05 03:27:23,312:INFO:Initializing Bayesian Ridge
2021-04-05 03:27:23,312:INFO:Total runtime is 0.2950263500213623 minutes
2021-04-05 03:27:23,323:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:23,323:INFO:Initializing create_model()
2021-04-05 03:27:23,324:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:23,324:INFO:Checking exceptions
2021-04-05 03:27:23,324:INFO:Importing libraries
2021-04-05 03:27:23,324:INFO:Copying training dataset
2021-04-05 03:27:23,325:INFO:Defining folds
2021-04-05 03:27:23,325:INFO:Declaring metric variables
2021-04-05 03:27:23,347:INFO:Importing untrained model
2021-04-05 03:27:23,368:INFO:Bayesian Ridge Imported succesfully
2021-04-05 03:27:23,401:INFO:Starting cross validation
2021-04-05 03:27:23,402:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:23,529:INFO:Calculating mean and std
2021-04-05 03:27:23,531:INFO:Creating metrics dataframe
2021-04-05 03:27:23,539:INFO:Uploading results into container
2021-04-05 03:27:23,539:INFO:Uploading model into container now
2021-04-05 03:27:23,539:INFO:create_model_container: 7
2021-04-05 03:27:23,540:INFO:master_model_container: 7
2021-04-05 03:27:23,540:INFO:display_container: 2
2021-04-05 03:27:23,542:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:27:23,542:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:23,642:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:23,642:INFO:Creating metrics dataframe
2021-04-05 03:27:23,673:INFO:Initializing Passive Aggressive Regressor
2021-04-05 03:27:23,674:INFO:Total runtime is 0.30106088320414226 minutes
2021-04-05 03:27:23,695:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:23,695:INFO:Initializing create_model()
2021-04-05 03:27:23,695:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:23,696:INFO:Checking exceptions
2021-04-05 03:27:23,696:INFO:Importing libraries
2021-04-05 03:27:23,696:INFO:Copying training dataset
2021-04-05 03:27:23,698:INFO:Defining folds
2021-04-05 03:27:23,698:INFO:Declaring metric variables
2021-04-05 03:27:23,709:INFO:Importing untrained model
2021-04-05 03:27:23,721:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-05 03:27:23,749:INFO:Starting cross validation
2021-04-05 03:27:23,750:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:23,940:INFO:Calculating mean and std
2021-04-05 03:27:23,944:INFO:Creating metrics dataframe
2021-04-05 03:27:23,954:INFO:Uploading results into container
2021-04-05 03:27:23,954:INFO:Uploading model into container now
2021-04-05 03:27:23,955:INFO:create_model_container: 8
2021-04-05 03:27:23,956:INFO:master_model_container: 8
2021-04-05 03:27:23,956:INFO:display_container: 2
2021-04-05 03:27:23,959:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=786,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:27:23,959:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:24,190:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:24,190:INFO:Creating metrics dataframe
2021-04-05 03:27:24,226:INFO:Initializing Huber Regressor
2021-04-05 03:27:24,226:INFO:Total runtime is 0.31026628414789836 minutes
2021-04-05 03:27:24,240:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:24,241:INFO:Initializing create_model()
2021-04-05 03:27:24,241:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:24,241:INFO:Checking exceptions
2021-04-05 03:27:24,241:INFO:Importing libraries
2021-04-05 03:27:24,241:INFO:Copying training dataset
2021-04-05 03:27:24,243:INFO:Defining folds
2021-04-05 03:27:24,243:INFO:Declaring metric variables
2021-04-05 03:27:24,263:INFO:Importing untrained model
2021-04-05 03:27:24,277:INFO:Huber Regressor Imported succesfully
2021-04-05 03:27:24,300:INFO:Starting cross validation
2021-04-05 03:27:24,301:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:24,528:INFO:Calculating mean and std
2021-04-05 03:27:24,529:INFO:Creating metrics dataframe
2021-04-05 03:27:24,534:INFO:Uploading results into container
2021-04-05 03:27:24,534:INFO:Uploading model into container now
2021-04-05 03:27:24,534:INFO:create_model_container: 9
2021-04-05 03:27:24,535:INFO:master_model_container: 9
2021-04-05 03:27:24,535:INFO:display_container: 2
2021-04-05 03:27:24,539:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-05 03:27:24,540:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:24,671:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:24,671:INFO:Creating metrics dataframe
2021-04-05 03:27:24,697:INFO:Initializing K Neighbors Regressor
2021-04-05 03:27:24,698:INFO:Total runtime is 0.3181237816810608 minutes
2021-04-05 03:27:24,711:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:24,712:INFO:Initializing create_model()
2021-04-05 03:27:24,712:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:24,713:INFO:Checking exceptions
2021-04-05 03:27:24,713:INFO:Importing libraries
2021-04-05 03:27:24,713:INFO:Copying training dataset
2021-04-05 03:27:24,715:INFO:Defining folds
2021-04-05 03:27:24,716:INFO:Declaring metric variables
2021-04-05 03:27:24,729:INFO:Importing untrained model
2021-04-05 03:27:24,748:INFO:K Neighbors Regressor Imported succesfully
2021-04-05 03:27:24,775:INFO:Starting cross validation
2021-04-05 03:27:24,776:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:24,906:INFO:Calculating mean and std
2021-04-05 03:27:24,907:INFO:Creating metrics dataframe
2021-04-05 03:27:24,919:INFO:Uploading results into container
2021-04-05 03:27:24,920:INFO:Uploading model into container now
2021-04-05 03:27:24,920:INFO:create_model_container: 10
2021-04-05 03:27:24,920:INFO:master_model_container: 10
2021-04-05 03:27:24,920:INFO:display_container: 2
2021-04-05 03:27:24,922:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-05 03:27:24,923:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:25,028:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:25,029:INFO:Creating metrics dataframe
2021-04-05 03:27:25,055:INFO:Initializing Decision Tree Regressor
2021-04-05 03:27:25,056:INFO:Total runtime is 0.3240898370742798 minutes
2021-04-05 03:27:25,065:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:25,066:INFO:Initializing create_model()
2021-04-05 03:27:25,066:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:25,067:INFO:Checking exceptions
2021-04-05 03:27:25,067:INFO:Importing libraries
2021-04-05 03:27:25,067:INFO:Copying training dataset
2021-04-05 03:27:25,069:INFO:Defining folds
2021-04-05 03:27:25,069:INFO:Declaring metric variables
2021-04-05 03:27:25,085:INFO:Importing untrained model
2021-04-05 03:27:25,102:INFO:Decision Tree Regressor Imported succesfully
2021-04-05 03:27:25,128:INFO:Starting cross validation
2021-04-05 03:27:25,129:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:25,337:INFO:Calculating mean and std
2021-04-05 03:27:25,339:INFO:Creating metrics dataframe
2021-04-05 03:27:25,349:INFO:Uploading results into container
2021-04-05 03:27:25,349:INFO:Uploading model into container now
2021-04-05 03:27:25,349:INFO:create_model_container: 11
2021-04-05 03:27:25,350:INFO:master_model_container: 11
2021-04-05 03:27:25,350:INFO:display_container: 2
2021-04-05 03:27:25,354:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=786,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=786,
                                                                splitter='best'),
                                splitter='best')
2021-04-05 03:27:25,354:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:25,557:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:25,557:INFO:Creating metrics dataframe
2021-04-05 03:27:25,594:INFO:Initializing Random Forest Regressor
2021-04-05 03:27:25,594:INFO:Total runtime is 0.3330596685409546 minutes
2021-04-05 03:27:25,607:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:25,608:INFO:Initializing create_model()
2021-04-05 03:27:25,608:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:25,609:INFO:Checking exceptions
2021-04-05 03:27:25,609:INFO:Importing libraries
2021-04-05 03:27:25,609:INFO:Copying training dataset
2021-04-05 03:27:25,610:INFO:Defining folds
2021-04-05 03:27:25,610:INFO:Declaring metric variables
2021-04-05 03:27:25,624:INFO:Importing untrained model
2021-04-05 03:27:25,642:INFO:Random Forest Regressor Imported succesfully
2021-04-05 03:27:25,666:INFO:Starting cross validation
2021-04-05 03:27:25,668:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:26,988:INFO:Calculating mean and std
2021-04-05 03:27:26,989:INFO:Creating metrics dataframe
2021-04-05 03:27:26,997:INFO:Uploading results into container
2021-04-05 03:27:26,998:INFO:Uploading model into container now
2021-04-05 03:27:26,998:INFO:create_model_container: 12
2021-04-05 03:27:26,998:INFO:master_model_container: 12
2021-04-05 03:27:26,998:INFO:display_container: 2
2021-04-05 03:27:27,003:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=786,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-05 03:27:27,004:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:27,139:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:27,139:INFO:Creating metrics dataframe
2021-04-05 03:27:27,171:INFO:Initializing Extra Trees Regressor
2021-04-05 03:27:27,171:INFO:Total runtime is 0.359340759118398 minutes
2021-04-05 03:27:27,197:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:27,198:INFO:Initializing create_model()
2021-04-05 03:27:27,198:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:27,198:INFO:Checking exceptions
2021-04-05 03:27:27,198:INFO:Importing libraries
2021-04-05 03:27:27,199:INFO:Copying training dataset
2021-04-05 03:27:27,200:INFO:Defining folds
2021-04-05 03:27:27,201:INFO:Declaring metric variables
2021-04-05 03:27:27,211:INFO:Importing untrained model
2021-04-05 03:27:27,228:INFO:Extra Trees Regressor Imported succesfully
2021-04-05 03:27:27,250:INFO:Starting cross validation
2021-04-05 03:27:27,251:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:28,326:INFO:Calculating mean and std
2021-04-05 03:27:28,327:INFO:Creating metrics dataframe
2021-04-05 03:27:28,332:INFO:Uploading results into container
2021-04-05 03:27:28,333:INFO:Uploading model into container now
2021-04-05 03:27:28,333:INFO:create_model_container: 13
2021-04-05 03:27:28,333:INFO:master_model_container: 13
2021-04-05 03:27:28,333:INFO:display_container: 2
2021-04-05 03:27:28,337:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=786,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-05 03:27:28,337:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:28,452:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:28,453:INFO:Creating metrics dataframe
2021-04-05 03:27:28,483:INFO:Initializing AdaBoost Regressor
2021-04-05 03:27:28,483:INFO:Total runtime is 0.3812108635902405 minutes
2021-04-05 03:27:28,497:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:28,497:INFO:Initializing create_model()
2021-04-05 03:27:28,497:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:28,498:INFO:Checking exceptions
2021-04-05 03:27:28,498:INFO:Importing libraries
2021-04-05 03:27:28,498:INFO:Copying training dataset
2021-04-05 03:27:28,499:INFO:Defining folds
2021-04-05 03:27:28,499:INFO:Declaring metric variables
2021-04-05 03:27:28,525:INFO:Importing untrained model
2021-04-05 03:27:28,543:INFO:AdaBoost Regressor Imported succesfully
2021-04-05 03:27:28,565:INFO:Starting cross validation
2021-04-05 03:27:28,565:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:28,931:INFO:Calculating mean and std
2021-04-05 03:27:28,933:INFO:Creating metrics dataframe
2021-04-05 03:27:28,938:INFO:Uploading results into container
2021-04-05 03:27:28,939:INFO:Uploading model into container now
2021-04-05 03:27:28,939:INFO:create_model_container: 14
2021-04-05 03:27:28,939:INFO:master_model_container: 14
2021-04-05 03:27:28,939:INFO:display_container: 2
2021-04-05 03:27:28,941:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=786))
2021-04-05 03:27:28,941:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:29,064:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:29,064:INFO:Creating metrics dataframe
2021-04-05 03:27:29,117:INFO:Initializing Gradient Boosting Regressor
2021-04-05 03:27:29,117:INFO:Total runtime is 0.39177669286727906 minutes
2021-04-05 03:27:29,135:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:29,135:INFO:Initializing create_model()
2021-04-05 03:27:29,136:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:29,136:INFO:Checking exceptions
2021-04-05 03:27:29,136:INFO:Importing libraries
2021-04-05 03:27:29,136:INFO:Copying training dataset
2021-04-05 03:27:29,142:INFO:Defining folds
2021-04-05 03:27:29,143:INFO:Declaring metric variables
2021-04-05 03:27:29,167:INFO:Importing untrained model
2021-04-05 03:27:29,194:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-05 03:27:29,229:INFO:Starting cross validation
2021-04-05 03:27:29,230:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:29,714:INFO:Calculating mean and std
2021-04-05 03:27:29,716:INFO:Creating metrics dataframe
2021-04-05 03:27:29,722:INFO:Uploading results into container
2021-04-05 03:27:29,723:INFO:Uploading model into container now
2021-04-05 03:27:29,724:INFO:create_model_container: 15
2021-04-05 03:27:29,724:INFO:master_model_container: 15
2021-04-05 03:27:29,724:INFO:display_container: 2
2021-04-05 03:27:29,726:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=786,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-05 03:27:29,727:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:29,879:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:29,879:INFO:Creating metrics dataframe
2021-04-05 03:27:29,915:INFO:Initializing Extreme Gradient Boosting
2021-04-05 03:27:29,915:INFO:Total runtime is 0.4050760547320048 minutes
2021-04-05 03:27:29,931:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:29,931:INFO:Initializing create_model()
2021-04-05 03:27:29,931:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:29,932:INFO:Checking exceptions
2021-04-05 03:27:29,932:INFO:Importing libraries
2021-04-05 03:27:29,932:INFO:Copying training dataset
2021-04-05 03:27:29,933:INFO:Defining folds
2021-04-05 03:27:29,933:INFO:Declaring metric variables
2021-04-05 03:27:29,949:INFO:Importing untrained model
2021-04-05 03:27:29,970:INFO:Extreme Gradient Boosting Imported succesfully
2021-04-05 03:27:29,995:INFO:Starting cross validation
2021-04-05 03:27:29,995:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:33,972:INFO:Calculating mean and std
2021-04-05 03:27:33,975:INFO:Creating metrics dataframe
2021-04-05 03:27:33,986:INFO:Uploading results into container
2021-04-05 03:27:33,987:INFO:Uploading model into container now
2021-04-05 03:27:33,988:INFO:create_model_container: 16
2021-04-05 03:27:33,989:INFO:master_model_container: 16
2021-04-05 03:27:33,989:INFO:display_container: 2
2021-04-05 03:27:33,996:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=786,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-04-05 03:27:33,997:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:34,173:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:34,174:INFO:Creating metrics dataframe
2021-04-05 03:27:34,214:INFO:Initializing Light Gradient Boosting Machine
2021-04-05 03:27:34,214:INFO:Total runtime is 0.4767310659090678 minutes
2021-04-05 03:27:34,230:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:34,231:INFO:Initializing create_model()
2021-04-05 03:27:34,231:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503E3C9D0>, kwargs={})
2021-04-05 03:27:34,231:INFO:Checking exceptions
2021-04-05 03:27:34,231:INFO:Importing libraries
2021-04-05 03:27:34,231:INFO:Copying training dataset
2021-04-05 03:27:34,233:INFO:Defining folds
2021-04-05 03:27:34,233:INFO:Declaring metric variables
2021-04-05 03:27:34,251:INFO:Importing untrained model
2021-04-05 03:27:34,269:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-05 03:27:34,331:INFO:Starting cross validation
2021-04-05 03:27:34,332:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:35,782:INFO:Calculating mean and std
2021-04-05 03:27:35,784:INFO:Creating metrics dataframe
2021-04-05 03:27:35,795:INFO:Uploading results into container
2021-04-05 03:27:35,796:INFO:Uploading model into container now
2021-04-05 03:27:35,796:INFO:create_model_container: 17
2021-04-05 03:27:35,796:INFO:master_model_container: 17
2021-04-05 03:27:35,796:INFO:display_container: 2
2021-04-05 03:27:35,801:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=7...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=786,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-05 03:27:35,801:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:35,948:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:35,948:INFO:Creating metrics dataframe
2021-04-05 03:27:36,005:INFO:Initializing create_model()
2021-04-05 03:27:36,006:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:27:36,006:INFO:Checking exceptions
2021-04-05 03:27:36,007:INFO:Importing libraries
2021-04-05 03:27:36,007:INFO:Copying training dataset
2021-04-05 03:27:36,008:INFO:Defining folds
2021-04-05 03:27:36,008:INFO:Declaring metric variables
2021-04-05 03:27:36,008:INFO:Importing untrained model
2021-04-05 03:27:36,008:INFO:Declaring custom model
2021-04-05 03:27:36,010:INFO:Bayesian Ridge Imported succesfully
2021-04-05 03:27:36,011:INFO:Cross validation set to False
2021-04-05 03:27:36,011:INFO:Fitting Model
2021-04-05 03:27:36,030:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:27:36,030:INFO:create_models() succesfully completed......................................
2021-04-05 03:27:36,198:INFO:Creating MLFlow logs
2021-04-05 03:27:36,222:INFO:Model: Bayesian Ridge
2021-04-05 03:27:36,310:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-04-05 03:27:36,452:INFO:Initializing predict_model()
2021-04-05 03:27:36,452:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:27:36,452:INFO:Checking exceptions
2021-04-05 03:27:36,452:INFO:Preloading libraries
2021-04-05 03:27:36,801:INFO:Creating MLFlow logs
2021-04-05 03:27:36,822:INFO:Model: Ridge Regression
2021-04-05 03:27:36,913:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 786, 'solver': 'auto', 'tol': 0.001}
2021-04-05 03:27:37,295:INFO:Creating MLFlow logs
2021-04-05 03:27:37,316:INFO:Model: Linear Regression
2021-04-05 03:27:37,398:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-04-05 03:27:37,862:INFO:Creating MLFlow logs
2021-04-05 03:27:37,883:INFO:Model: Huber Regressor
2021-04-05 03:27:37,967:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-05 03:27:38,311:INFO:Creating MLFlow logs
2021-04-05 03:27:38,325:INFO:Model: Random Forest Regressor
2021-04-05 03:27:38,396:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-05 03:27:38,756:INFO:Creating MLFlow logs
2021-04-05 03:27:38,774:INFO:Model: AdaBoost Regressor
2021-04-05 03:27:38,850:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 786}
2021-04-05 03:27:39,241:INFO:Creating MLFlow logs
2021-04-05 03:27:39,264:INFO:Model: Extra Trees Regressor
2021-04-05 03:27:39,360:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 786, 'verbose': 0, 'warm_start': False}
2021-04-05 03:27:39,706:INFO:Creating MLFlow logs
2021-04-05 03:27:39,744:INFO:Model: Gradient Boosting Regressor
2021-04-05 03:27:39,870:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 786, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:27:40,229:INFO:Creating MLFlow logs
2021-04-05 03:27:40,252:INFO:Model: Light Gradient Boosting Machine
2021-04-05 03:27:40,332:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 786, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-04-05 03:27:40,799:INFO:Creating MLFlow logs
2021-04-05 03:27:40,820:INFO:Model: Extreme Gradient Boosting
2021-04-05 03:27:40,896:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'gamma': None, 'gpu_id': None, 'importance_type': 'gain', 'interaction_constraints': None, 'learning_rate': None, 'max_delta_step': None, 'max_depth': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 786, 'reg_alpha': None, 'reg_lambda': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2021-04-05 03:27:41,291:INFO:Creating MLFlow logs
2021-04-05 03:27:41,307:INFO:Model: Decision Tree Regressor
2021-04-05 03:27:41,395:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 786, 'splitter': 'best'}
2021-04-05 03:27:41,786:INFO:Creating MLFlow logs
2021-04-05 03:27:41,805:INFO:Model: Orthogonal Matching Pursuit
2021-04-05 03:27:41,900:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-04-05 03:27:42,279:INFO:Creating MLFlow logs
2021-04-05 03:27:42,298:INFO:Model: K Neighbors Regressor
2021-04-05 03:27:42,381:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-04-05 03:27:42,790:INFO:Creating MLFlow logs
2021-04-05 03:27:42,810:INFO:Model: Passive Aggressive Regressor
2021-04-05 03:27:42,898:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 786, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-04-05 03:27:43,363:INFO:Creating MLFlow logs
2021-04-05 03:27:43,388:INFO:Model: Elastic Net
2021-04-05 03:27:43,480:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-05 03:27:43,904:INFO:Creating MLFlow logs
2021-04-05 03:27:43,945:INFO:Model: Lasso Regression
2021-04-05 03:27:44,045:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 786, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-04-05 03:27:44,433:INFO:Creating MLFlow logs
2021-04-05 03:27:44,455:INFO:Model: Least Angle Regression
2021-04-05 03:27:44,572:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 786, 'verbose': False}
2021-04-05 03:27:45,059:INFO:create_model_container: 17
2021-04-05 03:27:45,060:INFO:master_model_container: 17
2021-04-05 03:27:45,060:INFO:display_container: 2
2021-04-05 03:27:45,061:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-05 03:27:45,062:INFO:compare_models() succesfully completed......................................
2021-04-05 03:27:45,079:INFO:Initializing create_model()
2021-04-05 03:27:45,080:INFO:create_model(estimator=huber, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, display=None, kwargs={})
2021-04-05 03:27:45,080:INFO:Checking exceptions
2021-04-05 03:27:45,080:INFO:Preparing display monitor
2021-04-05 03:27:45,133:INFO:Importing libraries
2021-04-05 03:27:45,133:INFO:Copying training dataset
2021-04-05 03:27:45,135:INFO:Defining folds
2021-04-05 03:27:45,135:INFO:Declaring metric variables
2021-04-05 03:27:45,149:INFO:Importing untrained model
2021-04-05 03:27:45,166:INFO:Huber Regressor Imported succesfully
2021-04-05 03:27:45,213:INFO:Starting cross validation
2021-04-05 03:27:45,214:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:45,801:INFO:Calculating mean and std
2021-04-05 03:27:45,804:INFO:Creating metrics dataframe
2021-04-05 03:27:45,837:INFO:Finalizing model
2021-04-05 03:27:45,913:INFO:Creating MLFlow logs
2021-04-05 03:27:45,958:INFO:Model: Huber Regressor
2021-04-05 03:27:46,066:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-05 03:27:46,313:INFO:Initializing predict_model()
2021-04-05 03:27:46,313:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:27:46,314:INFO:Checking exceptions
2021-04-05 03:27:46,314:INFO:Preloading libraries
2021-04-05 03:27:46,728:INFO:Uploading results into container
2021-04-05 03:27:46,728:INFO:Uploading model into container now
2021-04-05 03:27:46,750:INFO:create_model_container: 18
2021-04-05 03:27:46,750:INFO:master_model_container: 18
2021-04-05 03:27:46,750:INFO:display_container: 3
2021-04-05 03:27:46,751:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-05 03:27:46,751:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:46,924:INFO:Initializing tune_model()
2021-04-05 03:27:46,925:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-04-05 03:27:46,925:INFO:Checking exceptions
2021-04-05 03:27:46,925:INFO:Preparing display monitor
2021-04-05 03:27:46,952:INFO:Copying training dataset
2021-04-05 03:27:46,956:INFO:Checking base model
2021-04-05 03:27:46,957:INFO:Base model : Huber Regressor
2021-04-05 03:27:46,986:INFO:Declaring metric variables
2021-04-05 03:27:47,007:INFO:Defining Hyperparameters
2021-04-05 03:27:47,170:INFO:Tuning with n_jobs=-1
2021-04-05 03:27:47,170:INFO:Initializing RandomizedSearchCV
2021-04-05 03:27:49,197:INFO:best_params: {'actual_estimator__fit_intercept': False, 'actual_estimator__epsilon': 1.9, 'actual_estimator__alpha': 0.1}
2021-04-05 03:27:49,197:INFO:Hyperparameter search completed
2021-04-05 03:27:49,198:INFO:SubProcess create_model() called ==================================
2021-04-05 03:27:49,199:INFO:Initializing create_model()
2021-04-05 03:27:49,199:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E503D44D30>, kwargs={'fit_intercept': False, 'epsilon': 1.9, 'alpha': 0.1})
2021-04-05 03:27:49,199:INFO:Checking exceptions
2021-04-05 03:27:49,199:INFO:Importing libraries
2021-04-05 03:27:49,199:INFO:Copying training dataset
2021-04-05 03:27:49,201:INFO:Defining folds
2021-04-05 03:27:49,201:INFO:Declaring metric variables
2021-04-05 03:27:49,217:INFO:Importing untrained model
2021-04-05 03:27:49,218:INFO:Declaring custom model
2021-04-05 03:27:49,229:INFO:Huber Regressor Imported succesfully
2021-04-05 03:27:49,274:INFO:Starting cross validation
2021-04-05 03:27:49,275:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:49,482:INFO:Calculating mean and std
2021-04-05 03:27:49,484:INFO:Creating metrics dataframe
2021-04-05 03:27:49,516:INFO:Finalizing model
2021-04-05 03:27:49,569:INFO:Uploading results into container
2021-04-05 03:27:49,570:INFO:Uploading model into container now
2021-04-05 03:27:49,570:INFO:create_model_container: 19
2021-04-05 03:27:49,571:INFO:master_model_container: 19
2021-04-05 03:27:49,571:INFO:display_container: 4
2021-04-05 03:27:49,576:INFO:PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-05 03:27:49,577:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:49,717:INFO:SubProcess create_model() end ==================================
2021-04-05 03:27:49,718:INFO:Creating MLFlow logs
2021-04-05 03:27:49,736:INFO:Model: Huber Regressor
2021-04-05 03:27:49,803:INFO:logged params: {'alpha': 0.1, 'epsilon': 1.9, 'fit_intercept': False, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-05 03:27:49,962:INFO:Initializing predict_model()
2021-04-05 03:27:49,962:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:27:49,962:INFO:Checking exceptions
2021-04-05 03:27:49,962:INFO:Preloading libraries
2021-04-05 03:27:50,292:INFO:create_model_container: 19
2021-04-05 03:27:50,292:INFO:master_model_container: 19
2021-04-05 03:27:50,293:INFO:display_container: 4
2021-04-05 03:27:50,294:INFO:PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-05 03:27:50,294:INFO:tune_model() succesfully completed......................................
2021-04-05 03:27:50,432:INFO:Initializing plot_model()
2021-04-05 03:27:50,432:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:27:50,433:INFO:Checking exceptions
2021-04-05 03:27:50,433:INFO:Preparing display monitor
2021-04-05 03:27:50,448:INFO:Preloading libraries
2021-04-05 03:27:50,451:INFO:Copying training dataset
2021-04-05 03:27:50,452:INFO:Copying test dataset
2021-04-05 03:27:50,453:INFO:Plot type: residuals
2021-04-05 03:27:50,516:INFO:Fitting Model
2021-04-05 03:27:50,570:INFO:Scoring test/hold-out set
2021-04-05 03:27:51,283:INFO:Visual Rendered Successfully
2021-04-05 03:27:51,387:INFO:plot_model() succesfully completed......................................
2021-04-05 03:27:51,396:INFO:Initializing plot_model()
2021-04-05 03:27:51,397:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:27:51,398:INFO:Checking exceptions
2021-04-05 03:27:51,398:INFO:Preparing display monitor
2021-04-05 03:27:51,408:INFO:Preloading libraries
2021-04-05 03:27:51,412:INFO:Copying training dataset
2021-04-05 03:27:51,413:INFO:Copying test dataset
2021-04-05 03:27:51,413:INFO:Plot type: error
2021-04-05 03:27:51,416:INFO:Fitting Model
2021-04-05 03:27:51,417:INFO:Scoring test/hold-out set
2021-04-05 03:27:51,812:INFO:Visual Rendered Successfully
2021-04-05 03:27:51,919:INFO:plot_model() succesfully completed......................................
2021-04-05 03:27:51,928:INFO:Initializing plot_model()
2021-04-05 03:27:51,929:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:27:51,929:INFO:Checking exceptions
2021-04-05 03:27:51,929:INFO:Preparing display monitor
2021-04-05 03:27:51,941:INFO:Preloading libraries
2021-04-05 03:27:51,946:INFO:Copying training dataset
2021-04-05 03:27:51,946:INFO:Copying test dataset
2021-04-05 03:27:51,947:INFO:Plot type: feature
2021-04-05 03:27:52,211:INFO:Visual Rendered Successfully
2021-04-05 03:27:52,311:INFO:plot_model() succesfully completed......................................
2021-04-05 03:27:52,353:INFO:Initializing evaluate_model()
2021-04-05 03:27:52,354:INFO:evaluate_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-04-05 03:27:52,382:INFO:Initializing plot_model()
2021-04-05 03:27:52,383:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, save=False, scale=1, system=True)
2021-04-05 03:27:52,383:INFO:Checking exceptions
2021-04-05 03:27:52,383:INFO:Preparing display monitor
2021-04-05 03:27:52,396:INFO:Preloading libraries
2021-04-05 03:27:52,397:INFO:Copying training dataset
2021-04-05 03:27:52,398:INFO:Copying test dataset
2021-04-05 03:27:52,399:INFO:Plot type: parameter
2021-04-05 03:27:52,411:INFO:Visual Rendered Successfully
2021-04-05 03:27:52,542:INFO:plot_model() succesfully completed......................................
2021-04-05 03:27:52,554:INFO:Initializing automl()
2021-04-05 03:27:52,555:INFO:automl(optimize=RMSE, use_holdout=False)
2021-04-05 03:27:52,556:INFO:Model Selection Basis : CV Results on Training set
2021-04-05 03:27:52,562:INFO:Initializing create_model()
2021-04-05 03:27:52,562:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:27:52,562:INFO:Checking exceptions
2021-04-05 03:27:52,563:INFO:Importing libraries
2021-04-05 03:27:52,563:INFO:Copying training dataset
2021-04-05 03:27:52,563:INFO:Defining folds
2021-04-05 03:27:52,563:INFO:Declaring metric variables
2021-04-05 03:27:52,563:INFO:Importing untrained model
2021-04-05 03:27:52,563:INFO:Declaring custom model
2021-04-05 03:27:52,565:INFO:Huber Regressor Imported succesfully
2021-04-05 03:27:52,565:INFO:Cross validation set to False
2021-04-05 03:27:52,565:INFO:Fitting Model
2021-04-05 03:27:52,597:INFO:PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-05 03:27:52,597:INFO:create_models() succesfully completed......................................
2021-04-05 03:27:52,701:INFO:PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-05 03:27:52,701:INFO:automl() succesfully completed......................................
2021-04-05 03:27:52,713:INFO:Initializing predict_model()
2021-04-05 03:27:52,713:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:27:52,714:INFO:Checking exceptions
2021-04-05 03:27:52,714:INFO:Preloading libraries
2021-04-05 03:27:52,714:INFO:Preparing display monitor
2021-04-05 03:27:52,865:INFO:Initializing finalize_model()
2021-04-05 03:27:52,866:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-05 03:27:52,866:INFO:Finalizing PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-05 03:27:52,867:INFO:Initializing create_model()
2021-04-05 03:27:52,867:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-05 03:27:52,867:INFO:Checking exceptions
2021-04-05 03:27:52,867:INFO:Importing libraries
2021-04-05 03:27:52,867:INFO:Copying training dataset
2021-04-05 03:27:52,868:INFO:Defining folds
2021-04-05 03:27:52,868:INFO:Declaring metric variables
2021-04-05 03:27:52,868:INFO:Importing untrained model
2021-04-05 03:27:52,868:INFO:Declaring custom model
2021-04-05 03:27:52,869:INFO:Huber Regressor Imported succesfully
2021-04-05 03:27:52,869:INFO:Starting cross validation
2021-04-05 03:27:52,869:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-04-05 03:27:53,308:INFO:Calculating mean and std
2021-04-05 03:27:53,309:INFO:Creating metrics dataframe
2021-04-05 03:27:53,315:INFO:Finalizing model
2021-04-05 03:27:53,352:INFO:Uploading results into container
2021-04-05 03:27:53,352:INFO:Uploading model into container now
2021-04-05 03:27:53,352:INFO:create_model_container: 20
2021-04-05 03:27:53,352:INFO:master_model_container: 20
2021-04-05 03:27:53,352:INFO:display_container: 6
2021-04-05 03:27:53,353:INFO:PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-05 03:27:53,353:INFO:create_model() succesfully completed......................................
2021-04-05 03:27:53,449:INFO:Creating MLFlow logs
2021-04-05 03:27:53,457:INFO:Model: Huber Regressor
2021-04-05 03:27:53,505:INFO:logged params: {'alpha': 0.1, 'epsilon': 1.9, 'fit_intercept': False, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-04-05 03:27:53,635:INFO:Initializing predict_model()
2021-04-05 03:27:53,635:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None)
2021-04-05 03:27:53,636:INFO:Checking exceptions
2021-04-05 03:27:53,636:INFO:Preloading libraries
2021-04-05 03:27:53,929:INFO:create_model_container: 20
2021-04-05 03:27:53,929:INFO:master_model_container: 20
2021-04-05 03:27:53,929:INFO:display_container: 5
2021-04-05 03:27:53,930:INFO:PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-05 03:27:53,930:INFO:finalize_model() succesfully completed......................................
2021-04-05 03:27:54,082:INFO:Initializing predict_model()
2021-04-05 03:27:54,082:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:27:54,082:INFO:Checking exceptions
2021-04-05 03:27:54,083:INFO:Preloading libraries
2021-04-05 03:27:54,083:INFO:Preparing display monitor
2021-04-05 03:27:54,347:INFO:Initializing predict_model()
2021-04-05 03:27:54,347:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=0.1, epsilon=1.9, fit_intercept=False,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.1, epsilon=1.9,
                                                         fit_intercept=False,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-05 03:27:54,348:INFO:Checking exceptions
2021-04-05 03:27:54,348:INFO:Preloading libraries
2021-04-05 03:27:54,348:INFO:Preparing display monitor
2021-04-05 03:27:54,668:INFO:Initializing save_model()
2021-04-05 03:27:54,668:INFO:save_model(model=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=786,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=786, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), model_name=saved_models/best_4th_model_to_predict_CollegeEnrollmentRate_Huber, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                ('fix_perfect', Remove_100(target='College Enrollment Rate')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='College Enrollment '
                                                       'Rate',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2021-04-05 03:27:54,668:INFO:Adding model into prep_pipe
2021-04-05 03:27:54,698:INFO:saved_models/best_4th_model_to_predict_CollegeEnrollmentRate_Huber.pkl saved in current working directory
2021-04-05 03:27:54,709:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[],
                                      target='College Enrollment Rate',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                nu...
                 PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                                 fit_intercept=True,
                                                 max_iter=None, normalize=False,
                                                 power_transformer_method='box-cox',
                                                 power_transformer_standardize=True,
                                                 random_state=786,
                                                 regressor=Ridge(alpha=1.0,
                                                                 copy_X=True,
                                                                 fit_intercept=True,
                                                                 max_iter=None,
                                                                 normalize=False,
                                                                 random_state=786,
                                                                 solver='auto',
                                                                 tol=0.001),
                                                 solver='auto', tol=0.001)]],
         verbose=False)
2021-04-05 03:27:54,709:INFO:save_model() succesfully completed......................................
